// Generated from ObjectiveCParser.g4 by ANTLR 4.9
// jshint ignore: start
import antlr4 from 'antlr4';
import ObjectiveCParserListener from './ObjectiveCParserListener.js';

const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
	"\u5964\u0003\u00f5\u076a\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
	"\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
	"\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
	"\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
	"\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
	"\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
	"\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
	"\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
	"\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
	"\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
	"*\t*\u0004+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u0004",
	"1\t1\u00042\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u0004",
	"8\t8\u00049\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004",
	"?\t?\u0004@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004",
	"F\tF\u0004G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004",
	"M\tM\u0004N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004",
	"T\tT\u0004U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004",
	"[\t[\u0004\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004",
	"b\tb\u0004c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004",
	"i\ti\u0004j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004",
	"p\tp\u0004q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004",
	"w\tw\u0004x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004",
	"~\t~\u0004\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004",
	"\u0082\t\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t",
	"\u0085\u0004\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004",
	"\u0089\t\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t",
	"\u008c\u0004\u008d\t\u008d\u0004\u008e\t\u008e\u0004\u008f\t\u008f\u0004",
	"\u0090\t\u0090\u0004\u0091\t\u0091\u0004\u0092\t\u0092\u0004\u0093\t",
	"\u0093\u0004\u0094\t\u0094\u0004\u0095\t\u0095\u0004\u0096\t\u0096\u0003",
	"\u0002\u0007\u0002\u012e\n\u0002\f\u0002\u000e\u0002\u0131\u000b\u0002",
	"\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
	"\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
	"\u0003\u0003\u0005\u0003\u0140\n\u0003\u0003\u0004\u0003\u0004\u0003",
	"\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u0148\n\u0004",
	"\u0003\u0004\u0005\u0004\u014b\n\u0004\u0003\u0004\u0003\u0004\u0003",
	"\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0005\u0004\u0153\n\u0004",
	"\u0003\u0005\u0005\u0005\u0156\n\u0005\u0003\u0005\u0003\u0005\u0007",
	"\u0005\u015a\n\u0005\f\u0005\u000e\u0005\u015d\u000b\u0005\u0003\u0005",
	"\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0163\n\u0005\u0003",
	"\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u0169\n\u0005",
	"\u0003\u0005\u0005\u0005\u016c\n\u0005\u0003\u0005\u0005\u0005\u016f",
	"\n\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0007\u0006",
	"\u0175\n\u0006\f\u0006\u000e\u0006\u0178\u000b\u0006\u0003\u0006\u0003",
	"\u0006\u0003\u0006\u0003\u0006\u0005\u0006\u017e\n\u0006\u0003\u0006",
	"\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005\u0006\u0185\n",
	"\u0006\u0003\u0006\u0005\u0006\u0188\n\u0006\u0003\u0006\u0005\u0006",
	"\u018b\n\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003",
	"\u0007\u0003\u0007\u0005\u0007\u0193\n\u0007\u0003\u0007\u0005\u0007",
	"\u0196\n\u0007\u0003\u0007\u0005\u0007\u0199\n\u0007\u0003\u0007\u0003",
	"\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\b\u01a3",
	"\n\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t",
	"\u0005\t\u01ad\n\t\u0003\n\u0003\n\u0007\n\u01b1\n\n\f\n\u000e\n\u01b4",
	"\u000b\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0005\n\u01bc",
	"\n\n\u0003\n\u0007\n\u01bf\n\n\f\n\u000e\n\u01c2\u000b\n\u0003\n\u0003",
	"\n\u0003\u000b\u0003\u000b\u0007\u000b\u01c8\n\u000b\f\u000b\u000e\u000b",
	"\u01cb\u000b\u000b\u0003\u000b\u0006\u000b\u01ce\n\u000b\r\u000b\u000e",
	"\u000b\u01cf\u0005\u000b\u01d2\n\u000b\u0003\f\u0003\f\u0003\f\u0003",
	"\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0005\r\u01dd\n\r\u0003\u000e",
	"\u0003\u000e\u0003\u000e\u0003\u000e\u0007\u000e\u01e3\n\u000e\f\u000e",
	"\u000e\u000e\u01e6\u000b\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003",
	"\u000f\u0003\u000f\u0007\u000f\u01ed\n\u000f\f\u000f\u000e\u000f\u01f0",
	"\u000b\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
	"\u0005\u0010\u01f7\n\u0010\u0003\u0010\u0005\u0010\u01fa\n\u0010\u0003",
	"\u0010\u0005\u0010\u01fd\n\u0010\u0003\u0010\u0003\u0010\u0003\u0011",
	"\u0003\u0011\u0003\u0011\u0007\u0011\u0204\n\u0011\f\u0011\u000e\u0011",
	"\u0207\u000b\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
	"\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
	"\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
	"\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0005\u0012\u021d\n\u0012",
	"\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0005\u0013",
	"\u0224\n\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0005\u0013\u0229",
	"\n\u0013\u0005\u0013\u022b\n\u0013\u0003\u0014\u0003\u0014\u0007\u0014",
	"\u022f\n\u0014\f\u0014\u000e\u0014\u0232\u000b\u0014\u0003\u0014\u0003",
	"\u0014\u0003\u0015\u0003\u0015\u0007\u0015\u0238\n\u0015\f\u0015\u000e",
	"\u0015\u023b\u000b\u0015\u0003\u0015\u0006\u0015\u023e\n\u0015\r\u0015",
	"\u000e\u0015\u023f\u0005\u0015\u0242\n\u0015\u0003\u0016\u0003\u0016",
	"\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0006\u0017",
	"\u024b\n\u0017\r\u0017\u000e\u0017\u024c\u0003\u0018\u0003\u0018\u0003",
	"\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u001a\u0005\u001a\u0256",
	"\n\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0007\u001a\u025b\n\u001a",
	"\f\u001a\u000e\u001a\u025e\u000b\u001a\u0003\u001a\u0003\u001a\u0003",
	"\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0006\u001b\u0267",
	"\n\u001b\r\u001b\u000e\u001b\u0268\u0003\u001c\u0003\u001c\u0003\u001c",
	"\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001e\u0005\u001e\u0272\n",
	"\u001e\u0003\u001e\u0003\u001e\u0005\u001e\u0276\n\u001e\u0003\u001e",
	"\u0005\u001e\u0279\n\u001e\u0003\u001e\u0003\u001e\u0003\u001f\u0003",
	"\u001f\u0006\u001f\u027f\n\u001f\r\u001f\u000e\u001f\u0280\u0003\u001f",
	"\u0003\u001f\u0005\u001f\u0285\n\u001f\u0005\u001f\u0287\n\u001f\u0003",
	" \u0005 \u028a\n \u0003 \u0003 \u0007 \u028e\n \f \u000e \u0291\u000b",
	" \u0003 \u0005 \u0294\n \u0003 \u0003 \u0003!\u0003!\u0005!\u029a\n",
	"!\u0003\"\u0003\"\u0003\"\u0003\"\u0003#\u0003#\u0003#\u0003#\u0003",
	"#\u0003#\u0003#\u0003#\u0005#\u02a8\n#\u0003$\u0003$\u0003$\u0007$\u02ad",
	"\n$\f$\u000e$\u02b0\u000b$\u0003%\u0003%\u0003%\u0005%\u02b5\n%\u0003",
	"&\u0005&\u02b8\n&\u0003&\u0003&\u0005&\u02bc\n&\u0003&\u0003&\u0003",
	"&\u0003&\u0005&\u02c2\n&\u0003&\u0003&\u0005&\u02c6\n&\u0003\'\u0003",
	"\'\u0003\'\u0003\'\u0007\'\u02cc\n\'\f\'\u000e\'\u02cf\u000b\'\u0005",
	"\'\u02d1\n\'\u0003\'\u0003\'\u0003(\u0007(\u02d6\n(\f(\u000e(\u02d9",
	"\u000b(\u0003(\u0003(\u0003)\u0003)\u0003)\u0003)\u0003)\u0007)\u02e2",
	"\n)\f)\u000e)\u02e5\u000b)\u0003)\u0005)\u02e8\n)\u0005)\u02ea\n)\u0003",
	")\u0003)\u0003*\u0003*\u0003*\u0003*\u0003+\u0003+\u0003+\u0003+\u0005",
	"+\u02f6\n+\u0005+\u02f8\n+\u0003+\u0003+\u0003,\u0003,\u0003,\u0003",
	",\u0003,\u0003,\u0003,\u0003,\u0005,\u0304\n,\u0005,\u0306\n,\u0003",
	"-\u0003-\u0003-\u0005-\u030b\n-\u0003-\u0003-\u0007-\u030f\n-\f-\u000e",
	"-\u0312\u000b-\u0005-\u0314\n-\u0003-\u0003-\u0003.\u0003.\u0005.\u031a",
	"\n.\u0003/\u0003/\u0005/\u031e\n/\u0003/\u0005/\u0321\n/\u0003/\u0005",
	"/\u0324\n/\u0003/\u0003/\u00030\u00030\u00030\u00030\u00030\u00031\u0003",
	"1\u00051\u032f\n1\u00032\u00032\u00062\u0333\n2\r2\u000e2\u0334\u0005",
	"2\u0337\n2\u00033\u00053\u033a\n3\u00033\u00033\u00033\u00033\u0007",
	"3\u0340\n3\f3\u000e3\u0343\u000b3\u00034\u00034\u00054\u0347\n4\u0003",
	"4\u00034\u00034\u00034\u00054\u034d\n4\u00035\u00035\u00035\u00035\u0003",
	"5\u00036\u00036\u00056\u0356\n6\u00036\u00066\u0359\n6\r6\u000e6\u035a",
	"\u00056\u035d\n6\u00037\u00037\u00037\u00037\u00037\u00038\u00038\u0003",
	"8\u00038\u00038\u00039\u00039\u00039\u0003:\u0003:\u0003:\u0003:\u0003",
	":\u0003:\u0003:\u0005:\u0373\n:\u0003;\u0003;\u0003;\u0007;\u0378\n",
	";\f;\u000e;\u037b\u000b;\u0003;\u0003;\u0005;\u037f\n;\u0003<\u0003",
	"<\u0003<\u0003<\u0003<\u0003<\u0003=\u0003=\u0003=\u0003=\u0003=\u0003",
	"=\u0003>\u0003>\u0003>\u0003?\u0003?\u0003?\u0007?\u0393\n?\f?\u000e",
	"?\u0396\u000b?\u0003?\u0003?\u0003@\u0003@\u0003@\u0007@\u039d\n@\f",
	"@\u000e@\u03a0\u000b@\u0003@\u0003@\u0003A\u0005A\u03a5\nA\u0003A\u0003",
	"A\u0003A\u0005A\u03aa\nA\u0003A\u0003A\u0003A\u0005A\u03af\nA\u0003",
	"B\u0005B\u03b2\nB\u0003B\u0003B\u0003B\u0005B\u03b7\nB\u0003B\u0005",
	"B\u03ba\nB\u0003B\u0003B\u0003B\u0003B\u0005B\u03c0\nB\u0003B\u0003",
	"B\u0003B\u0005B\u03c5\nB\u0003C\u0003C\u0005C\u03c9\nC\u0003D\u0003",
	"D\u0005D\u03cd\nD\u0003E\u0003E\u0005E\u03d1\nE\u0003E\u0003E\u0003",
	"F\u0003F\u0003F\u0007F\u03d8\nF\fF\u000eF\u03db\u000bF\u0003G\u0003",
	"G\u0003G\u0003G\u0005G\u03e1\nG\u0003H\u0003H\u0003H\u0003H\u0003H\u0005",
	"H\u03e8\nH\u0003I\u0003I\u0003I\u0003I\u0005I\u03ee\nI\u0003J\u0005",
	"J\u03f1\nJ\u0003J\u0003J\u0005J\u03f5\nJ\u0003J\u0003J\u0003J\u0003",
	"J\u0003J\u0003K\u0003K\u0007K\u03fe\nK\fK\u000eK\u0401\u000bK\u0003",
	"K\u0005K\u0404\nK\u0003K\u0003K\u0005K\u0408\nK\u0003K\u0003K\u0007",
	"K\u040c\nK\fK\u000eK\u040f\u000bK\u0003K\u0003K\u0003L\u0005L\u0414",
	"\nL\u0003L\u0003L\u0003L\u0003L\u0005L\u041a\nL\u0003L\u0003L\u0007",
	"L\u041e\nL\fL\u000eL\u0421\u000bL\u0003L\u0003L\u0003M\u0005M\u0426",
	"\nM\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003",
	"M\u0005M\u0432\nM\u0003M\u0003M\u0007M\u0436\nM\fM\u000eM\u0439\u000b",
	"M\u0003M\u0003M\u0003N\u0003N\u0003N\u0007N\u0440\nN\fN\u000eN\u0443",
	"\u000bN\u0003O\u0005O\u0446\nO\u0003O\u0003O\u0003P\u0003P\u0003P\u0003",
	"P\u0003P\u0006P\u044f\nP\rP\u000eP\u0450\u0003Q\u0003Q\u0003Q\u0003",
	"Q\u0006Q\u0457\nQ\rQ\u000eQ\u0458\u0003R\u0003R\u0003R\u0006R\u045e",
	"\nR\rR\u000eR\u045f\u0003S\u0003S\u0003S\u0003S\u0003S\u0003S\u0007",
	"S\u0468\nS\fS\u000eS\u046b\u000bS\u0003S\u0003S\u0003S\u0003T\u0003",
	"T\u0003T\u0007T\u0473\nT\fT\u000eT\u0476\u000bT\u0003U\u0003U\u0003",
	"U\u0007U\u047b\nU\fU\u000eU\u047e\u000bU\u0003U\u0003U\u0005U\u0482",
	"\nU\u0003V\u0003V\u0003V\u0005V\u0487\nV\u0003V\u0003V\u0006V\u048b",
	"\nV\rV\u000eV\u048c\u0003V\u0003V\u0005V\u0491\nV\u0003W\u0003W\u0003",
	"W\u0003W\u0005W\u0497\nW\u0003W\u0003W\u0007W\u049b\nW\fW\u000eW\u049e",
	"\u000bW\u0003W\u0003W\u0003X\u0003X\u0006X\u04a4\nX\rX\u000eX\u04a5",
	"\u0003Y\u0003Y\u0003Y\u0003Y\u0003Y\u0003Y\u0005Y\u04ae\nY\u0003Z\u0003",
	"Z\u0003[\u0003[\u0003\\\u0003\\\u0003]\u0003]\u0003^\u0003^\u0003^\u0003",
	"^\u0005^\u04bc\n^\u0003_\u0003_\u0003`\u0006`\u04c1\n`\r`\u000e`\u04c2",
	"\u0003`\u0003`\u0003`\u0003`\u0003`\u0005`\u04ca\n`\u0003`\u0005`\u04cd",
	"\n`\u0003a\u0003a\u0003a\u0003a\u0003a\u0003b\u0003b\u0003b\u0007b\u04d7",
	"\nb\fb\u000eb\u04da\u000bb\u0003c\u0003c\u0005c\u04de\nc\u0003c\u0003",
	"c\u0005c\u04e2\nc\u0003d\u0003d\u0005d\u04e6\nd\u0003d\u0003d\u0005",
	"d\u04ea\nd\u0003d\u0003d\u0003d\u0003d\u0003d\u0005d\u04f1\nd\u0003",
	"d\u0003d\u0003d\u0003d\u0005d\u04f7\nd\u0003d\u0003d\u0003d\u0003d\u0003",
	"d\u0005d\u04fe\nd\u0003d\u0003d\u0003d\u0003d\u0003d\u0005d\u0505\n",
	"d\u0003e\u0003e\u0003e\u0007e\u050a\ne\fe\u000ee\u050d\u000be\u0003",
	"e\u0005e\u0510\ne\u0003f\u0003f\u0003f\u0007f\u0515\nf\ff\u000ef\u0518",
	"\u000bf\u0003f\u0003f\u0005f\u051c\nf\u0003g\u0003g\u0005g\u0520\ng",
	"\u0003h\u0003h\u0003h\u0003h\u0003h\u0005h\u0527\nh\u0003h\u0007h\u052a",
	"\nh\fh\u000eh\u052d\u000bh\u0003h\u0003h\u0003h\u0005h\u0532\nh\u0003",
	"h\u0005h\u0535\nh\u0003h\u0003h\u0005h\u0539\nh\u0003i\u0003i\u0005",
	"i\u053d\ni\u0003i\u0003i\u0003j\u0003j\u0003j\u0005j\u0544\nj\u0003",
	"k\u0003k\u0005k\u0548\nk\u0003k\u0005k\u054b\nk\u0003l\u0003l\u0003",
	"l\u0003l\u0003l\u0003l\u0003l\u0007l\u0554\nl\fl\u000el\u0557\u000b",
	"l\u0003l\u0003l\u0003l\u0003l\u0007l\u055d\nl\fl\u000el\u0560\u000b",
	"l\u0003l\u0005l\u0563\nl\u0005l\u0565\nl\u0003l\u0003l\u0003l\u0005",
	"l\u056a\nl\u0007l\u056c\nl\fl\u000el\u056f\u000bl\u0003l\u0003l\u0005",
	"l\u0573\nl\u0003m\u0003m\u0003m\u0005m\u0578\nm\u0005m\u057a\nm\u0003",
	"m\u0003m\u0003n\u0003n\u0003n\u0003n\u0003n\u0003n\u0007n\u0584\nn\f",
	"n\u000en\u0587\u000bn\u0003n\u0005n\u058a\nn\u0005n\u058c\nn\u0003n",
	"\u0003n\u0003o\u0003o\u0003o\u0007o\u0593\no\fo\u000eo\u0596\u000bo",
	"\u0003o\u0005o\u0599\no\u0003p\u0003p\u0005p\u059d\np\u0003p\u0003p",
	"\u0005p\u05a1\np\u0003q\u0003q\u0005q\u05a5\nq\u0003q\u0003q\u0005q",
	"\u05a9\nq\u0003q\u0003q\u0006q\u05ad\nq\rq\u000eq\u05ae\u0003q\u0003",
	"q\u0005q\u05b3\nq\u0003q\u0006q\u05b6\nq\rq\u000eq\u05b7\u0005q\u05ba",
	"\nq\u0003r\u0003r\u0005r\u05be\nr\u0003r\u0003r\u0003r\u0005r\u05c3",
	"\nr\u0003r\u0005r\u05c6\nr\u0003s\u0003s\u0003s\u0007s\u05cb\ns\fs\u000e",
	"s\u05ce\u000bs\u0003t\u0003t\u0005t\u05d2\nt\u0003t\u0003t\u0005t\u05d6",
	"\nt\u0003u\u0005u\u05d9\nu\u0003u\u0003u\u0003v\u0003v\u0005v\u05df",
	"\nv\u0003v\u0003v\u0005v\u05e3\nv\u0003v\u0003v\u0005v\u05e7\nv\u0003",
	"v\u0003v\u0005v\u05eb\nv\u0003v\u0003v\u0005v\u05ef\nv\u0003v\u0003",
	"v\u0005v\u05f3\nv\u0003v\u0003v\u0005v\u05f7\nv\u0003v\u0003v\u0005",
	"v\u05fb\nv\u0003v\u0003v\u0005v\u05ff\nv\u0003v\u0003v\u0005v\u0603",
	"\nv\u0003v\u0005v\u0606\nv\u0003w\u0003w\u0003w\u0003w\u0003x\u0003",
	"x\u0003x\u0005x\u060f\nx\u0003y\u0003y\u0003y\u0007y\u0614\ny\fy\u000e",
	"y\u0617\u000by\u0003y\u0003y\u0003z\u0003z\u0003z\u0003z\u0003z\u0003",
	"z\u0003z\u0005z\u0622\nz\u0003z\u0005z\u0625\nz\u0003{\u0003{\u0003",
	"{\u0003{\u0003{\u0003{\u0003|\u0003|\u0007|\u062f\n|\f|\u000e|\u0632",
	"\u000b|\u0003|\u0003|\u0003}\u0006}\u0637\n}\r}\u000e}\u0638\u0003}",
	"\u0006}\u063c\n}\r}\u000e}\u063d\u0003~\u0003~\u0003~\u0003~\u0003~",
	"\u0003~\u0005~\u0646\n~\u0003~\u0003~\u0003~\u0003~\u0005~\u064c\n~",
	"\u0003\u007f\u0003\u007f\u0003\u007f\u0003\u007f\u0005\u007f\u0652\n",
	"\u007f\u0003\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0003",
	"\u0080\u0003\u0081\u0003\u0081\u0003\u0081\u0003\u0081\u0003\u0081\u0003",
	"\u0081\u0003\u0081\u0003\u0081\u0003\u0082\u0003\u0082\u0003\u0082\u0005",
	"\u0082\u0665\n\u0082\u0003\u0082\u0003\u0082\u0005\u0082\u0669\n\u0082",
	"\u0003\u0082\u0003\u0082\u0005\u0082\u066d\n\u0082\u0003\u0082\u0003",
	"\u0082\u0003\u0082\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0005",
	"\u0083\u0676\n\u0083\u0003\u0084\u0003\u0084\u0003\u0084\u0003\u0084",
	"\u0003\u0084\u0005\u0084\u067d\n\u0084\u0003\u0084\u0003\u0084\u0003",
	"\u0084\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003",
	"\u0085\u0005\u0085\u0688\n\u0085\u0005\u0085\u068a\n\u0085\u0003\u0086",
	"\u0003\u0086\u0003\u0086\u0007\u0086\u068f\n\u0086\f\u0086\u000e\u0086",
	"\u0692\u000b\u0086\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003",
	"\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0005",
	"\u0087\u069e\n\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087",
	"\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087",
	"\u0003\u0087\u0005\u0087\u06ab\n\u0087\u0003\u0087\u0003\u0087\u0003",
	"\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003",
	"\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003",
	"\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003",
	"\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0005\u0087\u06c6",
	"\n\u0087\u0003\u0087\u0003\u0087\u0007\u0087\u06ca\n\u0087\f\u0087\u000e",
	"\u0087\u06cd\u000b\u0087\u0003\u0088\u0003\u0088\u0003\u0089\u0003\u0089",
	"\u0003\u0089\u0003\u0089\u0003\u0089\u0003\u0089\u0003\u0089\u0005\u0089",
	"\u06d8\n\u0089\u0005\u0089\u06da\n\u0089\u0003\u008a\u0003\u008a\u0003",
	"\u008a\u0005\u008a\u06df\n\u008a\u0003\u008b\u0003\u008b\u0005\u008b",
	"\u06e3\n\u008b\u0003\u008c\u0003\u008c\u0003\u008c\u0003\u008c\u0003",
	"\u008c\u0003\u008c\u0003\u008c\u0005\u008c\u06ec\n\u008c\u0003\u008c",
	"\u0003\u008c\u0003\u008c\u0003\u008c\u0003\u008c\u0005\u008c\u06f3\n",
	"\u008c\u0003\u008d\u0003\u008d\u0003\u008e\u0003\u008e\u0003\u008e\u0007",
	"\u008e\u06fa\n\u008e\f\u008e\u000e\u008e\u06fd\u000b\u008e\u0003\u008e",
	"\u0003\u008e\u0003\u008e\u0003\u008e\u0007\u008e\u0703\n\u008e\f\u008e",
	"\u000e\u008e\u0706\u000b\u008e\u0007\u008e\u0708\n\u008e\f\u008e\u000e",
	"\u008e\u070b\u000b\u008e\u0003\u008f\u0003\u008f\u0003\u008f\u0003\u008f",
	"\u0003\u008f\u0003\u008f\u0005\u008f\u0713\n\u008f\u0003\u008f\u0003",
	"\u008f\u0003\u008f\u0003\u008f\u0006\u008f\u0719\n\u008f\r\u008f\u000e",
	"\u008f\u071a\u0003\u008f\u0003\u008f\u0005\u008f\u071f\n\u008f\u0003",
	"\u0090\u0003\u0090\u0003\u0090\u0007\u0090\u0724\n\u0090\f\u0090\u000e",
	"\u0090\u0727\u000b\u0090\u0003\u0091\u0003\u0091\u0005\u0091\u072b\n",
	"\u0091\u0003\u0092\u0003\u0092\u0003\u0092\u0003\u0092\u0003\u0092\u0005",
	"\u0092\u0732\n\u0092\u0003\u0092\u0005\u0092\u0735\n\u0092\u0003\u0093",
	"\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093",
	"\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093\u0003\u0093",
	"\u0003\u0093\u0003\u0093\u0005\u0093\u0746\n\u0093\u0003\u0094\u0003",
	"\u0094\u0003\u0094\u0003\u0094\u0005\u0094\u074c\n\u0094\u0003\u0094",
	"\u0003\u0094\u0005\u0094\u0750\n\u0094\u0003\u0094\u0003\u0094\u0003",
	"\u0094\u0003\u0094\u0003\u0094\u0003\u0094\u0003\u0094\u0003\u0094\u0005",
	"\u0094\u075a\n\u0094\u0003\u0095\u0003\u0095\u0007\u0095\u075e\n\u0095",
	"\f\u0095\u000e\u0095\u0761\u000b\u0095\u0003\u0095\u0006\u0095\u0764",
	"\n\u0095\r\u0095\u000e\u0095\u0765\u0003\u0096\u0003\u0096\u0003\u0096",
	"\u0002\u0004\u010c\u011a\u0097\u0002\u0004\u0006\b\n\f\u000e\u0010\u0012",
	"\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*,.02468:<>@BDFHJLNPRTVXZ",
	"\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a\u008c\u008e",
	"\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2\u00a4\u00a6",
	"\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba\u00bc\u00be",
	"\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2\u00d4\u00d6",
	"\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea\u00ec\u00ee",
	"\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102\u0104\u0106",
	"\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c\u011e",
	"\u0120\u0122\u0124\u0126\u0128\u012a\u0002\u0019\u0004\u0002HHMM\u0003",
	"\u0002\\]\u0005\u0002FFIIKL\u0004\u0002\u001d\u001d  \u0006\u0002WW",
	"``bbdd\u0003\u0002eh\u0006\u0002\u0003\u0003\u000e\u000e\u0016\u0016",
	"\u001c\u001c\u0006\u0002\u0013\u0013X[__ii\u0005\u0002,-0156\b\u0002",
	"\u0006\u0006\u000b\u000b\u000f\u000f\u0014\u0015\u0019\u001a!\"\u0004",
	"\u0002jlnn\u0004\u0002\u00a7\u00a8\u00ac\u00ac\u0003\u0002\u00a5\u00a6",
	"\u0004\u0002\u0097\u0098\u009e\u009f\u0004\u0002\u009d\u009d\u00a0\u00a0",
	"\u0004\u0002\u0096\u0096\u00ad\u00b6\u0003\u0002\u00a3\u00a4\u0005\u0002",
	"\u0099\u009a\u00a5\u00a7\u00a9\u00a9\u0003\u0002\u0093\u0094\u0003\u0002",
	"\u008c\u008c\u0004\u0002\u008a\u008a\u00be\u00bf\u0004\u0002\u00c5\u00c5",
	"\u00c7\u00c7\u000b\u0002*15:SUWXZ_cceko{\u008a\u008a\u0002\u0849\u0002",
	"\u012f\u0003\u0002\u0002\u0002\u0004\u013f\u0003\u0002\u0002\u0002\u0006",
	"\u0141\u0003\u0002\u0002\u0002\b\u0155\u0003\u0002\u0002\u0002\n\u0176",
	"\u0003\u0002\u0002\u0002\f\u018e\u0003\u0002\u0002\u0002\u000e\u019c",
	"\u0003\u0002\u0002\u0002\u0010\u01a6\u0003\u0002\u0002\u0002\u0012\u01b2",
	"\u0003\u0002\u0002\u0002\u0014\u01d1\u0003\u0002\u0002\u0002\u0016\u01d3",
	"\u0003\u0002\u0002\u0002\u0018\u01d7\u0003\u0002\u0002\u0002\u001a\u01de",
	"\u0003\u0002\u0002\u0002\u001c\u01e9\u0003\u0002\u0002\u0002\u001e\u01f1",
	"\u0003\u0002\u0002\u0002 \u0200\u0003\u0002\u0002\u0002\"\u021c\u0003",
	"\u0002\u0002\u0002$\u022a\u0003\u0002\u0002\u0002&\u022c\u0003\u0002",
	"\u0002\u0002(\u0241\u0003\u0002\u0002\u0002*\u0243\u0003\u0002\u0002",
	"\u0002,\u024a\u0003\u0002\u0002\u0002.\u024e\u0003\u0002\u0002\u0002",
	"0\u0251\u0003\u0002\u0002\u00022\u0255\u0003\u0002\u0002\u00024\u0266",
	"\u0003\u0002\u0002\u00026\u026a\u0003\u0002\u0002\u00028\u026d\u0003",
	"\u0002\u0002\u0002:\u0271\u0003\u0002\u0002\u0002<\u0286\u0003\u0002",
	"\u0002\u0002>\u0289\u0003\u0002\u0002\u0002@\u0299\u0003\u0002\u0002",
	"\u0002B\u029b\u0003\u0002\u0002\u0002D\u02a7\u0003\u0002\u0002\u0002",
	"F\u02a9\u0003\u0002\u0002\u0002H\u02b1\u0003\u0002\u0002\u0002J\u02b7",
	"\u0003\u0002\u0002\u0002L\u02c7\u0003\u0002\u0002\u0002N\u02d7\u0003",
	"\u0002\u0002\u0002P\u02dc\u0003\u0002\u0002\u0002R\u02ed\u0003\u0002",
	"\u0002\u0002T\u02f1\u0003\u0002\u0002\u0002V\u0305\u0003\u0002\u0002",
	"\u0002X\u0307\u0003\u0002\u0002\u0002Z\u0319\u0003\u0002\u0002\u0002",
	"\\\u031b\u0003\u0002\u0002\u0002^\u0327\u0003\u0002\u0002\u0002`\u032e",
	"\u0003\u0002\u0002\u0002b\u0336\u0003\u0002\u0002\u0002d\u0339\u0003",
	"\u0002\u0002\u0002f\u0344\u0003\u0002\u0002\u0002h\u034e\u0003\u0002",
	"\u0002\u0002j\u035c\u0003\u0002\u0002\u0002l\u035e\u0003\u0002\u0002",
	"\u0002n\u0363\u0003\u0002\u0002\u0002p\u0368\u0003\u0002\u0002\u0002",
	"r\u0372\u0003\u0002\u0002\u0002t\u0374\u0003\u0002\u0002\u0002v\u0380",
	"\u0003\u0002\u0002\u0002x\u0386\u0003\u0002\u0002\u0002z\u038c\u0003",
	"\u0002\u0002\u0002|\u038f\u0003\u0002\u0002\u0002~\u0399\u0003\u0002",
	"\u0002\u0002\u0080\u03a4\u0003\u0002\u0002\u0002\u0082\u03b1\u0003\u0002",
	"\u0002\u0002\u0084\u03c6\u0003\u0002\u0002\u0002\u0086\u03cc\u0003\u0002",
	"\u0002\u0002\u0088\u03ce\u0003\u0002\u0002\u0002\u008a\u03d4\u0003\u0002",
	"\u0002\u0002\u008c\u03e0\u0003\u0002\u0002\u0002\u008e\u03e2\u0003\u0002",
	"\u0002\u0002\u0090\u03ed\u0003\u0002\u0002\u0002\u0092\u03f0\u0003\u0002",
	"\u0002\u0002\u0094\u03ff\u0003\u0002\u0002\u0002\u0096\u0413\u0003\u0002",
	"\u0002\u0002\u0098\u0425\u0003\u0002\u0002\u0002\u009a\u043c\u0003\u0002",
	"\u0002\u0002\u009c\u0445\u0003\u0002\u0002\u0002\u009e\u044e\u0003\u0002",
	"\u0002\u0002\u00a0\u0456\u0003\u0002\u0002\u0002\u00a2\u045d\u0003\u0002",
	"\u0002\u0002\u00a4\u0461\u0003\u0002\u0002\u0002\u00a6\u046f\u0003\u0002",
	"\u0002\u0002\u00a8\u0477\u0003\u0002\u0002\u0002\u00aa\u0483\u0003\u0002",
	"\u0002\u0002\u00ac\u0496\u0003\u0002\u0002\u0002\u00ae\u04a3\u0003\u0002",
	"\u0002\u0002\u00b0\u04ad\u0003\u0002\u0002\u0002\u00b2\u04af\u0003\u0002",
	"\u0002\u0002\u00b4\u04b1\u0003\u0002\u0002\u0002\u00b6\u04b3\u0003\u0002",
	"\u0002\u0002\u00b8\u04b5\u0003\u0002\u0002\u0002\u00ba\u04bb\u0003\u0002",
	"\u0002\u0002\u00bc\u04bd\u0003\u0002\u0002\u0002\u00be\u04c9\u0003\u0002",
	"\u0002\u0002\u00c0\u04ce\u0003\u0002\u0002\u0002\u00c2\u04d3\u0003\u0002",
	"\u0002\u0002\u00c4\u04e1\u0003\u0002\u0002\u0002\u00c6\u0504\u0003\u0002",
	"\u0002\u0002\u00c8\u0506\u0003\u0002\u0002\u0002\u00ca\u0511\u0003\u0002",
	"\u0002\u0002\u00cc\u051f\u0003\u0002\u0002\u0002\u00ce\u0538\u0003\u0002",
	"\u0002\u0002\u00d0\u053a\u0003\u0002\u0002\u0002\u00d2\u0540\u0003\u0002",
	"\u0002\u0002\u00d4\u0545\u0003\u0002\u0002\u0002\u00d6\u054c\u0003\u0002",
	"\u0002\u0002\u00d8\u0574\u0003\u0002\u0002\u0002\u00da\u057d\u0003\u0002",
	"\u0002\u0002\u00dc\u058f\u0003\u0002\u0002\u0002\u00de\u05a0\u0003\u0002",
	"\u0002\u0002\u00e0\u05b9\u0003\u0002\u0002\u0002\u00e2\u05c5\u0003\u0002",
	"\u0002\u0002\u00e4\u05c7\u0003\u0002\u0002\u0002\u00e6\u05d5\u0003\u0002",
	"\u0002\u0002\u00e8\u05d8\u0003\u0002\u0002\u0002\u00ea\u0605\u0003\u0002",
	"\u0002\u0002\u00ec\u0607\u0003\u0002\u0002\u0002\u00ee\u060b\u0003\u0002",
	"\u0002\u0002\u00f0\u0610\u0003\u0002\u0002\u0002\u00f2\u0624\u0003\u0002",
	"\u0002\u0002\u00f4\u0626\u0003\u0002\u0002\u0002\u00f6\u062c\u0003\u0002",
	"\u0002\u0002\u00f8\u0636\u0003\u0002\u0002\u0002\u00fa\u064b\u0003\u0002",
	"\u0002\u0002\u00fc\u0651\u0003\u0002\u0002\u0002\u00fe\u0653\u0003\u0002",
	"\u0002\u0002\u0100\u0659\u0003\u0002\u0002\u0002\u0102\u0661\u0003\u0002",
	"\u0002\u0002\u0104\u0675\u0003\u0002\u0002\u0002\u0106\u0677\u0003\u0002",
	"\u0002\u0002\u0108\u0689\u0003\u0002\u0002\u0002\u010a\u068b\u0003\u0002",
	"\u0002\u0002\u010c\u069d\u0003\u0002\u0002\u0002\u010e\u06ce\u0003\u0002",
	"\u0002\u0002\u0110\u06d9\u0003\u0002\u0002\u0002\u0112\u06de\u0003\u0002",
	"\u0002\u0002\u0114\u06e2\u0003\u0002\u0002\u0002\u0116\u06f2\u0003\u0002",
	"\u0002\u0002\u0118\u06f4\u0003\u0002\u0002\u0002\u011a\u06f6\u0003\u0002",
	"\u0002\u0002\u011c\u071e\u0003\u0002\u0002\u0002\u011e\u0720\u0003\u0002",
	"\u0002\u0002\u0120\u072a\u0003\u0002\u0002\u0002\u0122\u072c\u0003\u0002",
	"\u0002\u0002\u0124\u0745\u0003\u0002\u0002\u0002\u0126\u0759\u0003\u0002",
	"\u0002\u0002\u0128\u0763\u0003\u0002\u0002\u0002\u012a\u0767\u0003\u0002",
	"\u0002\u0002\u012c\u012e\u0005\u0004\u0003\u0002\u012d\u012c\u0003\u0002",
	"\u0002\u0002\u012e\u0131\u0003\u0002\u0002\u0002\u012f\u012d\u0003\u0002",
	"\u0002\u0002\u012f\u0130\u0003\u0002\u0002\u0002\u0130\u0132\u0003\u0002",
	"\u0002\u0002\u0131\u012f\u0003\u0002\u0002\u0002\u0132\u0133\u0007\u0002",
	"\u0002\u0003\u0133\u0003\u0003\u0002\u0002\u0002\u0134\u0140\u0005\u0006",
	"\u0004\u0002\u0135\u0140\u0005|?\u0002\u0136\u0140\u0005\u0090I\u0002",
	"\u0137\u0140\u0005\b\u0005\u0002\u0138\u0140\u0005\f\u0007\u0002\u0139",
	"\u0140\u0005\n\u0006\u0002\u013a\u0140\u0005\u000e\b\u0002\u013b\u0140",
	"\u0005\u0012\n\u0002\u013c\u0140\u0005\u0016\f\u0002\u013d\u0140\u0005",
	"\u001a\u000e\u0002\u013e\u0140\u0005~@\u0002\u013f\u0134\u0003\u0002",
	"\u0002\u0002\u013f\u0135\u0003\u0002\u0002\u0002\u013f\u0136\u0003\u0002",
	"\u0002\u0002\u013f\u0137\u0003\u0002\u0002\u0002\u013f\u0138\u0003\u0002",
	"\u0002\u0002\u013f\u0139\u0003\u0002\u0002\u0002\u013f\u013a\u0003\u0002",
	"\u0002\u0002\u013f\u013b\u0003\u0002\u0002\u0002\u013f\u013c\u0003\u0002",
	"\u0002\u0002\u013f\u013d\u0003\u0002\u0002\u0002\u013f\u013e\u0003\u0002",
	"\u0002\u0002\u0140\u0005\u0003\u0002\u0002\u0002\u0141\u0152\u0007E",
	"\u0002\u0002\u0142\u0143\u0005\u012a\u0096\u0002\u0143\u0144\u0007\u0091",
	"\u0002\u0002\u0144\u0153\u0003\u0002\u0002\u0002\u0145\u0147\u0007\u0098",
	"\u0002\u0002\u0146\u0148\u0005\u012a\u0096\u0002\u0147\u0146\u0003\u0002",
	"\u0002\u0002\u0147\u0148\u0003\u0002\u0002\u0002\u0148\u014a\u0003\u0002",
	"\u0002\u0002\u0149\u014b\u0007\u00a8\u0002\u0002\u014a\u0149\u0003\u0002",
	"\u0002\u0002\u014a\u014b\u0003\u0002\u0002\u0002\u014b\u014c\u0003\u0002",
	"\u0002\u0002\u014c\u014d\u0005\u012a\u0096\u0002\u014d\u014e\u0007\u0093",
	"\u0002\u0002\u014e\u014f\u0007\u008a\u0002\u0002\u014f\u0150\u0007\u0097",
	"\u0002\u0002\u0150\u0153\u0003\u0002\u0002\u0002\u0151\u0153\u0005\u0128",
	"\u0095\u0002\u0152\u0142\u0003\u0002\u0002\u0002\u0152\u0145\u0003\u0002",
	"\u0002\u0002\u0152\u0151\u0003\u0002\u0002\u0002\u0153\u0007\u0003\u0002",
	"\u0002\u0002\u0154\u0156\u0007{\u0002\u0002\u0155\u0154\u0003\u0002",
	"\u0002\u0002\u0155\u0156\u0003\u0002\u0002\u0002\u0156\u015b\u0003\u0002",
	"\u0002\u0002\u0157\u015a\u0005\u00d6l\u0002\u0158\u015a\u0005\u00a4",
	"S\u0002\u0159\u0157\u0003\u0002\u0002\u0002\u0159\u0158\u0003\u0002",
	"\u0002\u0002\u015a\u015d\u0003\u0002\u0002\u0002\u015b\u0159\u0003\u0002",
	"\u0002\u0002\u015b\u015c\u0003\u0002\u0002\u0002\u015c\u015e\u0003\u0002",
	"\u0002\u0002\u015d\u015b\u0003\u0002\u0002\u0002\u015e\u015f\u0007D",
	"\u0002\u0002\u015f\u0162\u0005\u0010\t\u0002\u0160\u0161\u0007\u009c",
	"\u0002\u0002\u0161\u0163\u0005\u012a\u0096\u0002\u0162\u0160\u0003\u0002",
	"\u0002\u0002\u0162\u0163\u0003\u0002\u0002\u0002\u0163\u0168\u0003\u0002",
	"\u0002\u0002\u0164\u0165\u0007\u0098\u0002\u0002\u0165\u0166\u0005\u001c",
	"\u000f\u0002\u0166\u0167\u0007\u0097\u0002\u0002\u0167\u0169\u0003\u0002",
	"\u0002\u0002\u0168\u0164\u0003\u0002\u0002\u0002\u0168\u0169\u0003\u0002",
	"\u0002\u0002\u0169\u016b\u0003\u0002\u0002\u0002\u016a\u016c\u0005&",
	"\u0014\u0002\u016b\u016a\u0003\u0002\u0002\u0002\u016b\u016c\u0003\u0002",
	"\u0002\u0002\u016c\u016e\u0003\u0002\u0002\u0002\u016d\u016f\u0005,",
	"\u0017\u0002\u016e\u016d\u0003\u0002\u0002\u0002\u016e\u016f\u0003\u0002",
	"\u0002\u0002\u016f\u0170\u0003\u0002\u0002\u0002\u0170\u0171\u0007A",
	"\u0002\u0002\u0171\t\u0003\u0002\u0002\u0002\u0172\u0175\u0005\u00d6",
	"l\u0002\u0173\u0175\u0005\u00a4S\u0002\u0174\u0172\u0003\u0002\u0002",
	"\u0002\u0174\u0173\u0003\u0002\u0002\u0002\u0175\u0178\u0003\u0002\u0002",
	"\u0002\u0176\u0174\u0003\u0002\u0002\u0002\u0176\u0177\u0003\u0002\u0002",
	"\u0002\u0177\u0179\u0003\u0002\u0002\u0002\u0178\u0176\u0003\u0002\u0002",
	"\u0002\u0179\u017a\u0007D\u0002\u0002\u017a\u017b\u0005\u0010\t\u0002",
	"\u017b\u017d\u0007\u008b\u0002\u0002\u017c\u017e\u0005\u012a\u0096\u0002",
	"\u017d\u017c\u0003\u0002\u0002\u0002\u017d\u017e\u0003\u0002\u0002\u0002",
	"\u017e\u017f\u0003\u0002\u0002\u0002\u017f\u0184\u0007\u008c\u0002\u0002",
	"\u0180\u0181\u0007\u0098\u0002\u0002\u0181\u0182\u0005\u001c\u000f\u0002",
	"\u0182\u0183\u0007\u0097\u0002\u0002\u0183\u0185\u0003\u0002\u0002\u0002",
	"\u0184\u0180\u0003\u0002\u0002\u0002\u0184\u0185\u0003\u0002\u0002\u0002",
	"\u0185\u0187\u0003\u0002\u0002\u0002\u0186\u0188\u0005&\u0014\u0002",
	"\u0187\u0186\u0003\u0002\u0002\u0002\u0187\u0188\u0003\u0002\u0002\u0002",
	"\u0188\u018a\u0003\u0002\u0002\u0002\u0189\u018b\u0005,\u0017\u0002",
	"\u018a\u0189\u0003\u0002\u0002\u0002\u018a\u018b\u0003\u0002\u0002\u0002",
	"\u018b\u018c\u0003\u0002\u0002\u0002\u018c\u018d\u0007A\u0002\u0002",
	"\u018d\u000b\u0003\u0002\u0002\u0002\u018e\u018f\u0007C\u0002\u0002",
	"\u018f\u0192\u0005\u0010\t\u0002\u0190\u0191\u0007\u009c\u0002\u0002",
	"\u0191\u0193\u0005\u012a\u0096\u0002\u0192\u0190\u0003\u0002\u0002\u0002",
	"\u0192\u0193\u0003\u0002\u0002\u0002\u0193\u0195\u0003\u0002\u0002\u0002",
	"\u0194\u0196\u0005&\u0014\u0002\u0195\u0194\u0003\u0002\u0002\u0002",
	"\u0195\u0196\u0003\u0002\u0002\u0002\u0196\u0198\u0003\u0002\u0002\u0002",
	"\u0197\u0199\u00054\u001b\u0002\u0198\u0197\u0003\u0002\u0002\u0002",
	"\u0198\u0199\u0003\u0002\u0002\u0002\u0199\u019a\u0003\u0002\u0002\u0002",
	"\u019a\u019b\u0007A\u0002\u0002\u019b\r\u0003\u0002\u0002\u0002\u019c",
	"\u019d\u0007C\u0002\u0002\u019d\u019e\u0005\u0010\t\u0002\u019e\u019f",
	"\u0007\u008b\u0002\u0002\u019f\u01a0\u0005\u012a\u0096\u0002\u01a0\u01a2",
	"\u0007\u008c\u0002\u0002\u01a1\u01a3\u00054\u001b\u0002\u01a2\u01a1",
	"\u0003\u0002\u0002\u0002\u01a2\u01a3\u0003\u0002\u0002\u0002\u01a3\u01a4",
	"\u0003\u0002\u0002\u0002\u01a4\u01a5\u0007A\u0002\u0002\u01a5\u000f",
	"\u0003\u0002\u0002\u0002\u01a6\u01ac\u0005\u012a\u0096\u0002\u01a7\u01a8",
	"\u0007\u0098\u0002\u0002\u01a8\u01a9\u0005\u001c\u000f\u0002\u01a9\u01aa",
	"\u0007\u0097\u0002\u0002\u01aa\u01ad\u0003\u0002\u0002\u0002\u01ab\u01ad",
	"\u0005L\'\u0002\u01ac\u01a7\u0003\u0002\u0002\u0002\u01ac\u01ab\u0003",
	"\u0002\u0002\u0002\u01ac\u01ad\u0003\u0002\u0002\u0002\u01ad\u0011\u0003",
	"\u0002\u0002\u0002\u01ae\u01b1\u0005\u00d6l\u0002\u01af\u01b1\u0005",
	"\u00a4S\u0002\u01b0\u01ae\u0003\u0002\u0002\u0002\u01b0\u01af\u0003",
	"\u0002\u0002\u0002\u01b1\u01b4\u0003\u0002\u0002\u0002\u01b2\u01b0\u0003",
	"\u0002\u0002\u0002\u01b2\u01b3\u0003\u0002\u0002\u0002\u01b3\u01b5\u0003",
	"\u0002\u0002\u0002\u01b4\u01b2\u0003\u0002\u0002\u0002\u01b5\u01b6\u0007",
	"G\u0002\u0002\u01b6\u01bb\u0005$\u0013\u0002\u01b7\u01b8\u0007\u0098",
	"\u0002\u0002\u01b8\u01b9\u0005\u001c\u000f\u0002\u01b9\u01ba\u0007\u0097",
	"\u0002\u0002\u01ba\u01bc\u0003\u0002\u0002\u0002\u01bb\u01b7\u0003\u0002",
	"\u0002\u0002\u01bb\u01bc\u0003\u0002\u0002\u0002\u01bc\u01c0\u0003\u0002",
	"\u0002\u0002\u01bd\u01bf\u0005\u0014\u000b\u0002\u01be\u01bd\u0003\u0002",
	"\u0002\u0002\u01bf\u01c2\u0003\u0002\u0002\u0002\u01c0\u01be\u0003\u0002",
	"\u0002\u0002\u01c0\u01c1\u0003\u0002\u0002\u0002\u01c1\u01c3\u0003\u0002",
	"\u0002\u0002\u01c2\u01c0\u0003\u0002\u0002\u0002\u01c3\u01c4\u0007A",
	"\u0002\u0002\u01c4\u0013\u0003\u0002\u0002\u0002\u01c5\u01c9\t\u0002",
	"\u0002\u0002\u01c6\u01c8\u0005,\u0017\u0002\u01c7\u01c6\u0003\u0002",
	"\u0002\u0002\u01c8\u01cb\u0003\u0002\u0002\u0002\u01c9\u01c7\u0003\u0002",
	"\u0002\u0002\u01c9\u01ca\u0003\u0002\u0002\u0002\u01ca\u01d2\u0003\u0002",
	"\u0002\u0002\u01cb\u01c9\u0003\u0002\u0002\u0002\u01cc\u01ce\u0005,",
	"\u0017\u0002\u01cd\u01cc\u0003\u0002\u0002\u0002\u01ce\u01cf\u0003\u0002",
	"\u0002\u0002\u01cf\u01cd\u0003\u0002\u0002\u0002\u01cf\u01d0\u0003\u0002",
	"\u0002\u0002\u01d0\u01d2\u0003\u0002\u0002\u0002\u01d1\u01c5\u0003\u0002",
	"\u0002\u0002\u01d1\u01cd\u0003\u0002\u0002\u0002\u01d2\u0015\u0003\u0002",
	"\u0002\u0002\u01d3\u01d4\u0007G\u0002\u0002\u01d4\u01d5\u0005\u001c",
	"\u000f\u0002\u01d5\u01d6\u0007\u0091\u0002\u0002\u01d6\u0017\u0003\u0002",
	"\u0002\u0002\u01d7\u01dc\u0005\u012a\u0096\u0002\u01d8\u01d9\u0007\u0098",
	"\u0002\u0002\u01d9\u01da\u0005\u001c\u000f\u0002\u01da\u01db\u0007\u0097",
	"\u0002\u0002\u01db\u01dd\u0003\u0002\u0002\u0002\u01dc\u01d8\u0003\u0002",
	"\u0002\u0002\u01dc\u01dd\u0003\u0002\u0002\u0002\u01dd\u0019\u0003\u0002",
	"\u0002\u0002\u01de\u01df\u0007>\u0002\u0002\u01df\u01e4\u0005\u0018",
	"\r\u0002\u01e0\u01e1\u0007\u0092\u0002\u0002\u01e1\u01e3\u0005\u0018",
	"\r\u0002\u01e2\u01e0\u0003\u0002\u0002\u0002\u01e3\u01e6\u0003\u0002",
	"\u0002\u0002\u01e4\u01e2\u0003\u0002\u0002\u0002\u01e4\u01e5\u0003\u0002",
	"\u0002\u0002\u01e5\u01e7\u0003\u0002\u0002\u0002\u01e6\u01e4\u0003\u0002",
	"\u0002\u0002\u01e7\u01e8\u0007\u0091\u0002\u0002\u01e8\u001b\u0003\u0002",
	"\u0002\u0002\u01e9\u01ee\u0005$\u0013\u0002\u01ea\u01eb\u0007\u0092",
	"\u0002\u0002\u01eb\u01ed\u0005$\u0013\u0002\u01ec\u01ea\u0003\u0002",
	"\u0002\u0002\u01ed\u01f0\u0003\u0002\u0002\u0002\u01ee\u01ec\u0003\u0002",
	"\u0002\u0002\u01ee\u01ef\u0003\u0002\u0002\u0002\u01ef\u001d\u0003\u0002",
	"\u0002\u0002\u01f0\u01ee\u0003\u0002\u0002\u0002\u01f1\u01f6\u0007J",
	"\u0002\u0002\u01f2\u01f3\u0007\u008b\u0002\u0002\u01f3\u01f4\u0005 ",
	"\u0011\u0002\u01f4\u01f5\u0007\u008c\u0002\u0002\u01f5\u01f7\u0003\u0002",
	"\u0002\u0002\u01f6\u01f2\u0003\u0002\u0002\u0002\u01f6\u01f7\u0003\u0002",
	"\u0002\u0002\u01f7\u01f9\u0003\u0002\u0002\u0002\u01f8\u01fa\u0005\u00b0",
	"Y\u0002\u01f9\u01f8\u0003\u0002\u0002\u0002\u01f9\u01fa\u0003\u0002",
	"\u0002\u0002\u01fa\u01fc\u0003\u0002\u0002\u0002\u01fb\u01fd\u0007z",
	"\u0002\u0002\u01fc\u01fb\u0003\u0002\u0002\u0002\u01fc\u01fd\u0003\u0002",
	"\u0002\u0002\u01fd\u01fe\u0003\u0002\u0002\u0002\u01fe\u01ff\u0005\u00ac",
	"W\u0002\u01ff\u001f\u0003\u0002\u0002\u0002\u0200\u0205\u0005\"\u0012",
	"\u0002\u0201\u0202\u0007\u0092\u0002\u0002\u0202\u0204\u0005\"\u0012",
	"\u0002\u0203\u0201\u0003\u0002\u0002\u0002\u0204\u0207\u0003\u0002\u0002",
	"\u0002\u0205\u0203\u0003\u0002\u0002\u0002\u0205\u0206\u0003\u0002\u0002",
	"\u0002\u0206!\u0003\u0002\u0002\u0002\u0207\u0205\u0003\u0002\u0002",
	"\u0002\u0208\u021d\u0007S\u0002\u0002\u0209\u021d\u0007T\u0002\u0002",
	"\u020a\u021d\u0007s\u0002\u0002\u020b\u021d\u0007v\u0002\u0002\u020c",
	"\u021d\u0007U\u0002\u0002\u020d\u021d\u0007o\u0002\u0002\u020e\u021d",
	"\u0007w\u0002\u0002\u020f\u021d\u0007p\u0002\u0002\u0210\u021d\u0007",
	"t\u0002\u0002\u0211\u021d\u0007u\u0002\u0002\u0212\u0213\u0007q\u0002",
	"\u0002\u0213\u0214\u0007\u0096\u0002\u0002\u0214\u021d\u0005\u012a\u0096",
	"\u0002\u0215\u0216\u0007r\u0002\u0002\u0216\u0217\u0007\u0096\u0002",
	"\u0002\u0217\u0218\u0005\u012a\u0096\u0002\u0218\u0219\u0007\u009c\u0002",
	"\u0002\u0219\u021d\u0003\u0002\u0002\u0002\u021a\u021d\u0005\u00b4[",
	"\u0002\u021b\u021d\u0005\u012a\u0096\u0002\u021c\u0208\u0003\u0002\u0002",
	"\u0002\u021c\u0209\u0003\u0002\u0002\u0002\u021c\u020a\u0003\u0002\u0002",
	"\u0002\u021c\u020b\u0003\u0002\u0002\u0002\u021c\u020c\u0003\u0002\u0002",
	"\u0002\u021c\u020d\u0003\u0002\u0002\u0002\u021c\u020e\u0003\u0002\u0002",
	"\u0002\u021c\u020f\u0003\u0002\u0002\u0002\u021c\u0210\u0003\u0002\u0002",
	"\u0002\u021c\u0211\u0003\u0002\u0002\u0002\u021c\u0212\u0003\u0002\u0002",
	"\u0002\u021c\u0215\u0003\u0002\u0002\u0002\u021c\u021a\u0003\u0002\u0002",
	"\u0002\u021c\u021b\u0003\u0002\u0002\u0002\u021d#\u0003\u0002\u0002",
	"\u0002\u021e\u021f\u0007\u0098\u0002\u0002\u021f\u0220\u0005\u001c\u000f",
	"\u0002\u0220\u0221\u0007\u0097\u0002\u0002\u0221\u022b\u0003\u0002\u0002",
	"\u0002\u0222\u0224\t\u0003\u0002\u0002\u0223\u0222\u0003\u0002\u0002",
	"\u0002\u0223\u0224\u0003\u0002\u0002\u0002\u0224\u0225\u0003\u0002\u0002",
	"\u0002\u0225\u0228\u0005\u00dep\u0002\u0226\u0227\u0007\u009c\u0002",
	"\u0002\u0227\u0229\u0005\u00be`\u0002\u0228\u0226\u0003\u0002\u0002",
	"\u0002\u0228\u0229\u0003\u0002\u0002\u0002\u0229\u022b\u0003\u0002\u0002",
	"\u0002\u022a\u021e\u0003\u0002\u0002\u0002\u022a\u0223\u0003\u0002\u0002",
	"\u0002\u022b%\u0003\u0002\u0002\u0002\u022c\u0230\u0007\u008d\u0002",
	"\u0002\u022d\u022f\u0005(\u0015\u0002\u022e\u022d\u0003\u0002\u0002",
	"\u0002\u022f\u0232\u0003\u0002\u0002\u0002\u0230\u022e\u0003\u0002\u0002",
	"\u0002\u0230\u0231\u0003\u0002\u0002\u0002\u0231\u0233\u0003\u0002\u0002",
	"\u0002\u0232\u0230\u0003\u0002\u0002\u0002\u0233\u0234\u0007\u008e\u0002",
	"\u0002\u0234\'\u0003\u0002\u0002\u0002\u0235\u0239\u0005*\u0016\u0002",
	"\u0236\u0238\u0005\u00acW\u0002\u0237\u0236\u0003\u0002\u0002\u0002",
	"\u0238\u023b\u0003\u0002\u0002\u0002\u0239\u0237\u0003\u0002\u0002\u0002",
	"\u0239\u023a\u0003\u0002\u0002\u0002\u023a\u0242\u0003\u0002\u0002\u0002",
	"\u023b\u0239\u0003\u0002\u0002\u0002\u023c\u023e\u0005\u00acW\u0002",
	"\u023d\u023c\u0003\u0002\u0002\u0002\u023e\u023f\u0003\u0002\u0002\u0002",
	"\u023f\u023d\u0003\u0002\u0002\u0002\u023f\u0240\u0003\u0002\u0002\u0002",
	"\u0240\u0242\u0003\u0002\u0002\u0002\u0241\u0235\u0003\u0002\u0002\u0002",
	"\u0241\u023d\u0003\u0002\u0002\u0002\u0242)\u0003\u0002\u0002\u0002",
	"\u0243\u0244\t\u0004\u0002\u0002\u0244+\u0003\u0002\u0002\u0002\u0245",
	"\u024b\u0005\u0090I\u0002\u0246\u024b\u0005.\u0018\u0002\u0247\u024b",
	"\u00050\u0019\u0002\u0248\u024b\u0005\u001e\u0010\u0002\u0249\u024b",
	"\u0005|?\u0002\u024a\u0245\u0003\u0002\u0002\u0002\u024a\u0246\u0003",
	"\u0002\u0002\u0002\u024a\u0247\u0003\u0002\u0002\u0002\u024a\u0248\u0003",
	"\u0002\u0002\u0002\u024a\u0249\u0003\u0002\u0002\u0002\u024b\u024c\u0003",
	"\u0002\u0002\u0002\u024c\u024a\u0003\u0002\u0002\u0002\u024c\u024d\u0003",
	"\u0002\u0002\u0002\u024d-\u0003\u0002\u0002\u0002\u024e\u024f\u0007",
	"\u00a5\u0002\u0002\u024f\u0250\u00052\u001a\u0002\u0250/\u0003\u0002",
	"\u0002\u0002\u0251\u0252\u0007\u00a6\u0002\u0002\u0252\u0253\u00052",
	"\u001a\u0002\u02531\u0003\u0002\u0002\u0002\u0254\u0256\u0005B\"\u0002",
	"\u0255\u0254\u0003\u0002\u0002\u0002\u0255\u0256\u0003\u0002\u0002\u0002",
	"\u0256\u0257\u0003\u0002\u0002\u0002\u0257\u025c\u0005<\u001f\u0002",
	"\u0258\u025b\u0005\u00d6l\u0002\u0259\u025b\u0005\u00a4S\u0002\u025a",
	"\u0258\u0003\u0002\u0002\u0002\u025a\u0259\u0003\u0002\u0002\u0002\u025b",
	"\u025e\u0003\u0002\u0002\u0002\u025c\u025a\u0003\u0002\u0002\u0002\u025c",
	"\u025d\u0003\u0002\u0002\u0002\u025d\u025f\u0003\u0002\u0002\u0002\u025e",
	"\u025c\u0003\u0002\u0002\u0002\u025f\u0260\u0007\u0091\u0002\u0002\u0260",
	"3\u0003\u0002\u0002\u0002\u0261\u0267\u0005~@\u0002\u0262\u0267\u0005",
	"\u0090I\u0002\u0263\u0267\u00056\u001c\u0002\u0264\u0267\u00058\u001d",
	"\u0002\u0265\u0267\u0005D#\u0002\u0266\u0261\u0003\u0002\u0002\u0002",
	"\u0266\u0262\u0003\u0002\u0002\u0002\u0266\u0263\u0003\u0002\u0002\u0002",
	"\u0266\u0264\u0003\u0002\u0002\u0002\u0266\u0265\u0003\u0002\u0002\u0002",
	"\u0267\u0268\u0003\u0002\u0002\u0002\u0268\u0266\u0003\u0002\u0002\u0002",
	"\u0268\u0269\u0003\u0002\u0002\u0002\u02695\u0003\u0002\u0002\u0002",
	"\u026a\u026b\u0007\u00a5\u0002\u0002\u026b\u026c\u0005:\u001e\u0002",
	"\u026c7\u0003\u0002\u0002\u0002\u026d\u026e\u0007\u00a6\u0002\u0002",
	"\u026e\u026f\u0005:\u001e\u0002\u026f9\u0003\u0002\u0002\u0002\u0270",
	"\u0272\u0005B\"\u0002\u0271\u0270\u0003\u0002\u0002\u0002\u0271\u0272",
	"\u0003\u0002\u0002\u0002\u0272\u0273\u0003\u0002\u0002\u0002\u0273\u0275",
	"\u0005<\u001f\u0002\u0274\u0276\u0005\u00a6T\u0002\u0275\u0274\u0003",
	"\u0002\u0002\u0002\u0275\u0276\u0003\u0002\u0002\u0002\u0276\u0278\u0003",
	"\u0002\u0002\u0002\u0277\u0279\u0007\u0091\u0002\u0002\u0278\u0277\u0003",
	"\u0002\u0002\u0002\u0278\u0279\u0003\u0002\u0002\u0002\u0279\u027a\u0003",
	"\u0002\u0002\u0002\u027a\u027b\u0005\u00f0y\u0002\u027b;\u0003\u0002",
	"\u0002\u0002\u027c\u0287\u0005@!\u0002\u027d\u027f\u0005> \u0002\u027e",
	"\u027d\u0003\u0002\u0002\u0002\u027f\u0280\u0003\u0002\u0002\u0002\u0280",
	"\u027e\u0003\u0002\u0002\u0002\u0280\u0281\u0003\u0002\u0002\u0002\u0281",
	"\u0284\u0003\u0002\u0002\u0002\u0282\u0283\u0007\u0092\u0002\u0002\u0283",
	"\u0285\u0007\u00b7\u0002\u0002\u0284\u0282\u0003\u0002\u0002\u0002\u0284",
	"\u0285\u0003\u0002\u0002\u0002\u0285\u0287\u0003\u0002\u0002\u0002\u0286",
	"\u027c\u0003\u0002\u0002\u0002\u0286\u027e\u0003\u0002\u0002\u0002\u0287",
	"=\u0003\u0002\u0002\u0002\u0288\u028a\u0005@!\u0002\u0289\u0288\u0003",
	"\u0002\u0002\u0002\u0289\u028a\u0003\u0002\u0002\u0002\u028a\u028b\u0003",
	"\u0002\u0002\u0002\u028b\u028f\u0007\u009c\u0002\u0002\u028c\u028e\u0005",
	"B\"\u0002\u028d\u028c\u0003\u0002\u0002\u0002\u028e\u0291\u0003\u0002",
	"\u0002\u0002\u028f\u028d\u0003\u0002\u0002\u0002\u028f\u0290\u0003\u0002",
	"\u0002\u0002\u0290\u0293\u0003\u0002\u0002\u0002\u0291\u028f\u0003\u0002",
	"\u0002\u0002\u0292\u0294\u0005\u00b2Z\u0002\u0293\u0292\u0003\u0002",
	"\u0002\u0002\u0293\u0294\u0003\u0002\u0002\u0002\u0294\u0295\u0003\u0002",
	"\u0002\u0002\u0295\u0296\u0005\u012a\u0096\u0002\u0296?\u0003\u0002",
	"\u0002\u0002\u0297\u029a\u0005\u012a\u0096\u0002\u0298\u029a\u0007\u0018",
	"\u0002\u0002\u0299\u0297\u0003\u0002\u0002\u0002\u0299\u0298\u0003\u0002",
	"\u0002\u0002\u029aA\u0003\u0002\u0002\u0002\u029b\u029c\u0007\u008b",
	"\u0002\u0002\u029c\u029d\u0005\u00dep\u0002\u029d\u029e\u0007\u008c",
	"\u0002\u0002\u029eC\u0003\u0002\u0002\u0002\u029f\u02a0\u0007P\u0002",
	"\u0002\u02a0\u02a1\u0005F$\u0002\u02a1\u02a2\u0007\u0091\u0002\u0002",
	"\u02a2\u02a8\u0003\u0002\u0002\u0002\u02a3\u02a4\u0007?\u0002\u0002",
	"\u02a4\u02a5\u0005F$\u0002\u02a5\u02a6\u0007\u0091\u0002\u0002\u02a6",
	"\u02a8\u0003\u0002\u0002\u0002\u02a7\u029f\u0003\u0002\u0002\u0002\u02a7",
	"\u02a3\u0003\u0002\u0002\u0002\u02a8E\u0003\u0002\u0002\u0002\u02a9",
	"\u02ae\u0005H%\u0002\u02aa\u02ab\u0007\u0092\u0002\u0002\u02ab\u02ad",
	"\u0005H%\u0002\u02ac\u02aa\u0003\u0002\u0002\u0002\u02ad\u02b0\u0003",
	"\u0002\u0002\u0002\u02ae\u02ac\u0003\u0002\u0002\u0002\u02ae\u02af\u0003",
	"\u0002\u0002\u0002\u02afG\u0003\u0002\u0002\u0002\u02b0\u02ae\u0003",
	"\u0002\u0002\u0002\u02b1\u02b4\u0005\u012a\u0096\u0002\u02b2\u02b3\u0007",
	"\u0096\u0002\u0002\u02b3\u02b5\u0005\u012a\u0096\u0002\u02b4\u02b2\u0003",
	"\u0002\u0002\u0002\u02b4\u02b5\u0003\u0002\u0002\u0002\u02b5I\u0003",
	"\u0002\u0002\u0002\u02b6\u02b8\u0005\u00b4[\u0002\u02b7\u02b6\u0003",
	"\u0002\u0002\u0002\u02b7\u02b8\u0003\u0002\u0002\u0002\u02b8\u02b9\u0003",
	"\u0002\u0002\u0002\u02b9\u02bb\u0005\u00be`\u0002\u02ba\u02bc\u0005",
	"\u00b4[\u0002\u02bb\u02ba\u0003\u0002\u0002\u0002\u02bb\u02bc\u0003",
	"\u0002\u0002\u0002\u02bc\u02bd\u0003\u0002\u0002\u0002\u02bd\u02be\u0007",
	"\u008b\u0002\u0002\u02be\u02c1\u0007\u00ab\u0002\u0002\u02bf\u02c2\u0005",
	"\u00b4[\u0002\u02c0\u02c2\u0005\u00be`\u0002\u02c1\u02bf\u0003\u0002",
	"\u0002\u0002\u02c1\u02c0\u0003\u0002\u0002\u0002\u02c1\u02c2\u0003\u0002",
	"\u0002\u0002\u02c2\u02c3\u0003\u0002\u0002\u0002\u02c3\u02c5\u0007\u008c",
	"\u0002\u0002\u02c4\u02c6\u0005X-\u0002\u02c5\u02c4\u0003\u0002\u0002",
	"\u0002\u02c5\u02c6\u0003\u0002\u0002\u0002\u02c6K\u0003\u0002\u0002",
	"\u0002\u02c7\u02d0\u0007\u0098\u0002\u0002\u02c8\u02cd\u0005N(\u0002",
	"\u02c9\u02ca\u0007\u0092\u0002\u0002\u02ca\u02cc\u0005N(\u0002\u02cb",
	"\u02c9\u0003\u0002\u0002\u0002\u02cc\u02cf\u0003\u0002\u0002\u0002\u02cd",
	"\u02cb\u0003\u0002\u0002\u0002\u02cd\u02ce\u0003\u0002\u0002\u0002\u02ce",
	"\u02d1\u0003\u0002\u0002\u0002\u02cf\u02cd\u0003\u0002\u0002\u0002\u02d0",
	"\u02c8\u0003\u0002\u0002\u0002\u02d0\u02d1\u0003\u0002\u0002\u0002\u02d1",
	"\u02d2\u0003\u0002\u0002\u0002\u02d2\u02d3\u0007\u0097\u0002\u0002\u02d3",
	"M\u0003\u0002\u0002\u0002\u02d4\u02d6\u0005\u00b8]\u0002\u02d5\u02d4",
	"\u0003\u0002\u0002\u0002\u02d6\u02d9\u0003\u0002\u0002\u0002\u02d7\u02d5",
	"\u0003\u0002\u0002\u0002\u02d7\u02d8\u0003\u0002\u0002\u0002\u02d8\u02da",
	"\u0003\u0002\u0002\u0002\u02d9\u02d7\u0003\u0002\u0002\u0002\u02da\u02db",
	"\u0005\u00be`\u0002\u02dbO\u0003\u0002\u0002\u0002\u02dc\u02dd\u0007",
	"\u0095\u0002\u0002\u02dd\u02e9\u0007\u008d\u0002\u0002\u02de\u02e3\u0005",
	"R*\u0002\u02df\u02e0\u0007\u0092\u0002\u0002\u02e0\u02e2\u0005R*\u0002",
	"\u02e1\u02df\u0003\u0002\u0002\u0002\u02e2\u02e5\u0003\u0002\u0002\u0002",
	"\u02e3\u02e1\u0003\u0002\u0002\u0002\u02e3\u02e4\u0003\u0002\u0002\u0002",
	"\u02e4\u02e7\u0003\u0002\u0002\u0002\u02e5\u02e3\u0003\u0002\u0002\u0002",
	"\u02e6\u02e8\u0007\u0092\u0002\u0002\u02e7\u02e6\u0003\u0002\u0002\u0002",
	"\u02e7\u02e8\u0003\u0002\u0002\u0002\u02e8\u02ea\u0003\u0002\u0002\u0002",
	"\u02e9\u02de\u0003\u0002\u0002\u0002\u02e9\u02ea\u0003\u0002\u0002\u0002",
	"\u02ea\u02eb\u0003\u0002\u0002\u0002\u02eb\u02ec\u0007\u008e\u0002\u0002",
	"\u02ecQ\u0003\u0002\u0002\u0002\u02ed\u02ee\u0005\u0110\u0089\u0002",
	"\u02ee\u02ef\u0007\u009c\u0002\u0002\u02ef\u02f0\u0005\u010c\u0087\u0002",
	"\u02f0S\u0003\u0002\u0002\u0002\u02f1\u02f2\u0007\u0095\u0002\u0002",
	"\u02f2\u02f7\u0007\u008f\u0002\u0002\u02f3\u02f5\u0005\u010a\u0086\u0002",
	"\u02f4\u02f6\u0007\u0092\u0002\u0002\u02f5\u02f4\u0003\u0002\u0002\u0002",
	"\u02f5\u02f6\u0003\u0002\u0002\u0002\u02f6\u02f8\u0003\u0002\u0002\u0002",
	"\u02f7\u02f3\u0003\u0002\u0002\u0002\u02f7\u02f8\u0003\u0002\u0002\u0002",
	"\u02f8\u02f9\u0003\u0002\u0002\u0002\u02f9\u02fa\u0007\u0090\u0002\u0002",
	"\u02faU\u0003\u0002\u0002\u0002\u02fb\u02fc\u0007\u0095\u0002\u0002",
	"\u02fc\u02fd\u0007\u008b\u0002\u0002\u02fd\u02fe\u0005\u010c\u0087\u0002",
	"\u02fe\u02ff\u0007\u008c\u0002\u0002\u02ff\u0306\u0003\u0002\u0002\u0002",
	"\u0300\u0303\u0007\u0095\u0002\u0002\u0301\u0304\u0005\u0126\u0094\u0002",
	"\u0302\u0304\u0005\u012a\u0096\u0002\u0303\u0301\u0003\u0002\u0002\u0002",
	"\u0303\u0302\u0003\u0002\u0002\u0002\u0304\u0306\u0003\u0002\u0002\u0002",
	"\u0305\u02fb\u0003\u0002\u0002\u0002\u0305\u0300\u0003\u0002\u0002\u0002",
	"\u0306W\u0003\u0002\u0002\u0002\u0307\u0313\u0007\u008b\u0002\u0002",
	"\u0308\u030b\u0005Z.\u0002\u0309\u030b\u0007\"\u0002\u0002\u030a\u0308",
	"\u0003\u0002\u0002\u0002\u030a\u0309\u0003\u0002\u0002\u0002\u030b\u0310",
	"\u0003\u0002\u0002\u0002\u030c\u030d\u0007\u0092\u0002\u0002\u030d\u030f",
	"\u0005Z.\u0002\u030e\u030c\u0003\u0002\u0002\u0002\u030f\u0312\u0003",
	"\u0002\u0002\u0002\u0310\u030e\u0003\u0002\u0002\u0002\u0310\u0311\u0003",
	"\u0002\u0002\u0002\u0311\u0314\u0003\u0002\u0002\u0002\u0312\u0310\u0003",
	"\u0002\u0002\u0002\u0313\u030a\u0003\u0002\u0002\u0002\u0313\u0314\u0003",
	"\u0002\u0002\u0002\u0314\u0315\u0003\u0002\u0002\u0002\u0315\u0316\u0007",
	"\u008c\u0002\u0002\u0316Y\u0003\u0002\u0002\u0002\u0317\u031a\u0005",
	"p9\u0002\u0318\u031a\u0005\u00dep\u0002\u0319\u0317\u0003\u0002\u0002",
	"\u0002\u0319\u0318\u0003\u0002\u0002\u0002\u031a[\u0003\u0002\u0002",
	"\u0002\u031b\u031d\u0007\u00ab\u0002\u0002\u031c\u031e\u0005\u00be`",
	"\u0002\u031d\u031c\u0003\u0002\u0002\u0002\u031d\u031e\u0003\u0002\u0002",
	"\u0002\u031e\u0320\u0003\u0002\u0002\u0002\u031f\u0321\u0005\u00b4[",
	"\u0002\u0320\u031f\u0003\u0002\u0002\u0002\u0320\u0321\u0003\u0002\u0002",
	"\u0002\u0321\u0323\u0003\u0002\u0002\u0002\u0322\u0324\u0005X-\u0002",
	"\u0323\u0322\u0003\u0002\u0002\u0002\u0323\u0324\u0003\u0002\u0002\u0002",
	"\u0324\u0325\u0003\u0002\u0002\u0002\u0325\u0326\u0005\u00f0y\u0002",
	"\u0326]\u0003\u0002\u0002\u0002\u0327\u0328\u0007\u008f\u0002\u0002",
	"\u0328\u0329\u0005`1\u0002\u0329\u032a\u0005b2\u0002\u032a\u032b\u0007",
	"\u0090\u0002\u0002\u032b_\u0003\u0002\u0002\u0002\u032c\u032f\u0005",
	"\u010c\u0087\u0002\u032d\u032f\u0005\u00be`\u0002\u032e\u032c\u0003",
	"\u0002\u0002\u0002\u032e\u032d\u0003\u0002\u0002\u0002\u032fa\u0003",
	"\u0002\u0002\u0002\u0330\u0337\u0005@!\u0002\u0331\u0333\u0005d3\u0002",
	"\u0332\u0331\u0003\u0002\u0002\u0002\u0333\u0334\u0003\u0002\u0002\u0002",
	"\u0334\u0332\u0003\u0002\u0002\u0002\u0334\u0335\u0003\u0002\u0002\u0002",
	"\u0335\u0337\u0003\u0002\u0002\u0002\u0336\u0330\u0003\u0002\u0002\u0002",
	"\u0336\u0332\u0003\u0002\u0002\u0002\u0337c\u0003\u0002\u0002\u0002",
	"\u0338\u033a\u0005@!\u0002\u0339\u0338\u0003\u0002\u0002\u0002\u0339",
	"\u033a\u0003\u0002\u0002\u0002\u033a\u033b\u0003\u0002\u0002\u0002\u033b",
	"\u033c\u0007\u009c\u0002\u0002\u033c\u0341\u0005f4\u0002\u033d\u033e",
	"\u0007\u0092\u0002\u0002\u033e\u0340\u0005f4\u0002\u033f\u033d\u0003",
	"\u0002\u0002\u0002\u0340\u0343\u0003\u0002\u0002\u0002\u0341\u033f\u0003",
	"\u0002\u0002\u0002\u0341\u0342\u0003\u0002\u0002\u0002\u0342e\u0003",
	"\u0002\u0002\u0002\u0343\u0341\u0003\u0002\u0002\u0002\u0344\u0346\u0005",
	"\u010a\u0086\u0002\u0345\u0347\u0005\u00b4[\u0002\u0346\u0345\u0003",
	"\u0002\u0002\u0002\u0346\u0347\u0003\u0002\u0002\u0002\u0347\u034c\u0003",
	"\u0002\u0002\u0002\u0348\u0349\u0007\u008d\u0002\u0002\u0349\u034a\u0005",
	"\u00dco\u0002\u034a\u034b\u0007\u008e\u0002\u0002\u034b\u034d\u0003",
	"\u0002\u0002\u0002\u034c\u0348\u0003\u0002\u0002\u0002\u034c\u034d\u0003",
	"\u0002\u0002\u0002\u034dg\u0003\u0002\u0002\u0002\u034e\u034f\u0007",
	"N\u0002\u0002\u034f\u0350\u0007\u008b\u0002\u0002\u0350\u0351\u0005",
	"j6\u0002\u0351\u0352\u0007\u008c\u0002\u0002\u0352i\u0003\u0002\u0002",
	"\u0002\u0353\u035d\u0005@!\u0002\u0354\u0356\u0005@!\u0002\u0355\u0354",
	"\u0003\u0002\u0002\u0002\u0355\u0356\u0003\u0002\u0002\u0002\u0356\u0357",
	"\u0003\u0002\u0002\u0002\u0357\u0359\u0007\u009c\u0002\u0002\u0358\u0355",
	"\u0003\u0002\u0002\u0002\u0359\u035a\u0003\u0002\u0002\u0002\u035a\u0358",
	"\u0003\u0002\u0002\u0002\u035a\u035b\u0003\u0002\u0002\u0002\u035b\u035d",
	"\u0003\u0002\u0002\u0002\u035c\u0353\u0003\u0002\u0002\u0002\u035c\u0358",
	"\u0003\u0002\u0002\u0002\u035dk\u0003\u0002\u0002\u0002\u035e\u035f",
	"\u0007G\u0002\u0002\u035f\u0360\u0007\u008b\u0002\u0002\u0360\u0361",
	"\u0005$\u0013\u0002\u0361\u0362\u0007\u008c\u0002\u0002\u0362m\u0003",
	"\u0002\u0002\u0002\u0363\u0364\u0007@\u0002\u0002\u0364\u0365\u0007",
	"\u008b\u0002\u0002\u0365\u0366\u0005\u00dep\u0002\u0366\u0367\u0007",
	"\u008c\u0002\u0002\u0367o\u0003\u0002\u0002\u0002\u0368\u0369\u0005",
	"\u00a0Q\u0002\u0369\u036a\u0005\u00e8u\u0002\u036aq\u0003\u0002\u0002",
	"\u0002\u036b\u036c\u0007Q\u0002\u0002\u036c\u036d\u0007\u008b\u0002",
	"\u0002\u036d\u036e\u0005\u012a\u0096\u0002\u036e\u036f\u0007\u008c\u0002",
	"\u0002\u036f\u0373\u0003\u0002\u0002\u0002\u0370\u0371\u0007Q\u0002",
	"\u0002\u0371\u0373\u0005\u010c\u0087\u0002\u0372\u036b\u0003\u0002\u0002",
	"\u0002\u0372\u0370\u0003\u0002\u0002\u0002\u0373s\u0003\u0002\u0002",
	"\u0002\u0374\u0375\u0007R\u0002\u0002\u0375\u0379\u0005\u00f0y\u0002",
	"\u0376\u0378\u0005v<\u0002\u0377\u0376\u0003\u0002\u0002\u0002\u0378",
	"\u037b\u0003\u0002\u0002\u0002\u0379\u0377\u0003\u0002\u0002\u0002\u0379",
	"\u037a\u0003\u0002\u0002\u0002\u037a\u037e\u0003\u0002\u0002\u0002\u037b",
	"\u0379\u0003\u0002\u0002\u0002\u037c\u037d\u0007B\u0002\u0002\u037d",
	"\u037f\u0005\u00f0y\u0002\u037e\u037c\u0003\u0002\u0002\u0002\u037e",
	"\u037f\u0003\u0002\u0002\u0002\u037fu\u0003\u0002\u0002\u0002\u0380",
	"\u0381\u0007=\u0002\u0002\u0381\u0382\u0007\u008b\u0002\u0002\u0382",
	"\u0383\u0005p9\u0002\u0383\u0384\u0007\u008c\u0002\u0002\u0384\u0385",
	"\u0005\u00f0y\u0002\u0385w\u0003\u0002\u0002\u0002\u0386\u0387\u0007",
	"O\u0002\u0002\u0387\u0388\u0007\u008b\u0002\u0002\u0388\u0389\u0005",
	"\u010c\u0087\u0002\u0389\u038a\u0007\u008c\u0002\u0002\u038a\u038b\u0005",
	"\u00f0y\u0002\u038by\u0003\u0002\u0002\u0002\u038c\u038d\u0007<\u0002",
	"\u0002\u038d\u038e\u0005\u00f0y\u0002\u038e{\u0003\u0002\u0002\u0002",
	"\u038f\u0394\u0005\u0080A\u0002\u0390\u0393\u0005\u00d6l\u0002\u0391",
	"\u0393\u0005\u00a4S\u0002\u0392\u0390\u0003\u0002\u0002\u0002\u0392",
	"\u0391\u0003\u0002\u0002\u0002\u0393\u0396\u0003\u0002\u0002\u0002\u0394",
	"\u0392\u0003\u0002\u0002\u0002\u0394\u0395\u0003\u0002\u0002\u0002\u0395",
	"\u0397\u0003\u0002\u0002\u0002\u0396\u0394\u0003\u0002\u0002\u0002\u0397",
	"\u0398\u0007\u0091\u0002\u0002\u0398}\u0003\u0002\u0002\u0002\u0399",
	"\u039e\u0005\u0080A\u0002\u039a\u039d\u0005\u00d6l\u0002\u039b\u039d",
	"\u0005\u00a4S\u0002\u039c\u039a\u0003\u0002\u0002\u0002\u039c\u039b",
	"\u0003\u0002\u0002\u0002\u039d\u03a0\u0003\u0002\u0002\u0002\u039e\u039c",
	"\u0003\u0002\u0002\u0002\u039e\u039f\u0003\u0002\u0002\u0002\u039f\u03a1",
	"\u0003\u0002\u0002\u0002\u03a0\u039e\u0003\u0002\u0002\u0002\u03a1\u03a2",
	"\u0005\u00f0y\u0002\u03a2\u007f\u0003\u0002\u0002\u0002\u03a3\u03a5",
	"\u0005\u00a0Q\u0002\u03a4\u03a3\u0003\u0002\u0002\u0002\u03a4\u03a5",
	"\u0003\u0002\u0002\u0002\u03a5\u03a6\u0003\u0002\u0002\u0002\u03a6\u03a7",
	"\u0005\u012a\u0096\u0002\u03a7\u03a9\u0007\u008b\u0002\u0002\u03a8\u03aa",
	"\u0005\u00d2j\u0002\u03a9\u03a8\u0003\u0002\u0002\u0002\u03a9\u03aa",
	"\u0003\u0002\u0002\u0002\u03aa\u03ab\u0003\u0002\u0002\u0002\u03ab\u03ac",
	"\u0007\u008c\u0002\u0002\u03ac\u03ae\u0003\u0002\u0002\u0002\u03ad\u03af",
	"\u0005\u00a4S\u0002\u03ae\u03ad\u0003\u0002\u0002\u0002\u03ae\u03af",
	"\u0003\u0002\u0002\u0002\u03af\u0081\u0003\u0002\u0002\u0002\u03b0\u03b2",
	"\u0005\u00a0Q\u0002\u03b1\u03b0\u0003\u0002\u0002\u0002\u03b1\u03b2",
	"\u0003\u0002\u0002\u0002\u03b2\u03b3\u0003\u0002\u0002\u0002\u03b3\u03b4",
	"\u0007\u008b\u0002\u0002\u03b4\u03b6\u0007\u00a7\u0002\u0002\u03b5\u03b7",
	"\u0005\u00b4[\u0002\u03b6\u03b5\u0003\u0002\u0002\u0002\u03b6\u03b7",
	"\u0003\u0002\u0002\u0002\u03b7\u03b9\u0003\u0002\u0002\u0002\u03b8\u03ba",
	"\u0005\u012a\u0096\u0002\u03b9\u03b8\u0003\u0002\u0002\u0002\u03b9\u03ba",
	"\u0003\u0002\u0002\u0002\u03ba\u03bb\u0003\u0002\u0002\u0002\u03bb\u03bc",
	"\u0007\u008c\u0002\u0002\u03bc\u03bd\u0003\u0002\u0002\u0002\u03bd\u03bf",
	"\u0007\u008b\u0002\u0002\u03be\u03c0\u0005\u00d2j\u0002\u03bf\u03be",
	"\u0003\u0002\u0002\u0002\u03bf\u03c0\u0003\u0002\u0002\u0002\u03c0\u03c1",
	"\u0003\u0002\u0002\u0002\u03c1\u03c2\u0007\u008c\u0002\u0002\u03c2\u03c4",
	"\u0003\u0002\u0002\u0002\u03c3\u03c5\u0005\u00a4S\u0002\u03c4\u03c3",
	"\u0003\u0002\u0002\u0002\u03c4\u03c5\u0003\u0002\u0002\u0002\u03c5\u0083",
	"\u0003\u0002\u0002\u0002\u03c6\u03c8\u0005\u0086D\u0002\u03c7\u03c9",
	"\u0005\u0088E\u0002\u03c8\u03c7\u0003\u0002\u0002\u0002\u03c8\u03c9",
	"\u0003\u0002\u0002\u0002\u03c9\u0085\u0003\u0002\u0002\u0002\u03ca\u03cd",
	"\u0007\u0007\u0002\u0002\u03cb\u03cd\u0005\u012a\u0096\u0002\u03cc\u03ca",
	"\u0003\u0002\u0002\u0002\u03cc\u03cb\u0003\u0002\u0002\u0002\u03cd\u0087",
	"\u0003\u0002\u0002\u0002\u03ce\u03d0\u0007\u008b\u0002\u0002\u03cf\u03d1",
	"\u0005\u008aF\u0002\u03d0\u03cf\u0003\u0002\u0002\u0002\u03d0\u03d1",
	"\u0003\u0002\u0002\u0002\u03d1\u03d2\u0003\u0002\u0002\u0002\u03d2\u03d3",
	"\u0007\u008c\u0002\u0002\u03d3\u0089\u0003\u0002\u0002\u0002\u03d4\u03d9",
	"\u0005\u008cG\u0002\u03d5\u03d6\u0007\u0092\u0002\u0002\u03d6\u03d8",
	"\u0005\u008cG\u0002\u03d7\u03d5\u0003\u0002\u0002\u0002\u03d8\u03db",
	"\u0003\u0002\u0002\u0002\u03d9\u03d7\u0003\u0002\u0002\u0002\u03d9\u03da",
	"\u0003\u0002\u0002\u0002\u03da\u008b\u0003\u0002\u0002\u0002\u03db\u03d9",
	"\u0003\u0002\u0002\u0002\u03dc\u03e1\u0005\u0084C\u0002\u03dd\u03e1",
	"\u0005\u0126\u0094\u0002\u03de\u03e1\u0005\u0128\u0095\u0002\u03df\u03e1",
	"\u0005\u008eH\u0002\u03e0\u03dc\u0003\u0002\u0002\u0002\u03e0\u03dd",
	"\u0003\u0002\u0002\u0002\u03e0\u03de\u0003\u0002\u0002\u0002\u03e0\u03df",
	"\u0003\u0002\u0002\u0002\u03e1\u008d\u0003\u0002\u0002\u0002\u03e2\u03e3",
	"\u0005\u0086D\u0002\u03e3\u03e7\u0007\u0096\u0002\u0002\u03e4\u03e8",
	"\u0005\u0126\u0094\u0002\u03e5\u03e8\u0005\u0086D\u0002\u03e6\u03e8",
	"\u0005\u0128\u0095\u0002\u03e7\u03e4\u0003\u0002\u0002\u0002\u03e7\u03e5",
	"\u0003\u0002\u0002\u0002\u03e7\u03e6\u0003\u0002\u0002\u0002\u03e8\u008f",
	"\u0003\u0002\u0002\u0002\u03e9\u03ee\u0005\u0092J\u0002\u03ea\u03ee",
	"\u0005\u0094K\u0002\u03eb\u03ee\u0005\u0096L\u0002\u03ec\u03ee\u0005",
	"\u0098M\u0002\u03ed\u03e9\u0003\u0002\u0002\u0002\u03ed\u03ea\u0003",
	"\u0002\u0002\u0002\u03ed\u03eb\u0003\u0002\u0002\u0002\u03ed\u03ec\u0003",
	"\u0002\u0002\u0002\u03ee\u0091\u0003\u0002\u0002\u0002\u03ef\u03f1\u0005",
	"\u00a4S\u0002\u03f0\u03ef\u0003\u0002\u0002\u0002\u03f0\u03f1\u0003",
	"\u0002\u0002\u0002\u03f1\u03f2\u0003\u0002\u0002\u0002\u03f2\u03f4\u0005",
	"\u012a\u0096\u0002\u03f3\u03f5\u0005\u00a4S\u0002\u03f4\u03f3\u0003",
	"\u0002\u0002\u0002\u03f4\u03f5\u0003\u0002\u0002\u0002\u03f5\u03f6\u0003",
	"\u0002\u0002\u0002\u03f6\u03f7\u0007\u008b\u0002\u0002\u03f7\u03f8\u0005",
	"\u00ceh\u0002\u03f8\u03f9\u0007\u008c\u0002\u0002\u03f9\u03fa\u0007",
	"\u0091\u0002\u0002\u03fa\u0093\u0003\u0002\u0002\u0002\u03fb\u03fe\u0005",
	"\u00d6l\u0002\u03fc\u03fe\u0005\u00a4S\u0002\u03fd\u03fb\u0003\u0002",
	"\u0002\u0002\u03fd\u03fc\u0003\u0002\u0002\u0002\u03fe\u0401\u0003\u0002",
	"\u0002\u0002\u03ff\u03fd\u0003\u0002\u0002\u0002\u03ff\u0400\u0003\u0002",
	"\u0002\u0002\u0400\u0403\u0003\u0002\u0002\u0002\u0401\u03ff\u0003\u0002",
	"\u0002\u0002\u0402\u0404\u0007\u001f\u0002\u0002\u0403\u0402\u0003\u0002",
	"\u0002\u0002\u0403\u0404\u0003\u0002\u0002\u0002\u0404\u0405\u0003\u0002",
	"\u0002\u0002\u0405\u0407\u0005\u00c6d\u0002\u0406\u0408\u0005\u012a",
	"\u0096\u0002\u0407\u0406\u0003\u0002\u0002\u0002\u0407\u0408\u0003\u0002",
	"\u0002\u0002\u0408\u040d\u0003\u0002\u0002\u0002\u0409\u040c\u0005\u00d6",
	"l\u0002\u040a\u040c\u0005\u00a4S\u0002\u040b\u0409\u0003\u0002\u0002",
	"\u0002\u040b\u040a\u0003\u0002\u0002\u0002\u040c\u040f\u0003\u0002\u0002",
	"\u0002\u040d\u040b\u0003\u0002\u0002\u0002\u040d\u040e\u0003\u0002\u0002",
	"\u0002\u040e\u0410\u0003\u0002\u0002\u0002\u040f\u040d\u0003\u0002\u0002",
	"\u0002\u0410\u0411\u0007\u0091\u0002\u0002\u0411\u0095\u0003\u0002\u0002",
	"\u0002\u0412\u0414\u0005\u00d6l\u0002\u0413\u0412\u0003\u0002\u0002",
	"\u0002\u0413\u0414\u0003\u0002\u0002\u0002\u0414\u0419\u0003\u0002\u0002",
	"\u0002\u0415\u0416\u0005\u00a0Q\u0002\u0416\u0417\u0005\u00a6T\u0002",
	"\u0417\u041a\u0003\u0002\u0002\u0002\u0418\u041a\u0005\u00a0Q\u0002",
	"\u0419\u0415\u0003\u0002\u0002\u0002\u0419\u0418\u0003\u0002\u0002\u0002",
	"\u041a\u041f\u0003\u0002\u0002\u0002\u041b\u041e\u0005\u00d6l\u0002",
	"\u041c\u041e\u0005\u00a4S\u0002\u041d\u041b\u0003\u0002\u0002\u0002",
	"\u041d\u041c\u0003\u0002\u0002\u0002\u041e\u0421\u0003\u0002\u0002\u0002",
	"\u041f\u041d\u0003\u0002\u0002\u0002\u041f\u0420\u0003\u0002\u0002\u0002",
	"\u0420\u0422\u0003\u0002\u0002\u0002\u0421\u041f\u0003\u0002\u0002\u0002",
	"\u0422\u0423\u0007\u0091\u0002\u0002\u0423\u0097\u0003\u0002\u0002\u0002",
	"\u0424\u0426\u0005\u00a4S\u0002\u0425\u0424\u0003\u0002\u0002\u0002",
	"\u0425\u0426\u0003\u0002\u0002\u0002\u0426\u0427\u0003\u0002\u0002\u0002",
	"\u0427\u0431\u0007\u001f\u0002\u0002\u0428\u0429\u0005\u00a0Q\u0002",
	"\u0429\u042a\u0005\u009aN\u0002\u042a\u0432\u0003\u0002\u0002\u0002",
	"\u042b\u0432\u0005\u00a0Q\u0002\u042c\u0432\u0005\u0082B\u0002\u042d",
	"\u0432\u0005\u0080A\u0002\u042e\u042f\u0005\u00aaV\u0002\u042f\u0430",
	"\u0005\u012a\u0096\u0002\u0430\u0432\u0003\u0002\u0002\u0002\u0431\u0428",
	"\u0003\u0002\u0002\u0002\u0431\u042b\u0003\u0002\u0002\u0002\u0431\u042c",
	"\u0003\u0002\u0002\u0002\u0431\u042d\u0003\u0002\u0002\u0002\u0431\u042e",
	"\u0003\u0002\u0002\u0002\u0432\u0437\u0003\u0002\u0002\u0002\u0433\u0436",
	"\u0005\u00d6l\u0002\u0434\u0436\u0005\u00a4S\u0002\u0435\u0433\u0003",
	"\u0002\u0002\u0002\u0435\u0434\u0003\u0002\u0002\u0002\u0436\u0439\u0003",
	"\u0002\u0002\u0002\u0437\u0435\u0003\u0002\u0002\u0002\u0437\u0438\u0003",
	"\u0002\u0002\u0002\u0438\u043a\u0003\u0002\u0002\u0002\u0439\u0437\u0003",
	"\u0002\u0002\u0002\u043a\u043b\u0007\u0091\u0002\u0002\u043b\u0099\u0003",
	"\u0002\u0002\u0002\u043c\u0441\u0005\u009cO\u0002\u043d\u043e\u0007",
	"\u0092\u0002\u0002\u043e\u0440\u0005\u009cO\u0002\u043f\u043d\u0003",
	"\u0002\u0002\u0002\u0440\u0443\u0003\u0002\u0002\u0002\u0441\u043f\u0003",
	"\u0002\u0002\u0002\u0441\u0442\u0003\u0002\u0002\u0002\u0442\u009b\u0003",
	"\u0002\u0002\u0002\u0443\u0441\u0003\u0002\u0002\u0002\u0444\u0446\u0005",
	"\u00d4k\u0002\u0445\u0444\u0003\u0002\u0002\u0002\u0445\u0446\u0003",
	"\u0002\u0002\u0002\u0446\u0447\u0003\u0002\u0002\u0002\u0447\u0448\u0005",
	"\u00ceh\u0002\u0448\u009d\u0003\u0002\u0002\u0002\u0449\u044f\u0005",
	"\u00b2Z\u0002\u044a\u044f\u0005\u00b4[\u0002\u044b\u044f\u0005\u00b0",
	"Y\u0002\u044c\u044f\u0005\u00b8]\u0002\u044d\u044f\u0005\u00ba^\u0002",
	"\u044e\u0449\u0003\u0002\u0002\u0002\u044e\u044a\u0003\u0002\u0002\u0002",
	"\u044e\u044b\u0003\u0002\u0002\u0002\u044e\u044c\u0003\u0002\u0002\u0002",
	"\u044e\u044d\u0003\u0002\u0002\u0002\u044f\u0450\u0003\u0002\u0002\u0002",
	"\u0450\u044e\u0003\u0002\u0002\u0002\u0450\u0451\u0003\u0002\u0002\u0002",
	"\u0451\u009f\u0003\u0002\u0002\u0002\u0452\u0457\u0005\u00b6\\\u0002",
	"\u0453\u0457\u0005\u00a4S\u0002\u0454\u0457\u0005\u009eP\u0002\u0455",
	"\u0457\u0005\u00be`\u0002\u0456\u0452\u0003\u0002\u0002\u0002\u0456",
	"\u0453\u0003\u0002\u0002\u0002\u0456\u0454\u0003\u0002\u0002\u0002\u0456",
	"\u0455\u0003\u0002\u0002\u0002\u0457\u0458\u0003\u0002\u0002\u0002\u0458",
	"\u0456\u0003\u0002\u0002\u0002\u0458\u0459\u0003\u0002\u0002\u0002\u0459",
	"\u00a1\u0003\u0002\u0002\u0002\u045a\u045e\u0005\u00b6\\\u0002\u045b",
	"\u045e\u0005\u00a4S\u0002\u045c\u045e\u0005\u009eP\u0002\u045d\u045a",
	"\u0003\u0002\u0002\u0002\u045d\u045b\u0003\u0002\u0002\u0002\u045d\u045c",
	"\u0003\u0002\u0002\u0002\u045e\u045f\u0003\u0002\u0002\u0002\u045f\u045d",
	"\u0003\u0002\u0002\u0002\u045f\u0460\u0003\u0002\u0002\u0002\u0460\u00a3",
	"\u0003\u0002\u0002\u0002\u0461\u0462\u0007V\u0002\u0002\u0462\u0463",
	"\u0007\u008b\u0002\u0002\u0463\u0464\u0007\u008b\u0002\u0002\u0464\u0469",
	"\u0005\u0084C\u0002\u0465\u0466\u0007\u0092\u0002\u0002\u0466\u0468",
	"\u0005\u0084C\u0002\u0467\u0465\u0003\u0002\u0002\u0002\u0468\u046b",
	"\u0003\u0002\u0002\u0002\u0469\u0467\u0003\u0002\u0002\u0002\u0469\u046a",
	"\u0003\u0002\u0002\u0002\u046a\u046c\u0003\u0002\u0002\u0002\u046b\u0469",
	"\u0003\u0002\u0002\u0002\u046c\u046d\u0007\u008c\u0002\u0002\u046d\u046e",
	"\u0007\u008c\u0002\u0002\u046e\u00a5\u0003\u0002\u0002\u0002\u046f\u0474",
	"\u0005\u00a8U\u0002\u0470\u0471\u0007\u0092\u0002\u0002\u0471\u0473",
	"\u0005\u00a8U\u0002\u0472\u0470\u0003\u0002\u0002\u0002\u0473\u0476",
	"\u0003\u0002\u0002\u0002\u0474\u0472\u0003\u0002\u0002\u0002\u0474\u0475",
	"\u0003\u0002\u0002\u0002\u0475\u00a7\u0003\u0002\u0002\u0002\u0476\u0474",
	"\u0003\u0002\u0002\u0002\u0477\u047c\u0005\u00e8u\u0002\u0478\u047b",
	"\u0005\u00d6l\u0002\u0479\u047b\u0005\u00a4S\u0002\u047a\u0478\u0003",
	"\u0002\u0002\u0002\u047a\u0479\u0003\u0002\u0002\u0002\u047b\u047e\u0003",
	"\u0002\u0002\u0002\u047c\u047a\u0003\u0002\u0002\u0002\u047c\u047d\u0003",
	"\u0002\u0002\u0002\u047d\u0481\u0003\u0002\u0002\u0002\u047e\u047c\u0003",
	"\u0002\u0002\u0002\u047f\u0480\u0007\u0096\u0002\u0002\u0480\u0482\u0005",
	"\u0112\u008a\u0002\u0481\u047f\u0003\u0002\u0002\u0002\u0481\u0482\u0003",
	"\u0002\u0002\u0002\u0482\u00a9\u0003\u0002\u0002\u0002\u0483\u0490\t",
	"\u0005\u0002\u0002\u0484\u0491\u0005\u012a\u0096\u0002\u0485\u0487\u0005",
	"\u012a\u0096\u0002\u0486\u0485\u0003\u0002\u0002\u0002\u0486\u0487\u0003",
	"\u0002\u0002\u0002\u0487\u0488\u0003\u0002\u0002\u0002\u0488\u048a\u0007",
	"\u008d\u0002\u0002\u0489\u048b\u0005\u00acW\u0002\u048a\u0489\u0003",
	"\u0002\u0002\u0002\u048b\u048c\u0003\u0002\u0002\u0002\u048c\u048a\u0003",
	"\u0002\u0002\u0002\u048c\u048d\u0003\u0002\u0002\u0002\u048d\u048e\u0003",
	"\u0002\u0002\u0002\u048e\u048f\u0007\u008e\u0002\u0002\u048f\u0491\u0003",
	"\u0002\u0002\u0002\u0490\u0484\u0003\u0002\u0002\u0002\u0490\u0486\u0003",
	"\u0002\u0002\u0002\u0491\u00ab\u0003\u0002\u0002\u0002\u0492\u0493\u0005",
	"\u00aeX\u0002\u0493\u0494\u0005\u00c2b\u0002\u0494\u0497\u0003\u0002",
	"\u0002\u0002\u0495\u0497\u0005\u0082B\u0002\u0496\u0492\u0003\u0002",
	"\u0002\u0002\u0496\u0495\u0003\u0002\u0002\u0002\u0497\u049c\u0003\u0002",
	"\u0002\u0002\u0498\u049b\u0005\u00d6l\u0002\u0499\u049b\u0005\u00a4",
	"S\u0002\u049a\u0498\u0003\u0002\u0002\u0002\u049a\u0499\u0003\u0002",
	"\u0002\u0002\u049b\u049e\u0003\u0002\u0002\u0002\u049c\u049a\u0003\u0002",
	"\u0002\u0002\u049c\u049d\u0003\u0002\u0002\u0002\u049d\u049f\u0003\u0002",
	"\u0002\u0002\u049e\u049c\u0003\u0002\u0002\u0002\u049f\u04a0\u0007\u0091",
	"\u0002\u0002\u04a0\u00ad\u0003\u0002\u0002\u0002\u04a1\u04a4\u0005\u009e",
	"P\u0002\u04a2\u04a4\u0005\u00be`\u0002\u04a3\u04a1\u0003\u0002\u0002",
	"\u0002\u04a3\u04a2\u0003\u0002\u0002\u0002\u04a4\u04a5\u0003\u0002\u0002",
	"\u0002\u04a5\u04a3\u0003\u0002\u0002\u0002\u04a5\u04a6\u0003\u0002\u0002",
	"\u0002\u04a6\u00af\u0003\u0002\u0002\u0002\u04a7\u04a8\u0007y\u0002",
	"\u0002\u04a8\u04a9\u0007\u008b\u0002\u0002\u04a9\u04aa\u0005\u012a\u0096",
	"\u0002\u04aa\u04ab\u0007\u008c\u0002\u0002\u04ab\u04ae\u0003\u0002\u0002",
	"\u0002\u04ac\u04ae\u0007x\u0002\u0002\u04ad\u04a7\u0003\u0002\u0002",
	"\u0002\u04ad\u04ac\u0003\u0002\u0002\u0002\u04ae\u00b1\u0003\u0002\u0002",
	"\u0002\u04af\u04b0\t\u0006\u0002\u0002\u04b0\u00b3\u0003\u0002\u0002",
	"\u0002\u04b1\u04b2\t\u0007\u0002\u0002\u04b2\u00b5\u0003\u0002\u0002",
	"\u0002\u04b3\u04b4\t\b\u0002\u0002\u04b4\u00b7\u0003\u0002\u0002\u0002",
	"\u04b5\u04b6\t\t\u0002\u0002\u04b6\u00b9\u0003\u0002\u0002\u0002\u04b7",
	"\u04bc\u0007\u0007\u0002\u0002\u04b8\u04bc\u0007#\u0002\u0002\u04b9",
	"\u04bc\u0007\u0017\u0002\u0002\u04ba\u04bc\u0005\u00bc_\u0002\u04bb",
	"\u04b7\u0003\u0002\u0002\u0002\u04bb\u04b8\u0003\u0002\u0002\u0002\u04bb",
	"\u04b9\u0003\u0002\u0002\u0002\u04bb\u04ba\u0003\u0002\u0002\u0002\u04bc",
	"\u00bb\u0003\u0002\u0002\u0002\u04bd\u04be\t\n\u0002\u0002\u04be\u00bd",
	"\u0003\u0002\u0002\u0002\u04bf\u04c1\t\u000b\u0002\u0002\u04c0\u04bf",
	"\u0003\u0002\u0002\u0002\u04c1\u04c2\u0003\u0002\u0002\u0002\u04c2\u04c0",
	"\u0003\u0002\u0002\u0002\u04c2\u04c3\u0003\u0002\u0002\u0002\u04c3\u04ca",
	"\u0003\u0002\u0002\u0002\u04c4\u04ca\u0005\u00c0a\u0002\u04c5\u04ca",
	"\u0005\u0010\t\u0002\u04c6\u04ca\u0005\u00aaV\u0002\u04c7\u04ca\u0005",
	"\u00c6d\u0002\u04c8\u04ca\u0005\u012a\u0096\u0002\u04c9\u04c0\u0003",
	"\u0002\u0002\u0002\u04c9\u04c4\u0003\u0002\u0002\u0002\u04c9\u04c5\u0003",
	"\u0002\u0002\u0002\u04c9\u04c6\u0003\u0002\u0002\u0002\u04c9\u04c7\u0003",
	"\u0002\u0002\u0002\u04c9\u04c8\u0003\u0002\u0002\u0002\u04ca\u04cc\u0003",
	"\u0002\u0002\u0002\u04cb\u04cd\u0005\u00d4k\u0002\u04cc\u04cb\u0003",
	"\u0002\u0002\u0002\u04cc\u04cd\u0003\u0002\u0002\u0002\u04cd\u00bf\u0003",
	"\u0002\u0002\u0002\u04ce\u04cf\u0007a\u0002\u0002\u04cf\u04d0\u0007",
	"\u008b\u0002\u0002\u04d0\u04d1\u0005\u010c\u0087\u0002\u04d1\u04d2\u0007",
	"\u008c\u0002\u0002\u04d2\u00c1\u0003\u0002\u0002\u0002\u04d3\u04d8\u0005",
	"\u00c4c\u0002\u04d4\u04d5\u0007\u0092\u0002\u0002\u04d5\u04d7\u0005",
	"\u00c4c\u0002\u04d6\u04d4\u0003\u0002\u0002\u0002\u04d7\u04da\u0003",
	"\u0002\u0002\u0002\u04d8\u04d6\u0003\u0002\u0002\u0002\u04d8\u04d9\u0003",
	"\u0002\u0002\u0002\u04d9\u00c3\u0003\u0002\u0002\u0002\u04da\u04d8\u0003",
	"\u0002\u0002\u0002\u04db\u04e2\u0005\u00e8u\u0002\u04dc\u04de\u0005",
	"\u00e8u\u0002\u04dd\u04dc\u0003\u0002\u0002\u0002\u04dd\u04de\u0003",
	"\u0002\u0002\u0002\u04de\u04df\u0003\u0002\u0002\u0002\u04df\u04e0\u0007",
	"\u009c\u0002\u0002\u04e0\u04e2\u0005\u0126\u0094\u0002\u04e1\u04db\u0003",
	"\u0002\u0002\u0002\u04e1\u04dd\u0003\u0002\u0002\u0002\u04e2\u00c5\u0003",
	"\u0002\u0002\u0002\u04e3\u04e9\u0007\r\u0002\u0002\u04e4\u04e6\u0005",
	"\u012a\u0096\u0002\u04e5\u04e4\u0003\u0002\u0002\u0002\u04e5\u04e6\u0003",
	"\u0002\u0002\u0002\u04e6\u04e7\u0003\u0002\u0002\u0002\u04e7\u04e8\u0007",
	"\u009c\u0002\u0002\u04e8\u04ea\u0005\u00dep\u0002\u04e9\u04e5\u0003",
	"\u0002\u0002\u0002\u04e9\u04ea\u0003\u0002\u0002\u0002\u04ea\u04f6\u0003",
	"\u0002\u0002\u0002\u04eb\u04f0\u0005\u012a\u0096\u0002\u04ec\u04ed\u0007",
	"\u008d\u0002\u0002\u04ed\u04ee\u0005\u00c8e\u0002\u04ee\u04ef\u0007",
	"\u008e\u0002\u0002\u04ef\u04f1\u0003\u0002\u0002\u0002\u04f0\u04ec\u0003",
	"\u0002\u0002\u0002\u04f0\u04f1\u0003\u0002\u0002\u0002\u04f1\u04f7\u0003",
	"\u0002\u0002\u0002\u04f2\u04f3\u0007\u008d\u0002\u0002\u04f3\u04f4\u0005",
	"\u00c8e\u0002\u04f4\u04f5\u0007\u008e\u0002\u0002\u04f5\u04f7\u0003",
	"\u0002\u0002\u0002\u04f6\u04eb\u0003\u0002\u0002\u0002\u04f6\u04f2\u0003",
	"\u0002\u0002\u0002\u04f7\u0505\u0003\u0002\u0002\u0002\u04f8\u04f9\t",
	"\f\u0002\u0002\u04f9\u04fa\u0007\u008b\u0002\u0002\u04fa\u04fd\u0005",
	"\u00dep\u0002\u04fb\u04fc\u0007\u0092\u0002\u0002\u04fc\u04fe\u0005",
	"\u012a\u0096\u0002\u04fd\u04fb\u0003\u0002\u0002\u0002\u04fd\u04fe\u0003",
	"\u0002\u0002\u0002\u04fe\u04ff\u0003\u0002\u0002\u0002\u04ff\u0500\u0007",
	"\u008c\u0002\u0002\u0500\u0501\u0007\u008d\u0002\u0002\u0501\u0502\u0005",
	"\u00c8e\u0002\u0502\u0503\u0007\u008e\u0002\u0002\u0503\u0505\u0003",
	"\u0002\u0002\u0002\u0504\u04e3\u0003\u0002\u0002\u0002\u0504\u04f8\u0003",
	"\u0002\u0002\u0002\u0505\u00c7\u0003\u0002\u0002\u0002\u0506\u050b\u0005",
	"\u00caf\u0002\u0507\u0508\u0007\u0092\u0002\u0002\u0508\u050a\u0005",
	"\u00caf\u0002\u0509\u0507\u0003\u0002\u0002\u0002\u050a\u050d\u0003",
	"\u0002\u0002\u0002\u050b\u0509\u0003\u0002\u0002\u0002\u050b\u050c\u0003",
	"\u0002\u0002\u0002\u050c\u050f\u0003\u0002\u0002\u0002\u050d\u050b\u0003",
	"\u0002\u0002\u0002\u050e\u0510\u0007\u0092\u0002\u0002\u050f\u050e\u0003",
	"\u0002\u0002\u0002\u050f\u0510\u0003\u0002\u0002\u0002\u0510\u00c9\u0003",
	"\u0002\u0002\u0002\u0511\u0516\u0005\u00ccg\u0002\u0512\u0515\u0005",
	"\u00d6l\u0002\u0513\u0515\u0005\u00a4S\u0002\u0514\u0512\u0003\u0002",
	"\u0002\u0002\u0514\u0513\u0003\u0002\u0002\u0002\u0515\u0518\u0003\u0002",
	"\u0002\u0002\u0516\u0514\u0003\u0002\u0002\u0002\u0516\u0517\u0003\u0002",
	"\u0002\u0002\u0517\u051b\u0003\u0002\u0002\u0002\u0518\u0516\u0003\u0002",
	"\u0002\u0002\u0519\u051a\u0007\u0096\u0002\u0002\u051a\u051c\u0005\u010c",
	"\u0087\u0002\u051b\u0519\u0003\u0002\u0002\u0002\u051b\u051c\u0003\u0002",
	"\u0002\u0002\u051c\u00cb\u0003\u0002\u0002\u0002\u051d\u0520\u0005\u012a",
	"\u0096\u0002\u051e\u0520\u0007\t\u0002\u0002\u051f\u051d\u0003\u0002",
	"\u0002\u0002\u051f\u051e\u0003\u0002\u0002\u0002\u0520\u00cd\u0003\u0002",
	"\u0002\u0002\u0521\u0527\u0005\u012a\u0096\u0002\u0522\u0523\u0007\u008b",
	"\u0002\u0002\u0523\u0524\u0005\u00e8u\u0002\u0524\u0525\u0007\u008c",
	"\u0002\u0002\u0525\u0527\u0003\u0002\u0002\u0002\u0526\u0521\u0003\u0002",
	"\u0002\u0002\u0526\u0522\u0003\u0002\u0002\u0002\u0527\u052b\u0003\u0002",
	"\u0002\u0002\u0528\u052a\u0005\u00d0i\u0002\u0529\u0528\u0003\u0002",
	"\u0002\u0002\u052a\u052d\u0003\u0002\u0002\u0002\u052b\u0529\u0003\u0002",
	"\u0002\u0002\u052b\u052c\u0003\u0002\u0002\u0002\u052c\u0539\u0003\u0002",
	"\u0002\u0002\u052d\u052b\u0003\u0002\u0002\u0002\u052e\u052f\u0007\u008b",
	"\u0002\u0002\u052f\u0531\u0007\u00ab\u0002\u0002\u0530\u0532\u0005\u00b4",
	"[\u0002\u0531\u0530\u0003\u0002\u0002\u0002\u0531\u0532\u0003\u0002",
	"\u0002\u0002\u0532\u0534\u0003\u0002\u0002\u0002\u0533\u0535\u0005\u012a",
	"\u0096\u0002\u0534\u0533\u0003\u0002\u0002\u0002\u0534\u0535\u0003\u0002",
	"\u0002\u0002\u0535\u0536\u0003\u0002\u0002\u0002\u0536\u0537\u0007\u008c",
	"\u0002\u0002\u0537\u0539\u0005X-\u0002\u0538\u0526\u0003\u0002\u0002",
	"\u0002\u0538\u052e\u0003\u0002\u0002\u0002\u0539\u00cf\u0003\u0002\u0002",
	"\u0002\u053a\u053c\u0007\u008f\u0002\u0002\u053b\u053d\u0005\u0114\u008b",
	"\u0002\u053c\u053b\u0003\u0002\u0002\u0002\u053c\u053d\u0003\u0002\u0002",
	"\u0002\u053d\u053e\u0003\u0002\u0002\u0002\u053e\u053f\u0007\u0090\u0002",
	"\u0002\u053f\u00d1\u0003\u0002\u0002\u0002\u0540\u0543\u0005\u00e4s",
	"\u0002\u0541\u0542\u0007\u0092\u0002\u0002\u0542\u0544\u0007\u00b7\u0002",
	"\u0002\u0543\u0541\u0003\u0002\u0002\u0002\u0543\u0544\u0003\u0002\u0002",
	"\u0002\u0544\u00d3\u0003\u0002\u0002\u0002\u0545\u0547\u0007\u00a7\u0002",
	"\u0002\u0546\u0548\u0005\u00a2R\u0002\u0547\u0546\u0003\u0002\u0002",
	"\u0002\u0547\u0548\u0003\u0002\u0002\u0002\u0548\u054a\u0003\u0002\u0002",
	"\u0002\u0549\u054b\u0005\u00d4k\u0002\u054a\u0549\u0003\u0002\u0002",
	"\u0002\u054a\u054b\u0003\u0002\u0002\u0002\u054b\u00d5\u0003\u0002\u0002",
	"\u0002\u054c\u0572\u0005\u012a\u0096\u0002\u054d\u0564\u0007\u008b\u0002",
	"\u0002\u054e\u0565\u0005\u0124\u0093\u0002\u054f\u0565\u0005\u0122\u0092",
	"\u0002\u0550\u0555\u0005\u012a\u0096\u0002\u0551\u0552\u0007\u0093\u0002",
	"\u0002\u0552\u0554\u0005\u012a\u0096\u0002\u0553\u0551\u0003\u0002\u0002",
	"\u0002\u0554\u0557\u0003\u0002\u0002\u0002\u0555\u0553\u0003\u0002\u0002",
	"\u0002\u0555\u0556\u0003\u0002\u0002\u0002\u0556\u0562\u0003\u0002\u0002",
	"\u0002\u0557\u0555\u0003\u0002\u0002\u0002\u0558\u055e\u0007\u008b\u0002",
	"\u0002\u0559\u055a\u0005\u012a\u0096\u0002\u055a\u055b\u0007\u009c\u0002",
	"\u0002\u055b\u055d\u0003\u0002\u0002\u0002\u055c\u0559\u0003\u0002\u0002",
	"\u0002\u055d\u0560\u0003\u0002\u0002\u0002\u055e\u055c\u0003\u0002\u0002",
	"\u0002\u055e\u055f\u0003\u0002\u0002\u0002\u055f\u0561\u0003\u0002\u0002",
	"\u0002\u0560\u055e\u0003\u0002\u0002\u0002\u0561\u0563\u0007\u008c\u0002",
	"\u0002\u0562\u0558\u0003\u0002\u0002\u0002\u0562\u0563\u0003\u0002\u0002",
	"\u0002\u0563\u0565\u0003\u0002\u0002\u0002\u0564\u054e\u0003\u0002\u0002",
	"\u0002\u0564\u054f\u0003\u0002\u0002\u0002\u0564\u0550\u0003\u0002\u0002",
	"\u0002\u0565\u056d\u0003\u0002\u0002\u0002\u0566\u0569\u0007\u0092\u0002",
	"\u0002\u0567\u056a\u0005\u0124\u0093\u0002\u0568\u056a\u0005\u0122\u0092",
	"\u0002\u0569\u0567\u0003\u0002\u0002\u0002\u0569\u0568\u0003\u0002\u0002",
	"\u0002\u056a\u056c\u0003\u0002\u0002\u0002\u056b\u0566\u0003\u0002\u0002",
	"\u0002\u056c\u056f\u0003\u0002\u0002\u0002\u056d\u056b\u0003\u0002\u0002",
	"\u0002\u056d\u056e\u0003\u0002\u0002\u0002\u056e\u0570\u0003\u0002\u0002",
	"\u0002\u056f\u056d\u0003\u0002\u0002\u0002\u0570\u0571\u0007\u008c\u0002",
	"\u0002\u0571\u0573\u0003\u0002\u0002\u0002\u0572\u054d\u0003\u0002\u0002",
	"\u0002\u0572\u0573\u0003\u0002\u0002\u0002\u0573\u00d7\u0003\u0002\u0002",
	"\u0002\u0574\u0579\u0007\u008d\u0002\u0002\u0575\u0577\u0005\u010a\u0086",
	"\u0002\u0576\u0578\u0007\u0092\u0002\u0002\u0577\u0576\u0003\u0002\u0002",
	"\u0002\u0577\u0578\u0003\u0002\u0002\u0002\u0578\u057a\u0003\u0002\u0002",
	"\u0002\u0579\u0575\u0003\u0002\u0002\u0002\u0579\u057a\u0003\u0002\u0002",
	"\u0002\u057a\u057b\u0003\u0002\u0002\u0002\u057b\u057c\u0007\u008e\u0002",
	"\u0002\u057c\u00d9\u0003\u0002\u0002\u0002\u057d\u058b\u0007\u008d\u0002",
	"\u0002\u057e\u057f\u0007\u0093\u0002\u0002\u057f\u0585\u0005\u010c\u0087",
	"\u0002\u0580\u0581\u0007\u0092\u0002\u0002\u0581\u0582\u0007\u0093\u0002",
	"\u0002\u0582\u0584\u0005\u010c\u0087\u0002\u0583\u0580\u0003\u0002\u0002",
	"\u0002\u0584\u0587\u0003\u0002\u0002\u0002\u0585\u0583\u0003\u0002\u0002",
	"\u0002\u0585\u0586\u0003\u0002\u0002\u0002\u0586\u0589\u0003\u0002\u0002",
	"\u0002\u0587\u0585\u0003\u0002\u0002\u0002\u0588\u058a\u0007\u0092\u0002",
	"\u0002\u0589\u0588\u0003\u0002\u0002\u0002\u0589\u058a\u0003\u0002\u0002",
	"\u0002\u058a\u058c\u0003\u0002\u0002\u0002\u058b\u057e\u0003\u0002\u0002",
	"\u0002\u058b\u058c\u0003\u0002\u0002\u0002\u058c\u058d\u0003\u0002\u0002",
	"\u0002\u058d\u058e\u0007\u008e\u0002\u0002\u058e\u00db\u0003\u0002\u0002",
	"\u0002\u058f\u0594\u0005\u0112\u008a\u0002\u0590\u0591\u0007\u0092\u0002",
	"\u0002\u0591\u0593\u0005\u0112\u008a\u0002\u0592\u0590\u0003\u0002\u0002",
	"\u0002\u0593\u0596\u0003\u0002\u0002\u0002\u0594\u0592\u0003\u0002\u0002",
	"\u0002\u0594\u0595\u0003\u0002\u0002\u0002\u0595\u0598\u0003\u0002\u0002",
	"\u0002\u0596\u0594\u0003\u0002\u0002\u0002\u0597\u0599\u0007\u0092\u0002",
	"\u0002\u0598\u0597\u0003\u0002\u0002\u0002\u0598\u0599\u0003\u0002\u0002",
	"\u0002\u0599\u00dd\u0003\u0002\u0002\u0002\u059a\u059c\u0005\u00aeX",
	"\u0002\u059b\u059d\u0005\u00e0q\u0002\u059c\u059b\u0003\u0002\u0002",
	"\u0002\u059c\u059d\u0003\u0002\u0002\u0002\u059d\u05a1\u0003\u0002\u0002",
	"\u0002\u059e\u05a1\u0005J&\u0002\u059f\u05a1\u0005\u0082B\u0002\u05a0",
	"\u059a\u0003\u0002\u0002\u0002\u05a0\u059e\u0003\u0002\u0002\u0002\u05a0",
	"\u059f\u0003\u0002\u0002\u0002\u05a1\u00df\u0003\u0002\u0002\u0002\u05a2",
	"\u05a4\u0005\u00d4k\u0002\u05a3\u05a5\u0005\u00e0q\u0002\u05a4\u05a3",
	"\u0003\u0002\u0002\u0002\u05a4\u05a5\u0003\u0002\u0002\u0002\u05a5\u05ba",
	"\u0003\u0002\u0002\u0002\u05a6\u05a8\u0007\u008b\u0002\u0002\u05a7\u05a9",
	"\u0005\u00e0q\u0002\u05a8\u05a7\u0003\u0002\u0002\u0002\u05a8\u05a9",
	"\u0003\u0002\u0002\u0002\u05a9\u05aa\u0003\u0002\u0002\u0002\u05aa\u05ac",
	"\u0007\u008c\u0002\u0002\u05ab\u05ad\u0005\u00e2r\u0002\u05ac\u05ab",
	"\u0003\u0002\u0002\u0002\u05ad\u05ae\u0003\u0002\u0002\u0002\u05ae\u05ac",
	"\u0003\u0002\u0002\u0002\u05ae\u05af\u0003\u0002\u0002\u0002\u05af\u05ba",
	"\u0003\u0002\u0002\u0002\u05b0\u05b2\u0007\u008f\u0002\u0002\u05b1\u05b3",
	"\u0005\u0114\u008b\u0002\u05b2\u05b1\u0003\u0002\u0002\u0002\u05b2\u05b3",
	"\u0003\u0002\u0002\u0002\u05b3\u05b4\u0003\u0002\u0002\u0002\u05b4\u05b6",
	"\u0007\u0090\u0002\u0002\u05b5\u05b0\u0003\u0002\u0002\u0002\u05b6\u05b7",
	"\u0003\u0002\u0002\u0002\u05b7\u05b5\u0003\u0002\u0002\u0002\u05b7\u05b8",
	"\u0003\u0002\u0002\u0002\u05b8\u05ba\u0003\u0002\u0002\u0002\u05b9\u05a2",
	"\u0003\u0002\u0002\u0002\u05b9\u05a6\u0003\u0002\u0002\u0002\u05b9\u05b5",
	"\u0003\u0002\u0002\u0002\u05ba\u00e1\u0003\u0002\u0002\u0002\u05bb\u05bd",
	"\u0007\u008f\u0002\u0002\u05bc\u05be\u0005\u0114\u008b\u0002\u05bd\u05bc",
	"\u0003\u0002\u0002\u0002\u05bd\u05be\u0003\u0002\u0002\u0002\u05be\u05bf",
	"\u0003\u0002\u0002\u0002\u05bf\u05c6\u0007\u0090\u0002\u0002\u05c0\u05c2",
	"\u0007\u008b\u0002\u0002\u05c1\u05c3\u0005\u00e4s\u0002\u05c2\u05c1",
	"\u0003\u0002\u0002\u0002\u05c2\u05c3\u0003\u0002\u0002\u0002\u05c3\u05c4",
	"\u0003\u0002\u0002\u0002\u05c4\u05c6\u0007\u008c\u0002\u0002\u05c5\u05bb",
	"\u0003\u0002\u0002\u0002\u05c5\u05c0\u0003\u0002\u0002\u0002\u05c6\u00e3",
	"\u0003\u0002\u0002\u0002\u05c7\u05cc\u0005\u00e6t\u0002\u05c8\u05c9",
	"\u0007\u0092\u0002\u0002\u05c9\u05cb\u0005\u00e6t\u0002\u05ca\u05c8",
	"\u0003\u0002\u0002\u0002\u05cb\u05ce\u0003\u0002\u0002\u0002\u05cc\u05ca",
	"\u0003\u0002\u0002\u0002\u05cc\u05cd\u0003\u0002\u0002\u0002\u05cd\u00e5",
	"\u0003\u0002\u0002\u0002\u05ce\u05cc\u0003\u0002\u0002\u0002\u05cf\u05d1",
	"\u0005\u00a0Q\u0002\u05d0\u05d2\u0005\u00e8u\u0002\u05d1\u05d0\u0003",
	"\u0002\u0002\u0002\u05d1\u05d2\u0003\u0002\u0002\u0002\u05d2\u05d6\u0003",
	"\u0002\u0002\u0002\u05d3\u05d6\u0007\"\u0002\u0002\u05d4\u05d6\u0005",
	"\u0082B\u0002\u05d5\u05cf\u0003\u0002\u0002\u0002\u05d5\u05d3\u0003",
	"\u0002\u0002\u0002\u05d5\u05d4\u0003\u0002\u0002\u0002\u05d6\u00e7\u0003",
	"\u0002\u0002\u0002\u05d7\u05d9\u0005\u00d4k\u0002\u05d8\u05d7\u0003",
	"\u0002\u0002\u0002\u05d8\u05d9\u0003\u0002\u0002\u0002\u05d9\u05da\u0003",
	"\u0002\u0002\u0002\u05da\u05db\u0005\u00ceh\u0002\u05db\u00e9\u0003",
	"\u0002\u0002\u0002\u05dc\u05de\u0005\u00ecw\u0002\u05dd\u05df\u0007",
	"\u0091\u0002\u0002\u05de\u05dd\u0003\u0002\u0002\u0002\u05de\u05df\u0003",
	"\u0002\u0002\u0002\u05df\u0606\u0003\u0002\u0002\u0002\u05e0\u05e2\u0005",
	"\u00f0y\u0002\u05e1\u05e3\u0007\u0091\u0002\u0002\u05e2\u05e1\u0003",
	"\u0002\u0002\u0002\u05e2\u05e3\u0003\u0002\u0002\u0002\u05e3\u0606\u0003",
	"\u0002\u0002\u0002\u05e4\u05e6\u0005\u00f2z\u0002\u05e5\u05e7\u0007",
	"\u0091\u0002\u0002\u05e6\u05e5\u0003\u0002\u0002\u0002\u05e6\u05e7\u0003",
	"\u0002\u0002\u0002\u05e7\u0606\u0003\u0002\u0002\u0002\u05e8\u05ea\u0005",
	"\u00fc\u007f\u0002\u05e9\u05eb\u0007\u0091\u0002\u0002\u05ea\u05e9\u0003",
	"\u0002\u0002\u0002\u05ea\u05eb\u0003\u0002\u0002\u0002\u05eb\u0606\u0003",
	"\u0002\u0002\u0002\u05ec\u05ee\u0005\u0108\u0085\u0002\u05ed\u05ef\u0007",
	"\u0091\u0002\u0002\u05ee\u05ed\u0003\u0002\u0002\u0002\u05ee\u05ef\u0003",
	"\u0002\u0002\u0002\u05ef\u0606\u0003\u0002\u0002\u0002\u05f0\u05f2\u0005",
	"x=\u0002\u05f1\u05f3\u0007\u0091\u0002\u0002\u05f2\u05f1\u0003\u0002",
	"\u0002\u0002\u05f2\u05f3\u0003\u0002\u0002\u0002\u05f3\u0606\u0003\u0002",
	"\u0002\u0002\u05f4\u05f6\u0005z>\u0002\u05f5\u05f7\u0007\u0091\u0002",
	"\u0002\u05f6\u05f5\u0003\u0002\u0002\u0002\u05f6\u05f7\u0003\u0002\u0002",
	"\u0002\u05f7\u0606\u0003\u0002\u0002\u0002\u05f8\u05fa\u0005r:\u0002",
	"\u05f9\u05fb\u0007\u0091\u0002\u0002\u05fa\u05f9\u0003\u0002\u0002\u0002",
	"\u05fa\u05fb\u0003\u0002\u0002\u0002\u05fb\u0606\u0003\u0002\u0002\u0002",
	"\u05fc\u05fe\u0005t;\u0002\u05fd\u05ff\u0007\u0091\u0002\u0002\u05fe",
	"\u05fd\u0003\u0002\u0002\u0002\u05fe\u05ff\u0003\u0002\u0002\u0002\u05ff",
	"\u0606\u0003\u0002\u0002\u0002\u0600\u0602\u0005\u010a\u0086\u0002\u0601",
	"\u0603\u0007\u0091\u0002\u0002\u0602\u0601\u0003\u0002\u0002\u0002\u0602",
	"\u0603\u0003\u0002\u0002\u0002\u0603\u0606\u0003\u0002\u0002\u0002\u0604",
	"\u0606\u0007\u0091\u0002\u0002\u0605\u05dc\u0003\u0002\u0002\u0002\u0605",
	"\u05e0\u0003\u0002\u0002\u0002\u0605\u05e4\u0003\u0002\u0002\u0002\u0605",
	"\u05e8\u0003\u0002\u0002\u0002\u0605\u05ec\u0003\u0002\u0002\u0002\u0605",
	"\u05f0\u0003\u0002\u0002\u0002\u0605\u05f4\u0003\u0002\u0002\u0002\u0605",
	"\u05f8\u0003\u0002\u0002\u0002\u0605\u05fc\u0003\u0002\u0002\u0002\u0605",
	"\u0600\u0003\u0002\u0002\u0002\u0605\u0604\u0003\u0002\u0002\u0002\u0606",
	"\u00eb\u0003\u0002\u0002\u0002\u0607\u0608\u0005\u012a\u0096\u0002\u0608",
	"\u0609\u0007\u009c\u0002\u0002\u0609\u060a\u0005\u00eav\u0002\u060a",
	"\u00ed\u0003\u0002\u0002\u0002\u060b\u060e\u0005\u0114\u008b\u0002\u060c",
	"\u060d\u0007\u00b7\u0002\u0002\u060d\u060f\u0005\u0114\u008b\u0002\u060e",
	"\u060c\u0003\u0002\u0002\u0002\u060e\u060f\u0003\u0002\u0002\u0002\u060f",
	"\u00ef\u0003\u0002\u0002\u0002\u0610\u0615\u0007\u008d\u0002\u0002\u0611",
	"\u0614\u0005\u0090I\u0002\u0612\u0614\u0005\u00eav\u0002\u0613\u0611",
	"\u0003\u0002\u0002\u0002\u0613\u0612\u0003\u0002\u0002\u0002\u0614\u0617",
	"\u0003\u0002\u0002\u0002\u0615\u0613\u0003\u0002\u0002\u0002\u0615\u0616",
	"\u0003\u0002\u0002\u0002\u0616\u0618\u0003\u0002\u0002\u0002\u0617\u0615",
	"\u0003\u0002\u0002\u0002\u0618\u0619\u0007\u008e\u0002\u0002\u0619\u00f1",
	"\u0003\u0002\u0002\u0002\u061a\u061b\u0007\u0012\u0002\u0002\u061b\u061c",
	"\u0007\u008b\u0002\u0002\u061c\u061d\u0005\u010c\u0087\u0002\u061d\u061e",
	"\u0007\u008c\u0002\u0002\u061e\u0621\u0005\u00eav\u0002\u061f\u0620",
	"\u0007\f\u0002\u0002\u0620\u0622\u0005\u00eav\u0002\u0621\u061f\u0003",
	"\u0002\u0002\u0002\u0621\u0622\u0003\u0002\u0002\u0002\u0622\u0625\u0003",
	"\u0002\u0002\u0002\u0623\u0625\u0005\u00f4{\u0002\u0624\u061a\u0003",
	"\u0002\u0002\u0002\u0624\u0623\u0003\u0002\u0002\u0002\u0625\u00f3\u0003",
	"\u0002\u0002\u0002\u0626\u0627\u0007\u001e\u0002\u0002\u0627\u0628\u0007",
	"\u008b\u0002\u0002\u0628\u0629\u0005\u010c\u0087\u0002\u0629\u062a\u0007",
	"\u008c\u0002\u0002\u062a\u062b\u0005\u00f6|\u0002\u062b\u00f5\u0003",
	"\u0002\u0002\u0002\u062c\u0630\u0007\u008d\u0002\u0002\u062d\u062f\u0005",
	"\u00f8}\u0002\u062e\u062d\u0003\u0002\u0002\u0002\u062f\u0632\u0003",
	"\u0002\u0002\u0002\u0630\u062e\u0003\u0002\u0002\u0002\u0630\u0631\u0003",
	"\u0002\u0002\u0002\u0631\u0633\u0003\u0002\u0002\u0002\u0632\u0630\u0003",
	"\u0002\u0002\u0002\u0633\u0634\u0007\u008e\u0002\u0002\u0634\u00f7\u0003",
	"\u0002\u0002\u0002\u0635\u0637\u0005\u00fa~\u0002\u0636\u0635\u0003",
	"\u0002\u0002\u0002\u0637\u0638\u0003\u0002\u0002\u0002\u0638\u0636\u0003",
	"\u0002\u0002\u0002\u0638\u0639\u0003\u0002\u0002\u0002\u0639\u063b\u0003",
	"\u0002\u0002\u0002\u063a\u063c\u0005\u00eav\u0002\u063b\u063a\u0003",
	"\u0002\u0002\u0002\u063c\u063d\u0003\u0002\u0002\u0002\u063d\u063b\u0003",
	"\u0002\u0002\u0002\u063d\u063e\u0003\u0002\u0002\u0002\u063e\u00f9\u0003",
	"\u0002\u0002\u0002\u063f\u0645\u0007\u0005\u0002\u0002\u0640\u0646\u0005",
	"\u00eex\u0002\u0641\u0642\u0007\u008b\u0002\u0002\u0642\u0643\u0005",
	"\u00eex\u0002\u0643\u0644\u0007\u008c\u0002\u0002\u0644\u0646\u0003",
	"\u0002\u0002\u0002\u0645\u0640\u0003\u0002\u0002\u0002\u0645\u0641\u0003",
	"\u0002\u0002\u0002\u0646\u0647\u0003\u0002\u0002\u0002\u0647\u0648\u0007",
	"\u009c\u0002\u0002\u0648\u064c\u0003\u0002\u0002\u0002\u0649\u064a\u0007",
	"\t\u0002\u0002\u064a\u064c\u0007\u009c\u0002\u0002\u064b\u063f\u0003",
	"\u0002\u0002\u0002\u064b\u0649\u0003\u0002\u0002\u0002\u064c\u00fb\u0003",
	"\u0002\u0002\u0002\u064d\u0652\u0005\u00fe\u0080\u0002\u064e\u0652\u0005",
	"\u0100\u0081\u0002\u064f\u0652\u0005\u0102\u0082\u0002\u0650\u0652\u0005",
	"\u0106\u0084\u0002\u0651\u064d\u0003\u0002\u0002\u0002\u0651\u064e\u0003",
	"\u0002\u0002\u0002\u0651\u064f\u0003\u0002\u0002\u0002\u0651\u0650\u0003",
	"\u0002\u0002\u0002\u0652\u00fd\u0003\u0002\u0002\u0002\u0653\u0654\u0007",
	"$\u0002\u0002\u0654\u0655\u0007\u008b\u0002\u0002\u0655\u0656\u0005",
	"\u010c\u0087\u0002\u0656\u0657\u0007\u008c\u0002\u0002\u0657\u0658\u0005",
	"\u00eav\u0002\u0658\u00ff\u0003\u0002\u0002\u0002\u0659\u065a\u0007",
	"\n\u0002\u0002\u065a\u065b\u0005\u00eav\u0002\u065b\u065c\u0007$\u0002",
	"\u0002\u065c\u065d\u0007\u008b\u0002\u0002\u065d\u065e\u0005\u010c\u0087",
	"\u0002\u065e\u065f\u0007\u008c\u0002\u0002\u065f\u0660\u0007\u0091\u0002",
	"\u0002\u0660\u0101\u0003\u0002\u0002\u0002\u0661\u0662\u0007\u0010\u0002",
	"\u0002\u0662\u0664\u0007\u008b\u0002\u0002\u0663\u0665\u0005\u0104\u0083",
	"\u0002\u0664\u0663\u0003\u0002\u0002\u0002\u0664\u0665\u0003\u0002\u0002",
	"\u0002\u0665\u0666\u0003\u0002\u0002\u0002\u0666\u0668\u0007\u0091\u0002",
	"\u0002\u0667\u0669\u0005\u010c\u0087\u0002\u0668\u0667\u0003\u0002\u0002",
	"\u0002\u0668\u0669\u0003\u0002\u0002\u0002\u0669\u066a\u0003\u0002\u0002",
	"\u0002\u066a\u066c\u0007\u0091\u0002\u0002\u066b\u066d\u0005\u010a\u0086",
	"\u0002\u066c\u066b\u0003\u0002\u0002\u0002\u066c\u066d\u0003\u0002\u0002",
	"\u0002\u066d\u066e\u0003\u0002\u0002\u0002\u066e\u066f\u0007\u008c\u0002",
	"\u0002\u066f\u0670\u0005\u00eav\u0002\u0670\u0103\u0003\u0002\u0002",
	"\u0002\u0671\u0672\u0005\u00a0Q\u0002\u0672\u0673\u0005\u00a6T\u0002",
	"\u0673\u0676\u0003\u0002\u0002\u0002\u0674\u0676\u0005\u010a\u0086\u0002",
	"\u0675\u0671\u0003\u0002\u0002\u0002\u0675\u0674\u0003\u0002\u0002\u0002",
	"\u0676\u0105\u0003\u0002\u0002\u0002\u0677\u0678\u0007\u0010\u0002\u0002",
	"\u0678\u0679\u0007\u008b\u0002\u0002\u0679\u067a\u0005p9\u0002\u067a",
	"\u067c\u00070\u0002\u0002\u067b\u067d\u0005\u010c\u0087\u0002\u067c",
	"\u067b\u0003\u0002\u0002\u0002\u067c\u067d\u0003\u0002\u0002\u0002\u067d",
	"\u067e\u0003\u0002\u0002\u0002\u067e\u067f\u0007\u008c\u0002\u0002\u067f",
	"\u0680\u0005\u00eav\u0002\u0680\u0107\u0003\u0002\u0002\u0002\u0681",
	"\u0682\u0007\u0011\u0002\u0002\u0682\u068a\u0005\u012a\u0096\u0002\u0683",
	"\u068a\u0007\b\u0002\u0002\u0684\u068a\u0007\u0004\u0002\u0002\u0685",
	"\u0687\u0007\u0018\u0002\u0002\u0686\u0688\u0005\u010c\u0087\u0002\u0687",
	"\u0686\u0003\u0002\u0002\u0002\u0687\u0688\u0003\u0002\u0002\u0002\u0688",
	"\u068a\u0003\u0002\u0002\u0002\u0689\u0681\u0003\u0002\u0002\u0002\u0689",
	"\u0683\u0003\u0002\u0002\u0002\u0689\u0684\u0003\u0002\u0002\u0002\u0689",
	"\u0685\u0003\u0002\u0002\u0002\u068a\u0109\u0003\u0002\u0002\u0002\u068b",
	"\u0690\u0005\u010c\u0087\u0002\u068c\u068d\u0007\u0092\u0002\u0002\u068d",
	"\u068f\u0005\u010c\u0087\u0002\u068e\u068c\u0003\u0002\u0002\u0002\u068f",
	"\u0692\u0003\u0002\u0002\u0002\u0690\u068e\u0003\u0002\u0002\u0002\u0690",
	"\u0691\u0003\u0002\u0002\u0002\u0691\u010b\u0003\u0002\u0002\u0002\u0692",
	"\u0690\u0003\u0002\u0002\u0002\u0693\u0694\b\u0087\u0001\u0002\u0694",
	"\u069e\u0005\u0110\u0089\u0002\u0695\u0696\u0007\u008b\u0002\u0002\u0696",
	"\u0697\u0005\u00f0y\u0002\u0697\u0698\u0007\u008c\u0002\u0002\u0698",
	"\u069e\u0003\u0002\u0002\u0002\u0699\u069a\u0005\u0116\u008c\u0002\u069a",
	"\u069b\u0005\u010e\u0088\u0002\u069b\u069c\u0005\u010c\u0087\u0003\u069c",
	"\u069e\u0003\u0002\u0002\u0002\u069d\u0693\u0003\u0002\u0002\u0002\u069d",
	"\u0695\u0003\u0002\u0002\u0002\u069d\u0699\u0003\u0002\u0002\u0002\u069e",
	"\u06cb\u0003\u0002\u0002\u0002\u069f\u06a0\f\u000f\u0002\u0002\u06a0",
	"\u06a1\t\r\u0002\u0002\u06a1\u06ca\u0005\u010c\u0087\u0010\u06a2\u06a3",
	"\f\u000e\u0002\u0002\u06a3\u06a4\t\u000e\u0002\u0002\u06a4\u06ca\u0005",
	"\u010c\u0087\u000f\u06a5\u06aa\f\r\u0002\u0002\u06a6\u06a7\u0007\u0098",
	"\u0002\u0002\u06a7\u06ab\u0007\u0098\u0002\u0002\u06a8\u06a9\u0007\u0097",
	"\u0002\u0002\u06a9\u06ab\u0007\u0097\u0002\u0002\u06aa\u06a6\u0003\u0002",
	"\u0002\u0002\u06aa\u06a8\u0003\u0002\u0002\u0002\u06ab\u06ac\u0003\u0002",
	"\u0002\u0002\u06ac\u06ca\u0005\u010c\u0087\u000e\u06ad\u06ae\f\f\u0002",
	"\u0002\u06ae\u06af\t\u000f\u0002\u0002\u06af\u06ca\u0005\u010c\u0087",
	"\r\u06b0\u06b1\f\u000b\u0002\u0002\u06b1\u06b2\t\u0010\u0002\u0002\u06b2",
	"\u06ca\u0005\u010c\u0087\f\u06b3\u06b4\f\n\u0002\u0002\u06b4\u06b5\u0007",
	"\u00a9\u0002\u0002\u06b5\u06ca\u0005\u010c\u0087\u000b\u06b6\u06b7\f",
	"\t\u0002\u0002\u06b7\u06b8\u0007\u00ab\u0002\u0002\u06b8\u06ca\u0005",
	"\u010c\u0087\n\u06b9\u06ba\f\b\u0002\u0002\u06ba\u06bb\u0007\u00aa\u0002",
	"\u0002\u06bb\u06ca\u0005\u010c\u0087\t\u06bc\u06bd\f\u0007\u0002\u0002",
	"\u06bd\u06be\u0007\u00a1\u0002\u0002\u06be\u06ca\u0005\u010c\u0087\b",
	"\u06bf\u06c0\f\u0006\u0002\u0002\u06c0\u06c1\u0007\u00a2\u0002\u0002",
	"\u06c1\u06ca\u0005\u010c\u0087\u0007\u06c2\u06c3\f\u0005\u0002\u0002",
	"\u06c3\u06c5\u0007\u009b\u0002\u0002\u06c4\u06c6\u0005\u010c\u0087\u0002",
	"\u06c5\u06c4\u0003\u0002\u0002\u0002\u06c5\u06c6\u0003\u0002\u0002\u0002",
	"\u06c6\u06c7\u0003\u0002\u0002\u0002\u06c7\u06c8\u0007\u009c\u0002\u0002",
	"\u06c8\u06ca\u0005\u010c\u0087\u0006\u06c9\u069f\u0003\u0002\u0002\u0002",
	"\u06c9\u06a2\u0003\u0002\u0002\u0002\u06c9\u06a5\u0003\u0002\u0002\u0002",
	"\u06c9\u06ad\u0003\u0002\u0002\u0002\u06c9\u06b0\u0003\u0002\u0002\u0002",
	"\u06c9\u06b3\u0003\u0002\u0002\u0002\u06c9\u06b6\u0003\u0002\u0002\u0002",
	"\u06c9\u06b9\u0003\u0002\u0002\u0002\u06c9\u06bc\u0003\u0002\u0002\u0002",
	"\u06c9\u06bf\u0003\u0002\u0002\u0002\u06c9\u06c2\u0003\u0002\u0002\u0002",
	"\u06ca\u06cd\u0003\u0002\u0002\u0002\u06cb\u06c9\u0003\u0002\u0002\u0002",
	"\u06cb\u06cc\u0003\u0002\u0002\u0002\u06cc\u010d\u0003\u0002\u0002\u0002",
	"\u06cd\u06cb\u0003\u0002\u0002\u0002\u06ce\u06cf\t\u0011\u0002\u0002",
	"\u06cf\u010f\u0003\u0002\u0002\u0002\u06d0\u06da\u0005\u0116\u008c\u0002",
	"\u06d1\u06d2\u0007\u008b\u0002\u0002\u06d2\u06d3\u0005\u00dep\u0002",
	"\u06d3\u06d4\u0007\u008c\u0002\u0002\u06d4\u06d7\u0003\u0002\u0002\u0002",
	"\u06d5\u06d8\u0005\u0110\u0089\u0002\u06d6\u06d8\u0005\u0112\u008a\u0002",
	"\u06d7\u06d5\u0003\u0002\u0002\u0002\u06d7\u06d6\u0003\u0002\u0002\u0002",
	"\u06d8\u06da\u0003\u0002\u0002\u0002\u06d9\u06d0\u0003\u0002\u0002\u0002",
	"\u06d9\u06d1\u0003\u0002\u0002\u0002\u06da\u0111\u0003\u0002\u0002\u0002",
	"\u06db\u06df\u0005\u010c\u0087\u0002\u06dc\u06df\u0005\u00d8m\u0002",
	"\u06dd\u06df\u0005\u00dan\u0002\u06de\u06db\u0003\u0002\u0002\u0002",
	"\u06de\u06dc\u0003\u0002\u0002\u0002\u06de\u06dd\u0003\u0002\u0002\u0002",
	"\u06df\u0113\u0003\u0002\u0002\u0002\u06e0\u06e3\u0005\u012a\u0096\u0002",
	"\u06e1\u06e3\u0005\u0126\u0094\u0002\u06e2\u06e0\u0003\u0002\u0002\u0002",
	"\u06e2\u06e1\u0003\u0002\u0002\u0002\u06e3\u0115\u0003\u0002\u0002\u0002",
	"\u06e4\u06f3\u0005\u011a\u008e\u0002\u06e5\u06eb\u0007\u001b\u0002\u0002",
	"\u06e6\u06ec\u0005\u0116\u008c\u0002\u06e7\u06e8\u0007\u008b\u0002\u0002",
	"\u06e8\u06e9\u0005\u00be`\u0002\u06e9\u06ea\u0007\u008c\u0002\u0002",
	"\u06ea\u06ec\u0003\u0002\u0002\u0002\u06eb\u06e6\u0003\u0002\u0002\u0002",
	"\u06eb\u06e7\u0003\u0002\u0002\u0002\u06ec\u06f3\u0003\u0002\u0002\u0002",
	"\u06ed\u06ee\t\u0012\u0002\u0002\u06ee\u06f3\u0005\u0116\u008c\u0002",
	"\u06ef\u06f0\u0005\u0118\u008d\u0002\u06f0\u06f1\u0005\u0110\u0089\u0002",
	"\u06f1\u06f3\u0003\u0002\u0002\u0002\u06f2\u06e4\u0003\u0002\u0002\u0002",
	"\u06f2\u06e5\u0003\u0002\u0002\u0002\u06f2\u06ed\u0003\u0002\u0002\u0002",
	"\u06f2\u06ef\u0003\u0002\u0002\u0002\u06f3\u0117\u0003\u0002\u0002\u0002",
	"\u06f4\u06f5\t\u0013\u0002\u0002\u06f5\u0119\u0003\u0002\u0002\u0002",
	"\u06f6\u06f7\b\u008e\u0001\u0002\u06f7\u06fb\u0005\u0124\u0093\u0002",
	"\u06f8\u06fa\u0005\u011c\u008f\u0002\u06f9\u06f8\u0003\u0002\u0002\u0002",
	"\u06fa\u06fd\u0003\u0002\u0002\u0002\u06fb\u06f9\u0003\u0002\u0002\u0002",
	"\u06fb\u06fc\u0003\u0002\u0002\u0002\u06fc\u0709\u0003\u0002\u0002\u0002",
	"\u06fd\u06fb\u0003\u0002\u0002\u0002\u06fe\u06ff\f\u0003\u0002\u0002",
	"\u06ff\u0700\t\u0014\u0002\u0002\u0700\u0704\u0005\u012a\u0096\u0002",
	"\u0701\u0703\u0005\u011c\u008f\u0002\u0702\u0701\u0003\u0002\u0002\u0002",
	"\u0703\u0706\u0003\u0002\u0002\u0002\u0704\u0702\u0003\u0002\u0002\u0002",
	"\u0704\u0705\u0003\u0002\u0002\u0002\u0705\u0708\u0003\u0002\u0002\u0002",
	"\u0706\u0704\u0003\u0002\u0002\u0002\u0707\u06fe\u0003\u0002\u0002\u0002",
	"\u0708\u070b\u0003\u0002\u0002\u0002\u0709\u0707\u0003\u0002\u0002\u0002",
	"\u0709\u070a\u0003\u0002\u0002\u0002\u070a\u011b\u0003\u0002\u0002\u0002",
	"\u070b\u0709\u0003\u0002\u0002\u0002\u070c\u070d\u0007\u008f\u0002\u0002",
	"\u070d\u070e\u0005\u010c\u0087\u0002\u070e\u070f\u0007\u0090\u0002\u0002",
	"\u070f\u071f\u0003\u0002\u0002\u0002\u0710\u0712\u0007\u008b\u0002\u0002",
	"\u0711\u0713\u0005\u011e\u0090\u0002\u0712\u0711\u0003\u0002\u0002\u0002",
	"\u0712\u0713\u0003\u0002\u0002\u0002\u0713\u0714\u0003\u0002\u0002\u0002",
	"\u0714\u071f\u0007\u008c\u0002\u0002\u0715\u0718\u0007\u008b\u0002\u0002",
	"\u0716\u0719\u0007\u0092\u0002\u0002\u0717\u0719\n\u0015\u0002\u0002",
	"\u0718\u0716\u0003\u0002\u0002\u0002\u0718\u0717\u0003\u0002\u0002\u0002",
	"\u0719\u071a\u0003\u0002\u0002\u0002\u071a\u0718\u0003\u0002\u0002\u0002",
	"\u071a\u071b\u0003\u0002\u0002\u0002\u071b\u071c\u0003\u0002\u0002\u0002",
	"\u071c\u071f\u0007\u008c\u0002\u0002\u071d\u071f\t\u0012\u0002\u0002",
	"\u071e\u070c\u0003\u0002\u0002\u0002\u071e\u0710\u0003\u0002\u0002\u0002",
	"\u071e\u0715\u0003\u0002\u0002\u0002\u071e\u071d\u0003\u0002\u0002\u0002",
	"\u071f\u011d\u0003\u0002\u0002\u0002\u0720\u0725\u0005\u0120\u0091\u0002",
	"\u0721\u0722\u0007\u0092\u0002\u0002\u0722\u0724\u0005\u0120\u0091\u0002",
	"\u0723\u0721\u0003\u0002\u0002\u0002\u0724\u0727\u0003\u0002\u0002\u0002",
	"\u0725\u0723\u0003\u0002\u0002\u0002\u0725\u0726\u0003\u0002\u0002\u0002",
	"\u0726\u011f\u0003\u0002\u0002\u0002\u0727\u0725\u0003\u0002\u0002\u0002",
	"\u0728\u072b\u0005\u010c\u0087\u0002\u0729\u072b\u0005\u00be`\u0002",
	"\u072a\u0728\u0003\u0002\u0002\u0002\u072a\u0729\u0003\u0002\u0002\u0002",
	"\u072b\u0121\u0003\u0002\u0002\u0002\u072c\u0734\u0005\u012a\u0096\u0002",
	"\u072d\u072e\u0007\u008b\u0002\u0002\u072e\u0731\t\u0016\u0002\u0002",
	"\u072f\u0730\u0007\u0092\u0002\u0002\u0730\u0732\t\u0016\u0002\u0002",
	"\u0731\u072f\u0003\u0002\u0002\u0002\u0731\u0732\u0003\u0002\u0002\u0002",
	"\u0732\u0733\u0003\u0002\u0002\u0002\u0733\u0735\u0007\u008c\u0002\u0002",
	"\u0734\u072d\u0003\u0002\u0002\u0002\u0734\u0735\u0003\u0002\u0002\u0002",
	"\u0735\u0123\u0003\u0002\u0002\u0002\u0736\u0746\u0005\u012a\u0096\u0002",
	"\u0737\u0746\u0005\u0126\u0094\u0002\u0738\u0746\u0005\u0128\u0095\u0002",
	"\u0739\u073a\u0007\u008b\u0002\u0002\u073a\u073b\u0005\u010c\u0087\u0002",
	"\u073b\u073c\u0007\u008c\u0002\u0002\u073c\u0746\u0003\u0002\u0002\u0002",
	"\u073d\u0746\u0005^0\u0002\u073e\u0746\u0005h5\u0002\u073f\u0746\u0005",
	"l7\u0002\u0740\u0746\u0005n8\u0002\u0741\u0746\u0005P)\u0002\u0742\u0746",
	"\u0005T+\u0002\u0743\u0746\u0005V,\u0002\u0744\u0746\u0005\\/\u0002",
	"\u0745\u0736\u0003\u0002\u0002\u0002\u0745\u0737\u0003\u0002\u0002\u0002",
	"\u0745\u0738\u0003\u0002\u0002\u0002\u0745\u0739\u0003\u0002\u0002\u0002",
	"\u0745\u073d\u0003\u0002\u0002\u0002\u0745\u073e\u0003\u0002\u0002\u0002",
	"\u0745\u073f\u0003\u0002\u0002\u0002\u0745\u0740\u0003\u0002\u0002\u0002",
	"\u0745\u0741\u0003\u0002\u0002\u0002\u0745\u0742\u0003\u0002\u0002\u0002",
	"\u0745\u0743\u0003\u0002\u0002\u0002\u0745\u0744\u0003\u0002\u0002\u0002",
	"\u0746\u0125\u0003\u0002\u0002\u0002\u0747\u075a\u0007\u00ba\u0002\u0002",
	"\u0748\u075a\u0007\u00bb\u0002\u0002\u0749\u075a\u0007\u00bc\u0002\u0002",
	"\u074a\u074c\t\u000e\u0002\u0002\u074b\u074a\u0003\u0002\u0002\u0002",
	"\u074b\u074c\u0003\u0002\u0002\u0002\u074c\u074d\u0003\u0002\u0002\u0002",
	"\u074d\u075a\u0007\u00bd\u0002\u0002\u074e\u0750\t\u000e\u0002\u0002",
	"\u074f\u074e\u0003\u0002\u0002\u0002\u074f\u0750\u0003\u0002\u0002\u0002",
	"\u0750\u0751\u0003\u0002\u0002\u0002\u0751\u075a\u0007\u00be\u0002\u0002",
	"\u0752\u075a\u0007\u00b8\u0002\u0002\u0753\u075a\u00072\u0002\u0002",
	"\u0754\u075a\u00074\u0002\u0002\u0755\u075a\u0007;\u0002\u0002\u0756",
	"\u075a\u00073\u0002\u0002\u0757\u075a\u0007(\u0002\u0002\u0758\u075a",
	"\u0007)\u0002\u0002\u0759\u0747\u0003\u0002\u0002\u0002\u0759\u0748",
	"\u0003\u0002\u0002\u0002\u0759\u0749\u0003\u0002\u0002\u0002\u0759\u074b",
	"\u0003\u0002\u0002\u0002\u0759\u074f\u0003\u0002\u0002\u0002\u0759\u0752",
	"\u0003\u0002\u0002\u0002\u0759\u0753\u0003\u0002\u0002\u0002\u0759\u0754",
	"\u0003\u0002\u0002\u0002\u0759\u0755\u0003\u0002\u0002\u0002\u0759\u0756",
	"\u0003\u0002\u0002\u0002\u0759\u0757\u0003\u0002\u0002\u0002\u0759\u0758",
	"\u0003\u0002\u0002\u0002\u075a\u0127\u0003\u0002\u0002\u0002\u075b\u075f",
	"\u0007\u00b9\u0002\u0002\u075c\u075e\t\u0017\u0002\u0002\u075d\u075c",
	"\u0003\u0002\u0002\u0002\u075e\u0761\u0003\u0002\u0002\u0002\u075f\u075d",
	"\u0003\u0002\u0002\u0002\u075f\u0760\u0003\u0002\u0002\u0002\u0760\u0762",
	"\u0003\u0002\u0002\u0002\u0761\u075f\u0003\u0002\u0002\u0002\u0762\u0764",
	"\u0007\u00c6\u0002\u0002\u0763\u075b\u0003\u0002\u0002\u0002\u0764\u0765",
	"\u0003\u0002\u0002\u0002\u0765\u0763\u0003\u0002\u0002\u0002\u0765\u0766",
	"\u0003\u0002\u0002\u0002\u0766\u0129\u0003\u0002\u0002\u0002\u0767\u0768",
	"\t\u0018\u0002\u0002\u0768\u012b\u0003\u0002\u0002\u0002\u0111\u012f",
	"\u013f\u0147\u014a\u0152\u0155\u0159\u015b\u0162\u0168\u016b\u016e\u0174",
	"\u0176\u017d\u0184\u0187\u018a\u0192\u0195\u0198\u01a2\u01ac\u01b0\u01b2",
	"\u01bb\u01c0\u01c9\u01cf\u01d1\u01dc\u01e4\u01ee\u01f6\u01f9\u01fc\u0205",
	"\u021c\u0223\u0228\u022a\u0230\u0239\u023f\u0241\u024a\u024c\u0255\u025a",
	"\u025c\u0266\u0268\u0271\u0275\u0278\u0280\u0284\u0286\u0289\u028f\u0293",
	"\u0299\u02a7\u02ae\u02b4\u02b7\u02bb\u02c1\u02c5\u02cd\u02d0\u02d7\u02e3",
	"\u02e7\u02e9\u02f5\u02f7\u0303\u0305\u030a\u0310\u0313\u0319\u031d\u0320",
	"\u0323\u032e\u0334\u0336\u0339\u0341\u0346\u034c\u0355\u035a\u035c\u0372",
	"\u0379\u037e\u0392\u0394\u039c\u039e\u03a4\u03a9\u03ae\u03b1\u03b6\u03b9",
	"\u03bf\u03c4\u03c8\u03cc\u03d0\u03d9\u03e0\u03e7\u03ed\u03f0\u03f4\u03fd",
	"\u03ff\u0403\u0407\u040b\u040d\u0413\u0419\u041d\u041f\u0425\u0431\u0435",
	"\u0437\u0441\u0445\u044e\u0450\u0456\u0458\u045d\u045f\u0469\u0474\u047a",
	"\u047c\u0481\u0486\u048c\u0490\u0496\u049a\u049c\u04a3\u04a5\u04ad\u04bb",
	"\u04c2\u04c9\u04cc\u04d8\u04dd\u04e1\u04e5\u04e9\u04f0\u04f6\u04fd\u0504",
	"\u050b\u050f\u0514\u0516\u051b\u051f\u0526\u052b\u0531\u0534\u0538\u053c",
	"\u0543\u0547\u054a\u0555\u055e\u0562\u0564\u0569\u056d\u0572\u0577\u0579",
	"\u0585\u0589\u058b\u0594\u0598\u059c\u05a0\u05a4\u05a8\u05ae\u05b2\u05b7",
	"\u05b9\u05bd\u05c2\u05c5\u05cc\u05d1\u05d5\u05d8\u05de\u05e2\u05e6\u05ea",
	"\u05ee\u05f2\u05f6\u05fa\u05fe\u0602\u0605\u060e\u0613\u0615\u0621\u0624",
	"\u0630\u0638\u063d\u0645\u064b\u0651\u0664\u0668\u066c\u0675\u067c\u0687",
	"\u0689\u0690\u069d\u06aa\u06c5\u06c9\u06cb\u06d7\u06d9\u06de\u06e2\u06eb",
	"\u06f2\u06fb\u0704\u0709\u0712\u0718\u071a\u071e\u0725\u072a\u0731\u0734",
	"\u0745\u074b\u074f\u0759\u075f\u0765"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map((ds, index) => new antlr4.dfa.DFA(ds, index));

const sharedContextCache = new antlr4.PredictionContextCache();

export default class ObjectiveCParser extends antlr4.Parser {

	static grammarFileName = "ObjectiveCParser.g4";
	static literalNames = [null, "'auto'", "'break'", "'case'", "'char'",
		"'const'", "'continue'", "'default'", "'do'",
		"'double'", null, "'enum'", "'extern'", "'float'",
		"'for'", "'goto'", null, "'inline'", "'int'",
		"'long'", "'register'", "'restrict'", "'return'",
		"'short'", "'signed'", "'sizeof'", "'static'",
		"'struct'", "'switch'", "'typedef'", "'union'",
		"'unsigned'", "'void'", "'volatile'", "'while'",
		"'_Bool'", "'_Complex'", "'_Imaginery'", "'true'",
		"'false'", "'BOOL'", "'Class'", "'bycopy'",
		"'byref'", "'id'", "'IMP'", "'in'", "'inout'",
		"'nil'", "'NO'", "'NULL'", "'oneway'", "'out'",
		"'Protocol'", "'SEL'", "'self'", "'super'",
		"'YES'", "'@autoreleasepool'", "'@catch'", "'@class'",
		"'@dynamic'", "'@encode'", "'@end'", "'@finally'",
		"'@implementation'", "'@interface'", null, "'@package'",
		"'@protocol'", "'@optional'", "'@private'",
		"'@property'", "'@protected'", "'@public'",
		"'@required'", "'@selector'", "'@synchronized'",
		"'@synthesize'", "'@throw'", "'@try'", "'atomic'",
		"'nonatomic'", "'retain'", "'__attribute__'",
		"'__autoreleasing'", "'__block'", "'__bridge'",
		"'__bridge_retained'", "'__bridge_transfer'",
		"'__covariant'", "'__contravariant'", "'__deprecated'",
		"'__kindof'", "'__strong'", null, "'__unsafe_unretained'",
		"'__unused'", "'__weak'", null, null, null,
		"'null_resettable'", "'NS_INLINE'", "'NS_ENUM'",
		"'NS_OPTIONS'", "'NS_CLOSED_ENUM'", "'NS_TYPED_EXTENSIBLE_ENUM'",
		"'NS_ERROR_ENUM'", "'assign'", "'copy'", "'getter'",
		"'setter'", "'strong'", "'readonly'", "'readwrite'",
		"'weak'", "'unsafe_unretained'", "'IBOutlet'",
		"'IBOutletCollection'", "'IBInspectable'", "'IB_DESIGNABLE'",
		null, null, null, null, null, "'__TVOS_PROHIBITED'",
		"'NS_NOESCAPE'", null, "'NS_RETURNS_RETAINED'",
		"'NS_RETURNS_NOT_RETAINED'", "'NS_RETURNS_INNER_POINTER'",
		"'CF_RETURNS_RETAINED'", "'CF_RETURNS_NOT_RETAINED'",
		"'CF_CONSUMED'", null, null, null, "'{'", "'}'",
		"'['", "']'", "';'", "','", null, "'->'", "'@'",
		"'='", null, null, null, "'~'", "'?'", "':'",
		null, null, null, null, null, null, "'++'",
		"'--'", null, null, null, null, null, null,
		null, null, "'+='", "'-='", "'*='", "'/='",
		"'&='", "'|='", "'^='", "'%='", "'<<='", "'>>='",
		"'...'", null, null, null, null, null, null,
		null, null, null, null, null, "'\\'", null,
		null, null, null, null, null, null, null, "'defined'",
		null, "'elif'", null, "'undef'", "'ifdef'",
		"'ifndef'", "'endif'"];
	static symbolicNames = [null, "AUTO", "BREAK", "CASE", "CHAR", "CONST",
		"CONTINUE", "DEFAULT", "DO", "DOUBLE", "ELSE",
		"ENUM", "EXTERN", "FLOAT", "FOR", "GOTO", "IF",
		"INLINE", "INT", "LONG", "REGISTER", "RESTRICT",
		"RETURN", "SHORT", "SIGNED", "SIZEOF", "STATIC",
		"STRUCT", "SWITCH", "TYPEDEF", "UNION", "UNSIGNED",
		"VOID", "VOLATILE", "WHILE", "BOOL_", "COMPLEX",
		"IMAGINERY", "TRUE", "FALSE", "BOOL", "Class",
		"BYCOPY", "BYREF", "ID", "IMP", "IN", "INOUT",
		"NIL", "NO", "NULL", "ONEWAY", "OUT", "PROTOCOL_",
		"SEL", "SELF", "SUPER", "YES", "AUTORELEASEPOOL",
		"CATCH", "CLASS", "DYNAMIC", "ENCODE", "END",
		"FINALLY", "IMPLEMENTATION", "INTERFACE", "IMPORT",
		"PACKAGE", "PROTOCOL", "OPTIONAL", "PRIVATE",
		"PROPERTY", "PROTECTED", "PUBLIC", "REQUIRED",
		"SELECTOR", "SYNCHRONIZED", "SYNTHESIZE", "THROW",
		"TRY", "ATOMIC", "NONATOMIC", "RETAIN", "ATTRIBUTE",
		"AUTORELEASING_QUALIFIER", "BLOCK", "BRIDGE",
		"BRIDGE_RETAINED", "BRIDGE_TRANSFER", "COVARIANT",
		"CONTRAVARIANT", "DEPRECATED", "KINDOF", "STRONG_QUALIFIER",
		"TYPEOF", "UNSAFE_UNRETAINED_QUALIFIER", "UNUSED",
		"WEAK_QUALIFIER", "NULL_UNSPECIFIED", "NULLABLE",
		"NONNULL", "NULL_RESETTABLE", "NS_INLINE",
		"NS_ENUM", "NS_OPTIONS", "NS_CLOSED_ENUM",
		"NS_TYPED_EXTENSIBLE_ENUM", "NS_ERROR_ENUM",
		"ASSIGN", "COPY", "GETTER", "SETTER", "STRONG",
		"READONLY", "READWRITE", "WEAK", "UNSAFE_UNRETAINED",
		"IB_OUTLET", "IB_OUTLET_COLLECTION", "IB_INSPECTABLE",
		"IB_DESIGNABLE", "NS_ASSUME_NONNULL_BEGIN",
		"NS_ASSUME_NONNULL_END", "EXTERN_SUFFIX", "IOS_SUFFIX",
		"MAC_SUFFIX", "TVOS_PROHIBITED", "NS_NOESCAPE",
		"EXPORT_SUFFIX", "NS_RETURNS_RETAINED", "NS_RETURNS_NOT_RETAINED",
		"NS_RETURNS_INNER_POINTER", "CF_RETURNS_RETAINED",
		"CF_RETURNS_NOT_RETAINED", "CF_CONSUMED", "IDENTIFIER",
		"LP", "RP", "LBRACE", "RBRACE", "LBRACK", "RBRACK",
		"SEMI", "COMMA", "DOT", "STRUCTACCESS", "AT",
		"ASSIGNMENT", "GT", "LT", "BANG", "TILDE",
		"QUESTION", "COLON", "EQUAL", "LE", "GE", "NOTEQUAL",
		"AND", "OR", "INC", "DEC", "ADD", "SUB", "MUL",
		"DIV", "BITAND", "BITOR", "BITXOR", "MOD",
		"ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN",
		"AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN",
		"LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "ELIPSIS",
		"CHARACTER_LITERAL", "STRING_START", "HEX_LITERAL",
		"OCTAL_LITERAL", "BINARY_LITERAL", "DECIMAL_LITERAL",
		"FLOATING_POINT_LITERAL", "VERSION_SEMATIC",
		"WS", "MULTI_COMMENT", "SINGLE_COMMENT", "BACKSLASH",
		"SHARP", "STRING_NEWLINE", "STRING_END", "STRING_VALUE",
		"DIRECTIVE_IMPORT", "DIRECTIVE_INCLUDE", "DIRECTIVE_PRAGMA",
		"DIRECTIVE_DEFINE", "DIRECTIVE_DEFINED", "DIRECTIVE_IF",
		"DIRECTIVE_ELIF", "DIRECTIVE_ELSE", "DIRECTIVE_UNDEF",
		"DIRECTIVE_IFDEF", "DIRECTIVE_IFNDEF", "DIRECTIVE_ENDIF",
		"DIRECTIVE_TRUE", "DIRECTIVE_FALSE", "DIRECTIVE_ERROR",
		"DIRECTIVE_WARNING", "DIRECTIVE_BANG", "DIRECTIVE_LP",
		"DIRECTIVE_RP", "DIRECTIVE_EQUAL", "DIRECTIVE_NOTEQUAL",
		"DIRECTIVE_AND", "DIRECTIVE_OR", "DIRECTIVE_LT",
		"DIRECTIVE_GT", "DIRECTIVE_LE", "DIRECTIVE_GE",
		"DIRECTIVE_ADD", "DIRECTIVE_SUB", "DIRECTIVE_MUL",
		"DIRECTIVE_DIV", "DIRECTIVE_BITAND", "DIRECTIVE_BITOR",
		"DIRECTIVE_BITXOR", "DIRECTIVE_MOD", "DIRECTIVE_DOT",
		"DIRECTIVE_STRING", "DIRECTIVE_ID", "DIRECTIVE_DECIMAL_LITERAL",
		"DIRECTIVE_FLOAT", "DIRECTIVE_NEWLINE", "DIRECTIVE_MULTI_COMMENT",
		"DIRECTIVE_SINGLE_COMMENT", "DIRECTIVE_BACKSLASH_NEWLINE",
		"DIRECTIVE_TEXT_NEWLINE", "DIRECTIVE_TEXT"];
	static ruleNames = ["translationUnit", "topLevelDeclaration", "importDeclaration",
		"classInterface", "categoryInterface", "classImplementation",
		"categoryImplementation", "genericTypeSpecifier",
		"protocolDeclaration", "protocolDeclarationSection",
		"protocolDeclarationList", "classDeclaration",
		"classDeclarationList", "protocolList", "propertyDeclaration",
		"propertyAttributesList", "propertyAttribute",
		"protocolName", "instanceVariables", "visibilitySection",
		"accessModifier", "interfaceDeclarationList", "classMethodDeclaration",
		"instanceMethodDeclaration", "methodDeclaration",
		"implementationDefinitionList", "classMethodDefinition",
		"instanceMethodDefinition", "methodDefinition",
		"methodSelector", "keywordDeclarator", "selector",
		"methodType", "propertyImplementation", "propertySynthesizeList",
		"propertySynthesizeItem", "blockType", "genericsSpecifier",
		"typeSpecifierWithPrefixes", "dictionaryExpression",
		"dictionaryPair", "arrayExpression", "boxExpression",
		"blockParameters", "typeVariableDeclaratorOrName",
		"blockExpression", "messageExpression", "receiver",
		"messageSelector", "keywordArgument", "keywordArgumentType",
		"selectorExpression", "selectorName", "protocolExpression",
		"encodeExpression", "typeVariableDeclarator", "throwStatement",
		"tryBlock", "catchStatement", "synchronizedStatement",
		"autoreleaseStatement", "functionDeclaration",
		"functionDefinition", "functionSignature", "functionPointer",
		"attribute", "attributeName", "attributeParameters",
		"attributeParameterList", "attributeParameter",
		"attributeParameterAssignment", "declaration",
		"functionCallExpression", "enumDeclaration", "varDeclaration",
		"typedefDeclaration", "typeDeclaratorList", "typeDeclarator",
		"commonSpecifiers", "declarationSpecifiers", "pointerQualifier",
		"attributeSpecifier", "initDeclaratorList", "initDeclarator",
		"structOrUnionSpecifier", "fieldDeclaration", "specifierQualifierList",
		"ibOutletQualifier", "arcBehaviourSpecifier", "nullabilitySpecifier",
		"storageClassSpecifier", "typePrefix", "typeQualifier",
		"protocolQualifier", "typeSpecifier", "typeofExpression",
		"fieldDeclaratorList", "fieldDeclarator", "enumSpecifier",
		"enumeratorList", "enumerator", "enumeratorIdentifier",
		"directDeclarator", "declaratorSuffix", "parameterList",
		"pointer", "macro", "arrayInitializer", "structInitializer",
		"initializerList", "typeName", "abstractDeclarator",
		"abstractDeclaratorSuffix", "parameterDeclarationList",
		"parameterDeclaration", "declarator", "statement",
		"labeledStatement", "rangeExpression", "compoundStatement",
		"selectionStatement", "switchStatement", "switchBlock",
		"switchSection", "switchLabel", "iterationStatement",
		"whileStatement", "doStatement", "forStatement",
		"forLoopInitializer", "forInStatement", "jumpStatement",
		"expressions", "expression", "assignmentOperator",
		"castExpression", "initializer", "constantExpression",
		"unaryExpression", "unaryOperator", "postfixExpression",
		"postfix", "argumentExpressionList", "argumentExpression",
		"osVersion", "primaryExpression", "constant", "stringLiteral",
		"identifier"];

	constructor(input) {
		super(input);
		this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
		this.ruleNames = ObjectiveCParser.ruleNames;
		this.literalNames = ObjectiveCParser.literalNames;
		this.symbolicNames = ObjectiveCParser.symbolicNames;
	}

	get atn() {
		return atn;
	}

	sempred(localctx, ruleIndex, predIndex) {
		switch (ruleIndex) {
			case 133:
				return this.expression_sempred(localctx, predIndex);
			case 140:
				return this.postfixExpression_sempred(localctx, predIndex);
			default:
				throw "No predicate with index:" + ruleIndex;
		}
	}

	expression_sempred(localctx, predIndex) {
		switch (predIndex) {
			case 0:
				return this.precpred(this._ctx, 13);
			case 1:
				return this.precpred(this._ctx, 12);
			case 2:
				return this.precpred(this._ctx, 11);
			case 3:
				return this.precpred(this._ctx, 10);
			case 4:
				return this.precpred(this._ctx, 9);
			case 5:
				return this.precpred(this._ctx, 8);
			case 6:
				return this.precpred(this._ctx, 7);
			case 7:
				return this.precpred(this._ctx, 6);
			case 8:
				return this.precpred(this._ctx, 5);
			case 9:
				return this.precpred(this._ctx, 4);
			case 10:
				return this.precpred(this._ctx, 3);
			default:
				throw "No predicate with index:" + predIndex;
		}
	};

	postfixExpression_sempred(localctx, predIndex) {
		switch (predIndex) {
			case 11:
				return this.precpred(this._ctx, 1);
			default:
				throw "No predicate with index:" + predIndex;
		}
	};




	translationUnit() {
		let localctx = new TranslationUnitContext(this, this._ctx, this.state);
		this.enterRule(localctx, 0, ObjectiveCParser.RULE_translationUnit);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 301;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.CLASS - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (ObjectiveCParser.IMPLEMENTATION - 65)) | (1 << (ObjectiveCParser.INTERFACE - 65)) | (1 << (ObjectiveCParser.IMPORT - 65)) | (1 << (ObjectiveCParser.PROTOCOL - 65)) | (1 << (ObjectiveCParser.ATOMIC - 65)) | (1 << (ObjectiveCParser.NONATOMIC - 65)) | (1 << (ObjectiveCParser.RETAIN - 65)) | (1 << (ObjectiveCParser.ATTRIBUTE - 65)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 65)) | (1 << (ObjectiveCParser.BLOCK - 65)) | (1 << (ObjectiveCParser.BRIDGE - 65)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 65)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 65)) | (1 << (ObjectiveCParser.COVARIANT - 65)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 65)) | (1 << (ObjectiveCParser.DEPRECATED - 65)) | (1 << (ObjectiveCParser.KINDOF - 65)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 65)) | (1 << (ObjectiveCParser.TYPEOF - 65)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 65)))) !== 0) || ((((_la - 97)) & ~0x1f) == 0 && ((1 << (_la - 97)) & ((1 << (ObjectiveCParser.UNUSED - 97)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 97)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 97)) | (1 << (ObjectiveCParser.NULLABLE - 97)) | (1 << (ObjectiveCParser.NONNULL - 97)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 97)) | (1 << (ObjectiveCParser.NS_INLINE - 97)) | (1 << (ObjectiveCParser.NS_ENUM - 97)) | (1 << (ObjectiveCParser.NS_OPTIONS - 97)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 97)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 97)) | (1 << (ObjectiveCParser.ASSIGN - 97)) | (1 << (ObjectiveCParser.COPY - 97)) | (1 << (ObjectiveCParser.GETTER - 97)) | (1 << (ObjectiveCParser.SETTER - 97)) | (1 << (ObjectiveCParser.STRONG - 97)) | (1 << (ObjectiveCParser.READONLY - 97)) | (1 << (ObjectiveCParser.READWRITE - 97)) | (1 << (ObjectiveCParser.WEAK - 97)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 97)) | (1 << (ObjectiveCParser.IB_OUTLET - 97)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 97)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 97)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 97)))) !== 0) || _la === ObjectiveCParser.IDENTIFIER) {
				this.state = 298;
				this.topLevelDeclaration();
				this.state = 303;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 304;
			this.match(ObjectiveCParser.EOF);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	topLevelDeclaration() {
		let localctx = new TopLevelDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 2, ObjectiveCParser.RULE_topLevelDeclaration);
		try {
			this.state = 317;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 1, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 306;
					this.importDeclaration();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 307;
					this.functionDeclaration();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 308;
					this.declaration();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 309;
					this.classInterface();
					break;

				case 5:
					this.enterOuterAlt(localctx, 5);
					this.state = 310;
					this.classImplementation();
					break;

				case 6:
					this.enterOuterAlt(localctx, 6);
					this.state = 311;
					this.categoryInterface();
					break;

				case 7:
					this.enterOuterAlt(localctx, 7);
					this.state = 312;
					this.categoryImplementation();
					break;

				case 8:
					this.enterOuterAlt(localctx, 8);
					this.state = 313;
					this.protocolDeclaration();
					break;

				case 9:
					this.enterOuterAlt(localctx, 9);
					this.state = 314;
					this.protocolDeclarationList();
					break;

				case 10:
					this.enterOuterAlt(localctx, 10);
					this.state = 315;
					this.classDeclarationList();
					break;

				case 11:
					this.enterOuterAlt(localctx, 11);
					this.state = 316;
					this.functionDefinition();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	importDeclaration() {
		let localctx = new ImportDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 4, ObjectiveCParser.RULE_importDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 319;
			this.match(ObjectiveCParser.IMPORT);
			this.state = 336;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.state = 320;
					localctx.frameworkName = this.identifier();
					this.state = 321;
					this.match(ObjectiveCParser.SEMI);
					break;
				case ObjectiveCParser.LT:
					this.state = 323;
					this.match(ObjectiveCParser.LT);
					this.state = 325;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 2, this._ctx);
					if (la_ === 1) {
						this.state = 324;
						localctx.frameworkName = this.identifier();

					}
					this.state = 328;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.DIV) {
						this.state = 327;
						this.match(ObjectiveCParser.DIV);
					}

					this.state = 330;
					localctx.headerName = this.identifier();
					this.state = 331;
					this.match(ObjectiveCParser.DOT);
					this.state = 332;
					this.match(ObjectiveCParser.IDENTIFIER);
					this.state = 333;
					this.match(ObjectiveCParser.GT);
					break;
				case ObjectiveCParser.STRING_START:
					this.state = 335;
					this.stringLiteral();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classInterface() {
		let localctx = new ClassInterfaceContext(this, this._ctx, this.state);
		this.enterRule(localctx, 6, ObjectiveCParser.RULE_classInterface);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 339;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 5, this._ctx);
			if (la_ === 1) {
				this.state = 338;
				this.match(ObjectiveCParser.IB_DESIGNABLE);

			}
			this.state = 345;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 343;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 341;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 342;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 347;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 348;
			this.match(ObjectiveCParser.INTERFACE);
			this.state = 349;
			localctx.className = this.genericTypeSpecifier();
			this.state = 352;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.COLON) {
				this.state = 350;
				this.match(ObjectiveCParser.COLON);
				this.state = 351;
				localctx.superclassName = this.identifier();
			}

			this.state = 358;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LT) {
				this.state = 354;
				this.match(ObjectiveCParser.LT);
				this.state = 355;
				localctx.protocols = this.protocolList();
				this.state = 356;
				this.match(ObjectiveCParser.GT);
			}

			this.state = 361;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LBRACE) {
				this.state = 360;
				this.instanceVariables();
			}

			this.state = 364;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 72)) & ~0x1f) == 0 && ((1 << (_la - 72)) & ((1 << (ObjectiveCParser.PROPERTY - 72)) | (1 << (ObjectiveCParser.ATOMIC - 72)) | (1 << (ObjectiveCParser.NONATOMIC - 72)) | (1 << (ObjectiveCParser.RETAIN - 72)) | (1 << (ObjectiveCParser.ATTRIBUTE - 72)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 72)) | (1 << (ObjectiveCParser.BLOCK - 72)) | (1 << (ObjectiveCParser.BRIDGE - 72)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 72)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 72)) | (1 << (ObjectiveCParser.COVARIANT - 72)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 72)) | (1 << (ObjectiveCParser.DEPRECATED - 72)) | (1 << (ObjectiveCParser.KINDOF - 72)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 72)) | (1 << (ObjectiveCParser.TYPEOF - 72)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 72)) | (1 << (ObjectiveCParser.UNUSED - 72)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 72)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 72)) | (1 << (ObjectiveCParser.NULLABLE - 72)) | (1 << (ObjectiveCParser.NONNULL - 72)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 72)) | (1 << (ObjectiveCParser.NS_INLINE - 72)))) !== 0) || ((((_la - 104)) & ~0x1f) == 0 && ((1 << (_la - 104)) & ((1 << (ObjectiveCParser.NS_ENUM - 104)) | (1 << (ObjectiveCParser.NS_OPTIONS - 104)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 104)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 104)) | (1 << (ObjectiveCParser.ASSIGN - 104)) | (1 << (ObjectiveCParser.COPY - 104)) | (1 << (ObjectiveCParser.GETTER - 104)) | (1 << (ObjectiveCParser.SETTER - 104)) | (1 << (ObjectiveCParser.STRONG - 104)) | (1 << (ObjectiveCParser.READONLY - 104)) | (1 << (ObjectiveCParser.READWRITE - 104)) | (1 << (ObjectiveCParser.WEAK - 104)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 104)) | (1 << (ObjectiveCParser.IB_OUTLET - 104)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 104)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 104)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 104)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)))) !== 0)) {
				this.state = 363;
				this.interfaceDeclarationList();
			}

			this.state = 366;
			this.match(ObjectiveCParser.END);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	categoryInterface() {
		let localctx = new CategoryInterfaceContext(this, this._ctx, this.state);
		this.enterRule(localctx, 8, ObjectiveCParser.RULE_categoryInterface);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 372;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 370;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 368;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 369;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 374;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 375;
			this.match(ObjectiveCParser.INTERFACE);
			this.state = 376;
			localctx.className = this.genericTypeSpecifier();
			this.state = 377;
			this.match(ObjectiveCParser.LP);
			this.state = 379;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 378;
				localctx.categoryName = this.identifier();
			}

			this.state = 381;
			this.match(ObjectiveCParser.RP);
			this.state = 386;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LT) {
				this.state = 382;
				this.match(ObjectiveCParser.LT);
				this.state = 383;
				localctx.protocols = this.protocolList();
				this.state = 384;
				this.match(ObjectiveCParser.GT);
			}

			this.state = 389;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LBRACE) {
				this.state = 388;
				this.instanceVariables();
			}

			this.state = 392;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 72)) & ~0x1f) == 0 && ((1 << (_la - 72)) & ((1 << (ObjectiveCParser.PROPERTY - 72)) | (1 << (ObjectiveCParser.ATOMIC - 72)) | (1 << (ObjectiveCParser.NONATOMIC - 72)) | (1 << (ObjectiveCParser.RETAIN - 72)) | (1 << (ObjectiveCParser.ATTRIBUTE - 72)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 72)) | (1 << (ObjectiveCParser.BLOCK - 72)) | (1 << (ObjectiveCParser.BRIDGE - 72)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 72)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 72)) | (1 << (ObjectiveCParser.COVARIANT - 72)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 72)) | (1 << (ObjectiveCParser.DEPRECATED - 72)) | (1 << (ObjectiveCParser.KINDOF - 72)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 72)) | (1 << (ObjectiveCParser.TYPEOF - 72)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 72)) | (1 << (ObjectiveCParser.UNUSED - 72)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 72)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 72)) | (1 << (ObjectiveCParser.NULLABLE - 72)) | (1 << (ObjectiveCParser.NONNULL - 72)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 72)) | (1 << (ObjectiveCParser.NS_INLINE - 72)))) !== 0) || ((((_la - 104)) & ~0x1f) == 0 && ((1 << (_la - 104)) & ((1 << (ObjectiveCParser.NS_ENUM - 104)) | (1 << (ObjectiveCParser.NS_OPTIONS - 104)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 104)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 104)) | (1 << (ObjectiveCParser.ASSIGN - 104)) | (1 << (ObjectiveCParser.COPY - 104)) | (1 << (ObjectiveCParser.GETTER - 104)) | (1 << (ObjectiveCParser.SETTER - 104)) | (1 << (ObjectiveCParser.STRONG - 104)) | (1 << (ObjectiveCParser.READONLY - 104)) | (1 << (ObjectiveCParser.READWRITE - 104)) | (1 << (ObjectiveCParser.WEAK - 104)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 104)) | (1 << (ObjectiveCParser.IB_OUTLET - 104)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 104)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 104)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 104)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)))) !== 0)) {
				this.state = 391;
				this.interfaceDeclarationList();
			}

			this.state = 394;
			this.match(ObjectiveCParser.END);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classImplementation() {
		let localctx = new ClassImplementationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 10, ObjectiveCParser.RULE_classImplementation);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 396;
			this.match(ObjectiveCParser.IMPLEMENTATION);
			this.state = 397;
			localctx.className = this.genericTypeSpecifier();
			this.state = 400;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.COLON) {
				this.state = 398;
				this.match(ObjectiveCParser.COLON);
				this.state = 399;
				localctx.superclassName = this.identifier();
			}

			this.state = 403;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LBRACE) {
				this.state = 402;
				this.instanceVariables();
			}

			this.state = 406;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.DYNAMIC - 32)))) !== 0) || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (ObjectiveCParser.SYNTHESIZE - 78)) | (1 << (ObjectiveCParser.ATOMIC - 78)) | (1 << (ObjectiveCParser.NONATOMIC - 78)) | (1 << (ObjectiveCParser.RETAIN - 78)) | (1 << (ObjectiveCParser.ATTRIBUTE - 78)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 78)) | (1 << (ObjectiveCParser.BLOCK - 78)) | (1 << (ObjectiveCParser.BRIDGE - 78)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 78)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 78)) | (1 << (ObjectiveCParser.COVARIANT - 78)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 78)) | (1 << (ObjectiveCParser.DEPRECATED - 78)) | (1 << (ObjectiveCParser.KINDOF - 78)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 78)) | (1 << (ObjectiveCParser.TYPEOF - 78)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 78)) | (1 << (ObjectiveCParser.UNUSED - 78)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 78)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 78)) | (1 << (ObjectiveCParser.NULLABLE - 78)) | (1 << (ObjectiveCParser.NONNULL - 78)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 78)) | (1 << (ObjectiveCParser.NS_INLINE - 78)) | (1 << (ObjectiveCParser.NS_ENUM - 78)) | (1 << (ObjectiveCParser.NS_OPTIONS - 78)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 78)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 78)) | (1 << (ObjectiveCParser.ASSIGN - 78)))) !== 0) || ((((_la - 110)) & ~0x1f) == 0 && ((1 << (_la - 110)) & ((1 << (ObjectiveCParser.COPY - 110)) | (1 << (ObjectiveCParser.GETTER - 110)) | (1 << (ObjectiveCParser.SETTER - 110)) | (1 << (ObjectiveCParser.STRONG - 110)) | (1 << (ObjectiveCParser.READONLY - 110)) | (1 << (ObjectiveCParser.READWRITE - 110)) | (1 << (ObjectiveCParser.WEAK - 110)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 110)) | (1 << (ObjectiveCParser.IB_OUTLET - 110)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 110)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 110)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 110)) | (1 << (ObjectiveCParser.IDENTIFIER - 110)))) !== 0) || _la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB) {
				this.state = 405;
				this.implementationDefinitionList();
			}

			this.state = 408;
			this.match(ObjectiveCParser.END);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	categoryImplementation() {
		let localctx = new CategoryImplementationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 12, ObjectiveCParser.RULE_categoryImplementation);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 410;
			this.match(ObjectiveCParser.IMPLEMENTATION);
			this.state = 411;
			localctx.className = this.genericTypeSpecifier();
			this.state = 412;
			this.match(ObjectiveCParser.LP);
			this.state = 413;
			localctx.categoryName = this.identifier();
			this.state = 414;
			this.match(ObjectiveCParser.RP);
			this.state = 416;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.DYNAMIC - 32)))) !== 0) || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (ObjectiveCParser.SYNTHESIZE - 78)) | (1 << (ObjectiveCParser.ATOMIC - 78)) | (1 << (ObjectiveCParser.NONATOMIC - 78)) | (1 << (ObjectiveCParser.RETAIN - 78)) | (1 << (ObjectiveCParser.ATTRIBUTE - 78)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 78)) | (1 << (ObjectiveCParser.BLOCK - 78)) | (1 << (ObjectiveCParser.BRIDGE - 78)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 78)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 78)) | (1 << (ObjectiveCParser.COVARIANT - 78)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 78)) | (1 << (ObjectiveCParser.DEPRECATED - 78)) | (1 << (ObjectiveCParser.KINDOF - 78)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 78)) | (1 << (ObjectiveCParser.TYPEOF - 78)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 78)) | (1 << (ObjectiveCParser.UNUSED - 78)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 78)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 78)) | (1 << (ObjectiveCParser.NULLABLE - 78)) | (1 << (ObjectiveCParser.NONNULL - 78)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 78)) | (1 << (ObjectiveCParser.NS_INLINE - 78)) | (1 << (ObjectiveCParser.NS_ENUM - 78)) | (1 << (ObjectiveCParser.NS_OPTIONS - 78)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 78)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 78)) | (1 << (ObjectiveCParser.ASSIGN - 78)))) !== 0) || ((((_la - 110)) & ~0x1f) == 0 && ((1 << (_la - 110)) & ((1 << (ObjectiveCParser.COPY - 110)) | (1 << (ObjectiveCParser.GETTER - 110)) | (1 << (ObjectiveCParser.SETTER - 110)) | (1 << (ObjectiveCParser.STRONG - 110)) | (1 << (ObjectiveCParser.READONLY - 110)) | (1 << (ObjectiveCParser.READWRITE - 110)) | (1 << (ObjectiveCParser.WEAK - 110)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 110)) | (1 << (ObjectiveCParser.IB_OUTLET - 110)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 110)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 110)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 110)) | (1 << (ObjectiveCParser.IDENTIFIER - 110)))) !== 0) || _la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB) {
				this.state = 415;
				this.implementationDefinitionList();
			}

			this.state = 418;
			this.match(ObjectiveCParser.END);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	genericTypeSpecifier() {
		let localctx = new GenericTypeSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 14, ObjectiveCParser.RULE_genericTypeSpecifier);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 420;
			this.identifier();
			this.state = 426;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 22, this._ctx);
			if (la_ === 1) {
				this.state = 421;
				this.match(ObjectiveCParser.LT);
				this.state = 422;
				this.protocolList();
				this.state = 423;
				this.match(ObjectiveCParser.GT);

			} else if (la_ === 2) {
				this.state = 425;
				this.genericsSpecifier();

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolDeclaration() {
		let localctx = new ProtocolDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 16, ObjectiveCParser.RULE_protocolDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 432;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 430;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 428;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 429;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 434;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 435;
			this.match(ObjectiveCParser.PROTOCOL);
			this.state = 436;
			localctx.name = this.protocolName();
			this.state = 441;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LT) {
				this.state = 437;
				this.match(ObjectiveCParser.LT);
				this.state = 438;
				localctx.protocols = this.protocolList();
				this.state = 439;
				this.match(ObjectiveCParser.GT);
			}

			this.state = 446;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 70)) & ~0x1f) == 0 && ((1 << (_la - 70)) & ((1 << (ObjectiveCParser.OPTIONAL - 70)) | (1 << (ObjectiveCParser.PROPERTY - 70)) | (1 << (ObjectiveCParser.REQUIRED - 70)) | (1 << (ObjectiveCParser.ATOMIC - 70)) | (1 << (ObjectiveCParser.NONATOMIC - 70)) | (1 << (ObjectiveCParser.RETAIN - 70)) | (1 << (ObjectiveCParser.ATTRIBUTE - 70)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 70)) | (1 << (ObjectiveCParser.BLOCK - 70)) | (1 << (ObjectiveCParser.BRIDGE - 70)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 70)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 70)) | (1 << (ObjectiveCParser.COVARIANT - 70)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 70)) | (1 << (ObjectiveCParser.DEPRECATED - 70)) | (1 << (ObjectiveCParser.KINDOF - 70)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 70)) | (1 << (ObjectiveCParser.TYPEOF - 70)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 70)) | (1 << (ObjectiveCParser.UNUSED - 70)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 70)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 70)) | (1 << (ObjectiveCParser.NULLABLE - 70)) | (1 << (ObjectiveCParser.NONNULL - 70)))) !== 0) || ((((_la - 102)) & ~0x1f) == 0 && ((1 << (_la - 102)) & ((1 << (ObjectiveCParser.NULL_RESETTABLE - 102)) | (1 << (ObjectiveCParser.NS_INLINE - 102)) | (1 << (ObjectiveCParser.NS_ENUM - 102)) | (1 << (ObjectiveCParser.NS_OPTIONS - 102)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 102)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 102)) | (1 << (ObjectiveCParser.ASSIGN - 102)) | (1 << (ObjectiveCParser.COPY - 102)) | (1 << (ObjectiveCParser.GETTER - 102)) | (1 << (ObjectiveCParser.SETTER - 102)) | (1 << (ObjectiveCParser.STRONG - 102)) | (1 << (ObjectiveCParser.READONLY - 102)) | (1 << (ObjectiveCParser.READWRITE - 102)) | (1 << (ObjectiveCParser.WEAK - 102)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 102)) | (1 << (ObjectiveCParser.IB_OUTLET - 102)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 102)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 102)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 102)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)))) !== 0)) {
				this.state = 443;
				this.protocolDeclarationSection();
				this.state = 448;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 449;
			this.match(ObjectiveCParser.END);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolDeclarationSection() {
		let localctx = new ProtocolDeclarationSectionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 18, ObjectiveCParser.RULE_protocolDeclarationSection);
		var _la = 0; // Token type
		try {
			this.state = 463;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.OPTIONAL:
				case ObjectiveCParser.REQUIRED: {
					this.enterOuterAlt(localctx, 1);
					this.state = 451;
					localctx.modifier = this._input.LT(1);
					_la = this._input.LA(1);
					if (!(_la === ObjectiveCParser.OPTIONAL || _la === ObjectiveCParser.REQUIRED)) {
						localctx.modifier = this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
					this.state = 455;
					this._errHandler.sync(this);
					let _alt = this._interp.adaptivePredict(this._input, 27, this._ctx)
					while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
						if (_alt === 1) {
							this.state = 452;
							this.interfaceDeclarationList();
						}
						this.state = 457;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 27, this._ctx);
					}

					break;
				}
				case ObjectiveCParser.AUTO:
				case ObjectiveCParser.CHAR:
				case ObjectiveCParser.CONST:
				case ObjectiveCParser.DOUBLE:
				case ObjectiveCParser.ENUM:
				case ObjectiveCParser.EXTERN:
				case ObjectiveCParser.FLOAT:
				case ObjectiveCParser.INLINE:
				case ObjectiveCParser.INT:
				case ObjectiveCParser.LONG:
				case ObjectiveCParser.REGISTER:
				case ObjectiveCParser.RESTRICT:
				case ObjectiveCParser.SHORT:
				case ObjectiveCParser.SIGNED:
				case ObjectiveCParser.STATIC:
				case ObjectiveCParser.STRUCT:
				case ObjectiveCParser.TYPEDEF:
				case ObjectiveCParser.UNION:
				case ObjectiveCParser.UNSIGNED:
				case ObjectiveCParser.VOID:
				case ObjectiveCParser.VOLATILE:
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.PROPERTY:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.ATTRIBUTE:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.STRONG_QUALIFIER:
				case ObjectiveCParser.TYPEOF:
				case ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.WEAK_QUALIFIER:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.NS_CLOSED_ENUM:
				case ObjectiveCParser.NS_ERROR_ENUM:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
				case ObjectiveCParser.ADD:
				case ObjectiveCParser.SUB: {
					this.enterOuterAlt(localctx, 2);
					this.state = 459;
					this._errHandler.sync(this);
					let _alt = 1;
					do {
						switch (_alt) {
							case 1:
								this.state = 458;
								this.interfaceDeclarationList();
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						this.state = 461;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 28, this._ctx);
					} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
					break;
				}
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolDeclarationList() {
		let localctx = new ProtocolDeclarationListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 20, ObjectiveCParser.RULE_protocolDeclarationList);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 465;
			this.match(ObjectiveCParser.PROTOCOL);
			this.state = 466;
			this.protocolList();
			this.state = 467;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classDeclaration() {
		let localctx = new ClassDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 22, ObjectiveCParser.RULE_classDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 469;
			this.identifier();
			this.state = 474;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LT) {
				this.state = 470;
				this.match(ObjectiveCParser.LT);
				this.state = 471;
				this.protocolList();
				this.state = 472;
				this.match(ObjectiveCParser.GT);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classDeclarationList() {
		let localctx = new ClassDeclarationListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 24, ObjectiveCParser.RULE_classDeclarationList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 476;
			this.match(ObjectiveCParser.CLASS);
			this.state = 477;
			this.classDeclaration();
			this.state = 482;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 478;
				this.match(ObjectiveCParser.COMMA);
				this.state = 479;
				this.classDeclaration();
				this.state = 484;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 485;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolList() {
		let localctx = new ProtocolListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 26, ObjectiveCParser.RULE_protocolList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 487;
			localctx._protocolName = this.protocolName();
			localctx.list.push(localctx._protocolName);
			this.state = 492;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 488;
				this.match(ObjectiveCParser.COMMA);
				this.state = 489;
				localctx._protocolName = this.protocolName();
				localctx.list.push(localctx._protocolName);
				this.state = 494;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertyDeclaration() {
		let localctx = new PropertyDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 28, ObjectiveCParser.RULE_propertyDeclaration);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 495;
			this.match(ObjectiveCParser.PROPERTY);
			this.state = 500;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 33, this._ctx);
			if (la_ === 1) {
				this.state = 496;
				this.match(ObjectiveCParser.LP);
				this.state = 497;
				this.propertyAttributesList();
				this.state = 498;
				this.match(ObjectiveCParser.RP);

			}
			this.state = 503;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 34, this._ctx);
			if (la_ === 1) {
				this.state = 502;
				this.ibOutletQualifier();

			}
			this.state = 506;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 35, this._ctx);
			if (la_ === 1) {
				this.state = 505;
				this.match(ObjectiveCParser.IB_INSPECTABLE);

			}
			this.state = 508;
			this.fieldDeclaration();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertyAttributesList() {
		let localctx = new PropertyAttributesListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 30, ObjectiveCParser.RULE_propertyAttributesList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 510;
			this.propertyAttribute();
			this.state = 515;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 511;
				this.match(ObjectiveCParser.COMMA);
				this.state = 512;
				this.propertyAttribute();
				this.state = 517;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertyAttribute() {
		let localctx = new PropertyAttributeContext(this, this._ctx, this.state);
		this.enterRule(localctx, 32, ObjectiveCParser.RULE_propertyAttribute);
		try {
			this.state = 538;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 37, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 518;
					this.match(ObjectiveCParser.ATOMIC);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 519;
					this.match(ObjectiveCParser.NONATOMIC);
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 520;
					this.match(ObjectiveCParser.STRONG);
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 521;
					this.match(ObjectiveCParser.WEAK);
					break;

				case 5:
					this.enterOuterAlt(localctx, 5);
					this.state = 522;
					this.match(ObjectiveCParser.RETAIN);
					break;

				case 6:
					this.enterOuterAlt(localctx, 6);
					this.state = 523;
					this.match(ObjectiveCParser.ASSIGN);
					break;

				case 7:
					this.enterOuterAlt(localctx, 7);
					this.state = 524;
					this.match(ObjectiveCParser.UNSAFE_UNRETAINED);
					break;

				case 8:
					this.enterOuterAlt(localctx, 8);
					this.state = 525;
					this.match(ObjectiveCParser.COPY);
					break;

				case 9:
					this.enterOuterAlt(localctx, 9);
					this.state = 526;
					this.match(ObjectiveCParser.READONLY);
					break;

				case 10:
					this.enterOuterAlt(localctx, 10);
					this.state = 527;
					this.match(ObjectiveCParser.READWRITE);
					break;

				case 11:
					this.enterOuterAlt(localctx, 11);
					this.state = 528;
					this.match(ObjectiveCParser.GETTER);
					this.state = 529;
					this.match(ObjectiveCParser.ASSIGNMENT);
					this.state = 530;
					this.identifier();
					break;

				case 12:
					this.enterOuterAlt(localctx, 12);
					this.state = 531;
					this.match(ObjectiveCParser.SETTER);
					this.state = 532;
					this.match(ObjectiveCParser.ASSIGNMENT);
					this.state = 533;
					this.identifier();
					this.state = 534;
					this.match(ObjectiveCParser.COLON);
					break;

				case 13:
					this.enterOuterAlt(localctx, 13);
					this.state = 536;
					this.nullabilitySpecifier();
					break;

				case 14:
					this.enterOuterAlt(localctx, 14);
					this.state = 537;
					this.identifier();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolName() {
		let localctx = new ProtocolNameContext(this, this._ctx, this.state);
		this.enterRule(localctx, 34, ObjectiveCParser.RULE_protocolName);
		var _la = 0; // Token type
		try {
			this.state = 552;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.LT:
					this.enterOuterAlt(localctx, 1);
					this.state = 540;
					this.match(ObjectiveCParser.LT);
					this.state = 541;
					this.protocolList();
					this.state = 542;
					this.match(ObjectiveCParser.GT);
					break;
				case ObjectiveCParser.AUTO:
				case ObjectiveCParser.CHAR:
				case ObjectiveCParser.CONST:
				case ObjectiveCParser.DOUBLE:
				case ObjectiveCParser.ENUM:
				case ObjectiveCParser.EXTERN:
				case ObjectiveCParser.FLOAT:
				case ObjectiveCParser.INLINE:
				case ObjectiveCParser.INT:
				case ObjectiveCParser.LONG:
				case ObjectiveCParser.REGISTER:
				case ObjectiveCParser.RESTRICT:
				case ObjectiveCParser.SHORT:
				case ObjectiveCParser.SIGNED:
				case ObjectiveCParser.STATIC:
				case ObjectiveCParser.STRUCT:
				case ObjectiveCParser.UNION:
				case ObjectiveCParser.UNSIGNED:
				case ObjectiveCParser.VOID:
				case ObjectiveCParser.VOLATILE:
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.ATTRIBUTE:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.STRONG_QUALIFIER:
				case ObjectiveCParser.TYPEOF:
				case ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.WEAK_QUALIFIER:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.NS_CLOSED_ENUM:
				case ObjectiveCParser.NS_ERROR_ENUM:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
				case ObjectiveCParser.LP:
					this.enterOuterAlt(localctx, 2);
					this.state = 545;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 38, this._ctx);
					if (la_ === 1) {
						this.state = 544;
						_la = this._input.LA(1);
						if (!(_la === ObjectiveCParser.COVARIANT || _la === ObjectiveCParser.CONTRAVARIANT)) {
							this._errHandler.recoverInline(this);
						}
						else {
							this._errHandler.reportMatch(this);
							this.consume();
						}

					}
					this.state = 547;
					localctx.name = this.typeName();
					this.state = 550;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.COLON) {
						this.state = 548;
						this.match(ObjectiveCParser.COLON);
						this.state = 549;
						this.typeSpecifier();
					}

					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	instanceVariables() {
		let localctx = new InstanceVariablesContext(this, this._ctx, this.state);
		this.enterRule(localctx, 36, ObjectiveCParser.RULE_instanceVariables);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 554;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 558;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 68)) & ~0x1f) == 0 && ((1 << (_la - 68)) & ((1 << (ObjectiveCParser.PACKAGE - 68)) | (1 << (ObjectiveCParser.PRIVATE - 68)) | (1 << (ObjectiveCParser.PROTECTED - 68)) | (1 << (ObjectiveCParser.PUBLIC - 68)) | (1 << (ObjectiveCParser.ATOMIC - 68)) | (1 << (ObjectiveCParser.NONATOMIC - 68)) | (1 << (ObjectiveCParser.RETAIN - 68)) | (1 << (ObjectiveCParser.ATTRIBUTE - 68)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 68)) | (1 << (ObjectiveCParser.BLOCK - 68)) | (1 << (ObjectiveCParser.BRIDGE - 68)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 68)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 68)) | (1 << (ObjectiveCParser.COVARIANT - 68)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 68)) | (1 << (ObjectiveCParser.DEPRECATED - 68)) | (1 << (ObjectiveCParser.KINDOF - 68)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 68)) | (1 << (ObjectiveCParser.TYPEOF - 68)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 68)) | (1 << (ObjectiveCParser.UNUSED - 68)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 68)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 68)))) !== 0) || ((((_la - 100)) & ~0x1f) == 0 && ((1 << (_la - 100)) & ((1 << (ObjectiveCParser.NULLABLE - 100)) | (1 << (ObjectiveCParser.NONNULL - 100)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 100)) | (1 << (ObjectiveCParser.NS_INLINE - 100)) | (1 << (ObjectiveCParser.NS_ENUM - 100)) | (1 << (ObjectiveCParser.NS_OPTIONS - 100)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 100)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 100)) | (1 << (ObjectiveCParser.ASSIGN - 100)) | (1 << (ObjectiveCParser.COPY - 100)) | (1 << (ObjectiveCParser.GETTER - 100)) | (1 << (ObjectiveCParser.SETTER - 100)) | (1 << (ObjectiveCParser.STRONG - 100)) | (1 << (ObjectiveCParser.READONLY - 100)) | (1 << (ObjectiveCParser.READWRITE - 100)) | (1 << (ObjectiveCParser.WEAK - 100)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 100)) | (1 << (ObjectiveCParser.IB_OUTLET - 100)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 100)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 100)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 100)))) !== 0) || _la === ObjectiveCParser.IDENTIFIER || _la === ObjectiveCParser.LP) {
				this.state = 555;
				this.visibilitySection();
				this.state = 560;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 561;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	visibilitySection() {
		let localctx = new VisibilitySectionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 38, ObjectiveCParser.RULE_visibilitySection);
		try {
			this.state = 575;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.PACKAGE:
				case ObjectiveCParser.PRIVATE:
				case ObjectiveCParser.PROTECTED:
				case ObjectiveCParser.PUBLIC: {
					this.enterOuterAlt(localctx, 1);
					this.state = 563;
					this.accessModifier();
					this.state = 567;
					this._errHandler.sync(this);
					let _alt = this._interp.adaptivePredict(this._input, 42, this._ctx)
					while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
						if (_alt === 1) {
							this.state = 564;
							this.fieldDeclaration();
						}
						this.state = 569;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 42, this._ctx);
					}

					break;
				}
				case ObjectiveCParser.AUTO:
				case ObjectiveCParser.CHAR:
				case ObjectiveCParser.CONST:
				case ObjectiveCParser.DOUBLE:
				case ObjectiveCParser.ENUM:
				case ObjectiveCParser.EXTERN:
				case ObjectiveCParser.FLOAT:
				case ObjectiveCParser.INLINE:
				case ObjectiveCParser.INT:
				case ObjectiveCParser.LONG:
				case ObjectiveCParser.REGISTER:
				case ObjectiveCParser.RESTRICT:
				case ObjectiveCParser.SHORT:
				case ObjectiveCParser.SIGNED:
				case ObjectiveCParser.STATIC:
				case ObjectiveCParser.STRUCT:
				case ObjectiveCParser.UNION:
				case ObjectiveCParser.UNSIGNED:
				case ObjectiveCParser.VOID:
				case ObjectiveCParser.VOLATILE:
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.ATTRIBUTE:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.STRONG_QUALIFIER:
				case ObjectiveCParser.TYPEOF:
				case ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.WEAK_QUALIFIER:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.NS_CLOSED_ENUM:
				case ObjectiveCParser.NS_ERROR_ENUM:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
				case ObjectiveCParser.LP: {
					this.enterOuterAlt(localctx, 2);
					this.state = 571;
					this._errHandler.sync(this);
					let _alt = 1;
					do {
						switch (_alt) {
							case 1:
								this.state = 570;
								this.fieldDeclaration();
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						this.state = 573;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 43, this._ctx);
					} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
					break;
				}
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	accessModifier() {
		let localctx = new AccessModifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 40, ObjectiveCParser.RULE_accessModifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 577;
			_la = this._input.LA(1);
			if (!(((((_la - 68)) & ~0x1f) == 0 && ((1 << (_la - 68)) & ((1 << (ObjectiveCParser.PACKAGE - 68)) | (1 << (ObjectiveCParser.PRIVATE - 68)) | (1 << (ObjectiveCParser.PROTECTED - 68)) | (1 << (ObjectiveCParser.PUBLIC - 68)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	interfaceDeclarationList() {
		let localctx = new InterfaceDeclarationListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 42, ObjectiveCParser.RULE_interfaceDeclarationList);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 584;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 584;
						this._errHandler.sync(this);
						var la_ = this._interp.adaptivePredict(this._input, 45, this._ctx);
						switch (la_) {
							case 1:
								this.state = 579;
								this.declaration();
								break;

							case 2:
								this.state = 580;
								this.classMethodDeclaration();
								break;

							case 3:
								this.state = 581;
								this.instanceMethodDeclaration();
								break;

							case 4:
								this.state = 582;
								this.propertyDeclaration();
								break;

							case 5:
								this.state = 583;
								this.functionDeclaration();
								break;

						}
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 586;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 46, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classMethodDeclaration() {
		let localctx = new ClassMethodDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 44, ObjectiveCParser.RULE_classMethodDeclaration);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 588;
			this.match(ObjectiveCParser.ADD);
			this.state = 589;
			this.methodDeclaration();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	instanceMethodDeclaration() {
		let localctx = new InstanceMethodDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 46, ObjectiveCParser.RULE_instanceMethodDeclaration);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 591;
			this.match(ObjectiveCParser.SUB);
			this.state = 592;
			this.methodDeclaration();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	methodDeclaration() {
		let localctx = new MethodDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 48, ObjectiveCParser.RULE_methodDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 595;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 594;
				this.methodType();
			}

			this.state = 597;
			this.methodSelector();
			this.state = 602;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 600;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 598;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 599;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 604;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 605;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	implementationDefinitionList() {
		let localctx = new ImplementationDefinitionListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 50, ObjectiveCParser.RULE_implementationDefinitionList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 612;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			do {
				this.state = 612;
				this._errHandler.sync(this);
				var la_ = this._interp.adaptivePredict(this._input, 50, this._ctx);
				switch (la_) {
					case 1:
						this.state = 607;
						this.functionDefinition();
						break;

					case 2:
						this.state = 608;
						this.declaration();
						break;

					case 3:
						this.state = 609;
						this.classMethodDefinition();
						break;

					case 4:
						this.state = 610;
						this.instanceMethodDefinition();
						break;

					case 5:
						this.state = 611;
						this.propertyImplementation();
						break;

				}
				this.state = 614;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			} while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.DYNAMIC - 32)))) !== 0) || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (ObjectiveCParser.SYNTHESIZE - 78)) | (1 << (ObjectiveCParser.ATOMIC - 78)) | (1 << (ObjectiveCParser.NONATOMIC - 78)) | (1 << (ObjectiveCParser.RETAIN - 78)) | (1 << (ObjectiveCParser.ATTRIBUTE - 78)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 78)) | (1 << (ObjectiveCParser.BLOCK - 78)) | (1 << (ObjectiveCParser.BRIDGE - 78)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 78)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 78)) | (1 << (ObjectiveCParser.COVARIANT - 78)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 78)) | (1 << (ObjectiveCParser.DEPRECATED - 78)) | (1 << (ObjectiveCParser.KINDOF - 78)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 78)) | (1 << (ObjectiveCParser.TYPEOF - 78)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 78)) | (1 << (ObjectiveCParser.UNUSED - 78)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 78)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 78)) | (1 << (ObjectiveCParser.NULLABLE - 78)) | (1 << (ObjectiveCParser.NONNULL - 78)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 78)) | (1 << (ObjectiveCParser.NS_INLINE - 78)) | (1 << (ObjectiveCParser.NS_ENUM - 78)) | (1 << (ObjectiveCParser.NS_OPTIONS - 78)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 78)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 78)) | (1 << (ObjectiveCParser.ASSIGN - 78)))) !== 0) || ((((_la - 110)) & ~0x1f) == 0 && ((1 << (_la - 110)) & ((1 << (ObjectiveCParser.COPY - 110)) | (1 << (ObjectiveCParser.GETTER - 110)) | (1 << (ObjectiveCParser.SETTER - 110)) | (1 << (ObjectiveCParser.STRONG - 110)) | (1 << (ObjectiveCParser.READONLY - 110)) | (1 << (ObjectiveCParser.READWRITE - 110)) | (1 << (ObjectiveCParser.WEAK - 110)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 110)) | (1 << (ObjectiveCParser.IB_OUTLET - 110)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 110)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 110)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 110)) | (1 << (ObjectiveCParser.IDENTIFIER - 110)))) !== 0) || _la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	classMethodDefinition() {
		let localctx = new ClassMethodDefinitionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 52, ObjectiveCParser.RULE_classMethodDefinition);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 616;
			this.match(ObjectiveCParser.ADD);
			this.state = 617;
			this.methodDefinition();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	instanceMethodDefinition() {
		let localctx = new InstanceMethodDefinitionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 54, ObjectiveCParser.RULE_instanceMethodDefinition);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 619;
			this.match(ObjectiveCParser.SUB);
			this.state = 620;
			this.methodDefinition();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	methodDefinition() {
		let localctx = new MethodDefinitionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 56, ObjectiveCParser.RULE_methodDefinition);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 623;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 622;
				this.methodType();
			}

			this.state = 625;
			this.methodSelector();
			this.state = 627;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0) || _la === ObjectiveCParser.MUL) {
				this.state = 626;
				this.initDeclaratorList();
			}

			this.state = 630;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.SEMI) {
				this.state = 629;
				this.match(ObjectiveCParser.SEMI);
			}

			this.state = 632;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	methodSelector() {
		let localctx = new MethodSelectorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 58, ObjectiveCParser.RULE_methodSelector);
		var _la = 0; // Token type
		try {
			this.state = 644;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 57, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 634;
					localctx.sel = this.selector();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 636;
					this._errHandler.sync(this);
					let _alt = 1;
					do {
						switch (_alt) {
							case 1:
								this.state = 635;
								this.keywordDeclarator();
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						this.state = 638;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 55, this._ctx);
					} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
					this.state = 642;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.COMMA) {
						this.state = 640;
						this.match(ObjectiveCParser.COMMA);
						this.state = 641;
						this.match(ObjectiveCParser.ELIPSIS);
					}

					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	keywordDeclarator() {
		let localctx = new KeywordDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 60, ObjectiveCParser.RULE_keywordDeclarator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 647;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.RETURN || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 646;
				localctx.sel = this.selector();
			}

			this.state = 649;
			this.match(ObjectiveCParser.COLON);
			this.state = 653;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.LP) {
				this.state = 650;
				localctx._methodType = this.methodType();
				localctx.types.push(localctx._methodType);
				this.state = 655;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 657;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 60, this._ctx);
			if (la_ === 1) {
				this.state = 656;
				this.arcBehaviourSpecifier();

			}
			this.state = 659;
			localctx.name = this.identifier();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	selector() {
		let localctx = new SelectorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 62, ObjectiveCParser.RULE_selector);
		try {
			this.state = 663;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.enterOuterAlt(localctx, 1);
					this.state = 661;
					this.identifier();
					break;
				case ObjectiveCParser.RETURN:
					this.enterOuterAlt(localctx, 2);
					this.state = 662;
					this.match(ObjectiveCParser.RETURN);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	methodType() {
		let localctx = new MethodTypeContext(this, this._ctx, this.state);
		this.enterRule(localctx, 64, ObjectiveCParser.RULE_methodType);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 665;
			this.match(ObjectiveCParser.LP);
			this.state = 666;
			this.typeName();
			this.state = 667;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertyImplementation() {
		let localctx = new PropertyImplementationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 66, ObjectiveCParser.RULE_propertyImplementation);
		try {
			this.state = 677;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.SYNTHESIZE:
					this.enterOuterAlt(localctx, 1);
					this.state = 669;
					this.match(ObjectiveCParser.SYNTHESIZE);
					this.state = 670;
					this.propertySynthesizeList();
					this.state = 671;
					this.match(ObjectiveCParser.SEMI);
					break;
				case ObjectiveCParser.DYNAMIC:
					this.enterOuterAlt(localctx, 2);
					this.state = 673;
					this.match(ObjectiveCParser.DYNAMIC);
					this.state = 674;
					this.propertySynthesizeList();
					this.state = 675;
					this.match(ObjectiveCParser.SEMI);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertySynthesizeList() {
		let localctx = new PropertySynthesizeListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 68, ObjectiveCParser.RULE_propertySynthesizeList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 679;
			this.propertySynthesizeItem();
			this.state = 684;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 680;
				this.match(ObjectiveCParser.COMMA);
				this.state = 681;
				this.propertySynthesizeItem();
				this.state = 686;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	propertySynthesizeItem() {
		let localctx = new PropertySynthesizeItemContext(this, this._ctx, this.state);
		this.enterRule(localctx, 70, ObjectiveCParser.RULE_propertySynthesizeItem);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 687;
			this.identifier();
			this.state = 690;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ASSIGNMENT) {
				this.state = 688;
				this.match(ObjectiveCParser.ASSIGNMENT);
				this.state = 689;
				this.identifier();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	blockType() {
		let localctx = new BlockTypeContext(this, this._ctx, this.state);
		this.enterRule(localctx, 72, ObjectiveCParser.RULE_blockType);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 693;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 65, this._ctx);
			if (la_ === 1) {
				this.state = 692;
				this.nullabilitySpecifier();

			}
			this.state = 695;
			this.typeSpecifier();
			this.state = 697;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 99)) & ~0x1f) == 0 && ((1 << (_la - 99)) & ((1 << (ObjectiveCParser.NULL_UNSPECIFIED - 99)) | (1 << (ObjectiveCParser.NULLABLE - 99)) | (1 << (ObjectiveCParser.NONNULL - 99)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 99)))) !== 0)) {
				this.state = 696;
				this.nullabilitySpecifier();
			}

			this.state = 699;
			this.match(ObjectiveCParser.LP);
			this.state = 700;
			this.match(ObjectiveCParser.BITXOR);
			this.state = 703;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 67, this._ctx);
			if (la_ === 1) {
				this.state = 701;
				this.nullabilitySpecifier();

			} else if (la_ === 2) {
				this.state = 702;
				this.typeSpecifier();

			}
			this.state = 705;
			this.match(ObjectiveCParser.RP);
			this.state = 707;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 706;
				this.blockParameters();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	genericsSpecifier() {
		let localctx = new GenericsSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 74, ObjectiveCParser.RULE_genericsSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 709;
			this.match(ObjectiveCParser.LT);
			this.state = 718;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 710;
				this.typeSpecifierWithPrefixes();
				this.state = 715;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === ObjectiveCParser.COMMA) {
					this.state = 711;
					this.match(ObjectiveCParser.COMMA);
					this.state = 712;
					this.typeSpecifierWithPrefixes();
					this.state = 717;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
			}

			this.state = 720;
			this.match(ObjectiveCParser.GT);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeSpecifierWithPrefixes() {
		let localctx = new TypeSpecifierWithPrefixesContext(this, this._ctx, this.state);
		this.enterRule(localctx, 76, ObjectiveCParser.RULE_typeSpecifierWithPrefixes);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 725;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 71, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 722;
					this.typePrefix();
				}
				this.state = 727;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 71, this._ctx);
			}

			this.state = 728;
			this.typeSpecifier();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	dictionaryExpression() {
		let localctx = new DictionaryExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 78, ObjectiveCParser.RULE_dictionaryExpression);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 730;
			this.match(ObjectiveCParser.AT);
			this.state = 731;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 743;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 732;
				this.dictionaryPair();
				this.state = 737;
				this._errHandler.sync(this);
				let _alt = this._interp.adaptivePredict(this._input, 72, this._ctx)
				while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
					if (_alt === 1) {
						this.state = 733;
						this.match(ObjectiveCParser.COMMA);
						this.state = 734;
						this.dictionaryPair();
					}
					this.state = 739;
					this._errHandler.sync(this);
					_alt = this._interp.adaptivePredict(this._input, 72, this._ctx);
				}

				this.state = 741;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === ObjectiveCParser.COMMA) {
					this.state = 740;
					this.match(ObjectiveCParser.COMMA);
				}

			}

			this.state = 745;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	dictionaryPair() {
		let localctx = new DictionaryPairContext(this, this._ctx, this.state);
		this.enterRule(localctx, 80, ObjectiveCParser.RULE_dictionaryPair);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 747;
			this.castExpression();
			this.state = 748;
			this.match(ObjectiveCParser.COLON);
			this.state = 749;
			this.expression(0);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	arrayExpression() {
		let localctx = new ArrayExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 82, ObjectiveCParser.RULE_arrayExpression);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 751;
			this.match(ObjectiveCParser.AT);
			this.state = 752;
			this.match(ObjectiveCParser.LBRACK);
			this.state = 757;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 753;
				this.expressions();
				this.state = 755;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === ObjectiveCParser.COMMA) {
					this.state = 754;
					this.match(ObjectiveCParser.COMMA);
				}

			}

			this.state = 759;
			this.match(ObjectiveCParser.RBRACK);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	boxExpression() {
		let localctx = new BoxExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 84, ObjectiveCParser.RULE_boxExpression);
		try {
			this.state = 771;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 78, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 761;
					this.match(ObjectiveCParser.AT);
					this.state = 762;
					this.match(ObjectiveCParser.LP);
					this.state = 763;
					this.expression(0);
					this.state = 764;
					this.match(ObjectiveCParser.RP);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 766;
					this.match(ObjectiveCParser.AT);
					this.state = 769;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.TRUE:
						case ObjectiveCParser.FALSE:
						case ObjectiveCParser.NIL:
						case ObjectiveCParser.NO:
						case ObjectiveCParser.NULL:
						case ObjectiveCParser.YES:
						case ObjectiveCParser.ADD:
						case ObjectiveCParser.SUB:
						case ObjectiveCParser.CHARACTER_LITERAL:
						case ObjectiveCParser.HEX_LITERAL:
						case ObjectiveCParser.OCTAL_LITERAL:
						case ObjectiveCParser.BINARY_LITERAL:
						case ObjectiveCParser.DECIMAL_LITERAL:
						case ObjectiveCParser.FLOATING_POINT_LITERAL:
							this.state = 767;
							this.constant();
							break;
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
							this.state = 768;
							this.identifier();
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	blockParameters() {
		let localctx = new BlockParametersContext(this, this._ctx, this.state);
		this.enterRule(localctx, 86, ObjectiveCParser.RULE_blockParameters);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 773;
			this.match(ObjectiveCParser.LP);
			this.state = 785;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0)) {
				this.state = 776;
				this._errHandler.sync(this);
				var la_ = this._interp.adaptivePredict(this._input, 79, this._ctx);
				switch (la_) {
					case 1:
						this.state = 774;
						localctx._typeVariableDeclaratorOrName = this.typeVariableDeclaratorOrName();
						localctx.types.push(localctx._typeVariableDeclaratorOrName);
						break;

					case 2:
						this.state = 775;
						this.match(ObjectiveCParser.VOID);
						break;

				}
				this.state = 782;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === ObjectiveCParser.COMMA) {
					this.state = 778;
					this.match(ObjectiveCParser.COMMA);
					this.state = 779;
					localctx._typeVariableDeclaratorOrName = this.typeVariableDeclaratorOrName();
					localctx.types.push(localctx._typeVariableDeclaratorOrName);
					this.state = 784;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
			}

			this.state = 787;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeVariableDeclaratorOrName() {
		let localctx = new TypeVariableDeclaratorOrNameContext(this, this._ctx, this.state);
		this.enterRule(localctx, 88, ObjectiveCParser.RULE_typeVariableDeclaratorOrName);
		try {
			this.state = 791;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 82, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 789;
					this.typeVariableDeclarator();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 790;
					this.typeName();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	blockExpression() {
		let localctx = new BlockExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 90, ObjectiveCParser.RULE_blockExpression);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 793;
			this.match(ObjectiveCParser.BITXOR);
			this.state = 795;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 83, this._ctx);
			if (la_ === 1) {
				this.state = 794;
				this.typeSpecifier();

			}
			this.state = 798;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 99)) & ~0x1f) == 0 && ((1 << (_la - 99)) & ((1 << (ObjectiveCParser.NULL_UNSPECIFIED - 99)) | (1 << (ObjectiveCParser.NULLABLE - 99)) | (1 << (ObjectiveCParser.NONNULL - 99)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 99)))) !== 0)) {
				this.state = 797;
				this.nullabilitySpecifier();
			}

			this.state = 801;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 800;
				this.blockParameters();
			}

			this.state = 803;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	messageExpression() {
		let localctx = new MessageExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 92, ObjectiveCParser.RULE_messageExpression);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 805;
			this.match(ObjectiveCParser.LBRACK);
			this.state = 806;
			this.receiver();
			this.state = 807;
			this.messageSelector();
			this.state = 808;
			this.match(ObjectiveCParser.RBRACK);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	receiver() {
		let localctx = new ReceiverContext(this, this._ctx, this.state);
		this.enterRule(localctx, 94, ObjectiveCParser.RULE_receiver);
		try {
			this.state = 812;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 86, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 810;
					this.expression(0);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 811;
					this.typeSpecifier();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	messageSelector() {
		let localctx = new MessageSelectorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 96, ObjectiveCParser.RULE_messageSelector);
		var _la = 0; // Token type
		try {
			this.state = 820;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 88, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 814;
					this.selector();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 816;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 815;
						this.keywordArgument();
						this.state = 818;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while (_la === ObjectiveCParser.RETURN || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || _la === ObjectiveCParser.COLON);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	keywordArgument() {
		let localctx = new KeywordArgumentContext(this, this._ctx, this.state);
		this.enterRule(localctx, 98, ObjectiveCParser.RULE_keywordArgument);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 823;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.RETURN || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 822;
				this.selector();
			}

			this.state = 825;
			this.match(ObjectiveCParser.COLON);
			this.state = 826;
			this.keywordArgumentType();
			this.state = 831;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 827;
				this.match(ObjectiveCParser.COMMA);
				this.state = 828;
				this.keywordArgumentType();
				this.state = 833;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	keywordArgumentType() {
		let localctx = new KeywordArgumentTypeContext(this, this._ctx, this.state);
		this.enterRule(localctx, 100, ObjectiveCParser.RULE_keywordArgumentType);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 834;
			this.expressions();
			this.state = 836;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 91, this._ctx);
			if (la_ === 1) {
				this.state = 835;
				this.nullabilitySpecifier();

			}
			this.state = 842;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LBRACE) {
				this.state = 838;
				this.match(ObjectiveCParser.LBRACE);
				this.state = 839;
				this.initializerList();
				this.state = 840;
				this.match(ObjectiveCParser.RBRACE);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	selectorExpression() {
		let localctx = new SelectorExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 102, ObjectiveCParser.RULE_selectorExpression);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 844;
			this.match(ObjectiveCParser.SELECTOR);
			this.state = 845;
			this.match(ObjectiveCParser.LP);
			this.state = 846;
			this.selectorName();
			this.state = 847;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	selectorName() {
		let localctx = new SelectorNameContext(this, this._ctx, this.state);
		this.enterRule(localctx, 104, ObjectiveCParser.RULE_selectorName);
		var _la = 0; // Token type
		try {
			this.state = 858;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 95, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 849;
					this.selector();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 854;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 851;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						if (_la === ObjectiveCParser.RETURN || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
							this.state = 850;
							this.selector();
						}

						this.state = 853;
						this.match(ObjectiveCParser.COLON);
						this.state = 856;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while (_la === ObjectiveCParser.RETURN || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || _la === ObjectiveCParser.COLON);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolExpression() {
		let localctx = new ProtocolExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 106, ObjectiveCParser.RULE_protocolExpression);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 860;
			this.match(ObjectiveCParser.PROTOCOL);
			this.state = 861;
			this.match(ObjectiveCParser.LP);
			this.state = 862;
			this.protocolName();
			this.state = 863;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	encodeExpression() {
		let localctx = new EncodeExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 108, ObjectiveCParser.RULE_encodeExpression);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 865;
			this.match(ObjectiveCParser.ENCODE);
			this.state = 866;
			this.match(ObjectiveCParser.LP);
			this.state = 867;
			this.typeName();
			this.state = 868;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeVariableDeclarator() {
		let localctx = new TypeVariableDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 110, ObjectiveCParser.RULE_typeVariableDeclarator);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 870;
			this.declarationSpecifiers();
			this.state = 871;
			this.declarator();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	throwStatement() {
		let localctx = new ThrowStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 112, ObjectiveCParser.RULE_throwStatement);
		try {
			this.state = 880;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 96, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 873;
					this.match(ObjectiveCParser.THROW);
					this.state = 874;
					this.match(ObjectiveCParser.LP);
					this.state = 875;
					this.identifier();
					this.state = 876;
					this.match(ObjectiveCParser.RP);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 878;
					this.match(ObjectiveCParser.THROW);
					this.state = 879;
					this.expression(0);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	tryBlock() {
		let localctx = new TryBlockContext(this, this._ctx, this.state);
		this.enterRule(localctx, 114, ObjectiveCParser.RULE_tryBlock);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 882;
			this.match(ObjectiveCParser.TRY);
			this.state = 883;
			localctx.tryStatement = this.compoundStatement();
			this.state = 887;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.CATCH) {
				this.state = 884;
				this.catchStatement();
				this.state = 889;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 892;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.FINALLY) {
				this.state = 890;
				this.match(ObjectiveCParser.FINALLY);
				this.state = 891;
				localctx.finallyStatement = this.compoundStatement();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	catchStatement() {
		let localctx = new CatchStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 116, ObjectiveCParser.RULE_catchStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 894;
			this.match(ObjectiveCParser.CATCH);
			this.state = 895;
			this.match(ObjectiveCParser.LP);
			this.state = 896;
			this.typeVariableDeclarator();
			this.state = 897;
			this.match(ObjectiveCParser.RP);
			this.state = 898;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	synchronizedStatement() {
		let localctx = new SynchronizedStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 118, ObjectiveCParser.RULE_synchronizedStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 900;
			this.match(ObjectiveCParser.SYNCHRONIZED);
			this.state = 901;
			this.match(ObjectiveCParser.LP);
			this.state = 902;
			this.expression(0);
			this.state = 903;
			this.match(ObjectiveCParser.RP);
			this.state = 904;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	autoreleaseStatement() {
		let localctx = new AutoreleaseStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 120, ObjectiveCParser.RULE_autoreleaseStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 906;
			this.match(ObjectiveCParser.AUTORELEASEPOOL);
			this.state = 907;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	functionDeclaration() {
		let localctx = new FunctionDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 122, ObjectiveCParser.RULE_functionDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 909;
			this.functionSignature();
			this.state = 914;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 912;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 910;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 911;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 916;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 917;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	functionDefinition() {
		let localctx = new FunctionDefinitionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 124, ObjectiveCParser.RULE_functionDefinition);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 919;
			this.functionSignature();
			this.state = 924;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 922;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 920;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 921;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 926;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 927;
			this.compoundStatement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	functionSignature() {
		let localctx = new FunctionSignatureContext(this, this._ctx, this.state);
		this.enterRule(localctx, 126, ObjectiveCParser.RULE_functionSignature);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 930;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 103, this._ctx);
			if (la_ === 1) {
				this.state = 929;
				this.declarationSpecifiers();

			}
			this.state = 932;
			this.identifier();

			this.state = 933;
			this.match(ObjectiveCParser.LP);
			this.state = 935;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0)) {
				this.state = 934;
				this.parameterList();
			}

			this.state = 937;
			this.match(ObjectiveCParser.RP);
			this.state = 940;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 105, this._ctx);
			if (la_ === 1) {
				this.state = 939;
				this.attributeSpecifier();

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	functionPointer() {
		let localctx = new FunctionPointerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 128, ObjectiveCParser.RULE_functionPointer);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 943;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 942;
				this.declarationSpecifiers();
			}

			this.state = 945;
			this.match(ObjectiveCParser.LP);
			this.state = 946;
			this.match(ObjectiveCParser.MUL);
			this.state = 948;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 107, this._ctx);
			if (la_ === 1) {
				this.state = 947;
				this.nullabilitySpecifier();

			}
			this.state = 951;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 950;
				localctx.name = this.identifier();
			}

			this.state = 953;
			this.match(ObjectiveCParser.RP);

			this.state = 955;
			this.match(ObjectiveCParser.LP);
			this.state = 957;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0)) {
				this.state = 956;
				this.parameterList();
			}

			this.state = 959;
			this.match(ObjectiveCParser.RP);
			this.state = 962;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 110, this._ctx);
			if (la_ === 1) {
				this.state = 961;
				this.attributeSpecifier();

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attribute() {
		let localctx = new AttributeContext(this, this._ctx, this.state);
		this.enterRule(localctx, 130, ObjectiveCParser.RULE_attribute);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 964;
			this.attributeName();
			this.state = 966;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 965;
				this.attributeParameters();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeName() {
		let localctx = new AttributeNameContext(this, this._ctx, this.state);
		this.enterRule(localctx, 132, ObjectiveCParser.RULE_attributeName);
		try {
			this.state = 970;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.CONST:
					this.enterOuterAlt(localctx, 1);
					this.state = 968;
					this.match(ObjectiveCParser.CONST);
					break;
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.enterOuterAlt(localctx, 2);
					this.state = 969;
					this.identifier();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeParameters() {
		let localctx = new AttributeParametersContext(this, this._ctx, this.state);
		this.enterRule(localctx, 134, ObjectiveCParser.RULE_attributeParameters);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 972;
			this.match(ObjectiveCParser.LP);
			this.state = 974;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.CONST || ((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (ObjectiveCParser.TRUE - 38)) | (1 << (ObjectiveCParser.FALSE - 38)) | (1 << (ObjectiveCParser.BOOL - 38)) | (1 << (ObjectiveCParser.Class - 38)) | (1 << (ObjectiveCParser.BYCOPY - 38)) | (1 << (ObjectiveCParser.BYREF - 38)) | (1 << (ObjectiveCParser.ID - 38)) | (1 << (ObjectiveCParser.IMP - 38)) | (1 << (ObjectiveCParser.IN - 38)) | (1 << (ObjectiveCParser.INOUT - 38)) | (1 << (ObjectiveCParser.NIL - 38)) | (1 << (ObjectiveCParser.NO - 38)) | (1 << (ObjectiveCParser.NULL - 38)) | (1 << (ObjectiveCParser.ONEWAY - 38)) | (1 << (ObjectiveCParser.OUT - 38)) | (1 << (ObjectiveCParser.PROTOCOL_ - 38)) | (1 << (ObjectiveCParser.SEL - 38)) | (1 << (ObjectiveCParser.SELF - 38)) | (1 << (ObjectiveCParser.SUPER - 38)) | (1 << (ObjectiveCParser.YES - 38)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || ((((_la - 163)) & ~0x1f) == 0 && ((1 << (_la - 163)) & ((1 << (ObjectiveCParser.ADD - 163)) | (1 << (ObjectiveCParser.SUB - 163)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 163)) | (1 << (ObjectiveCParser.STRING_START - 163)) | (1 << (ObjectiveCParser.HEX_LITERAL - 163)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 163)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 163)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 163)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 163)))) !== 0)) {
				this.state = 973;
				this.attributeParameterList();
			}

			this.state = 976;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeParameterList() {
		let localctx = new AttributeParameterListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 136, ObjectiveCParser.RULE_attributeParameterList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 978;
			this.attributeParameter();
			this.state = 983;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 979;
				this.match(ObjectiveCParser.COMMA);
				this.state = 980;
				this.attributeParameter();
				this.state = 985;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeParameter() {
		let localctx = new AttributeParameterContext(this, this._ctx, this.state);
		this.enterRule(localctx, 138, ObjectiveCParser.RULE_attributeParameter);
		try {
			this.state = 990;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 115, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 986;
					this.attribute();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 987;
					this.constant();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 988;
					this.stringLiteral();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 989;
					this.attributeParameterAssignment();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeParameterAssignment() {
		let localctx = new AttributeParameterAssignmentContext(this, this._ctx, this.state);
		this.enterRule(localctx, 140, ObjectiveCParser.RULE_attributeParameterAssignment);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 992;
			this.attributeName();
			this.state = 993;
			this.match(ObjectiveCParser.ASSIGNMENT);
			this.state = 997;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.TRUE:
				case ObjectiveCParser.FALSE:
				case ObjectiveCParser.NIL:
				case ObjectiveCParser.NO:
				case ObjectiveCParser.NULL:
				case ObjectiveCParser.YES:
				case ObjectiveCParser.ADD:
				case ObjectiveCParser.SUB:
				case ObjectiveCParser.CHARACTER_LITERAL:
				case ObjectiveCParser.HEX_LITERAL:
				case ObjectiveCParser.OCTAL_LITERAL:
				case ObjectiveCParser.BINARY_LITERAL:
				case ObjectiveCParser.DECIMAL_LITERAL:
				case ObjectiveCParser.FLOATING_POINT_LITERAL:
					this.state = 994;
					this.constant();
					break;
				case ObjectiveCParser.CONST:
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.state = 995;
					this.attributeName();
					break;
				case ObjectiveCParser.STRING_START:
					this.state = 996;
					this.stringLiteral();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	declaration() {
		let localctx = new DeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 142, ObjectiveCParser.RULE_declaration);
		try {
			this.state = 1003;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 117, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 999;
					this.functionCallExpression();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1000;
					this.enumDeclaration();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1001;
					this.varDeclaration();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1002;
					this.typedefDeclaration();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	functionCallExpression() {
		let localctx = new FunctionCallExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 144, ObjectiveCParser.RULE_functionCallExpression);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1006;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ATTRIBUTE) {
				this.state = 1005;
				this.attributeSpecifier();
			}

			this.state = 1008;
			this.identifier();
			this.state = 1010;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ATTRIBUTE) {
				this.state = 1009;
				this.attributeSpecifier();
			}

			this.state = 1012;
			this.match(ObjectiveCParser.LP);
			this.state = 1013;
			this.directDeclarator();
			this.state = 1014;
			this.match(ObjectiveCParser.RP);
			this.state = 1015;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	enumDeclaration() {
		let localctx = new EnumDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 146, ObjectiveCParser.RULE_enumDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1021;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 121, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1019;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
							this.state = 1017;
							this.macro();
							break;
						case ObjectiveCParser.ATTRIBUTE:
							this.state = 1018;
							this.attributeSpecifier();
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
				}
				this.state = 1023;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 121, this._ctx);
			}

			this.state = 1025;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.TYPEDEF) {
				this.state = 1024;
				this.match(ObjectiveCParser.TYPEDEF);
			}

			this.state = 1027;
			this.enumSpecifier();
			this.state = 1029;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 123, this._ctx);
			if (la_ === 1) {
				this.state = 1028;
				localctx.name = this.identifier();

			}
			this.state = 1035;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 1033;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 1031;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 1032;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1037;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1038;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	varDeclaration() {
		let localctx = new VarDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 148, ObjectiveCParser.RULE_varDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1041;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 126, this._ctx);
			if (la_ === 1) {
				this.state = 1040;
				this.macro();

			}
			this.state = 1047;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 127, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1043;
					this.declarationSpecifiers();
					this.state = 1044;
					this.initDeclaratorList();
					break;

				case 2:
					this.state = 1046;
					this.declarationSpecifiers();
					break;

			}
			this.state = 1053;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 1051;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 1049;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 1050;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1055;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1056;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typedefDeclaration() {
		let localctx = new TypedefDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 150, ObjectiveCParser.RULE_typedefDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1059;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ATTRIBUTE) {
				this.state = 1058;
				this.attributeSpecifier();
			}

			this.state = 1061;
			this.match(ObjectiveCParser.TYPEDEF);
			this.state = 1071;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 131, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1062;
					this.declarationSpecifiers();
					this.state = 1063;
					this.typeDeclaratorList();
					break;

				case 2:
					this.state = 1065;
					this.declarationSpecifiers();
					break;

				case 3:
					this.state = 1066;
					this.functionPointer();
					break;

				case 4:
					this.state = 1067;
					this.functionSignature();
					break;

				case 5:
					this.state = 1068;
					this.structOrUnionSpecifier();
					this.state = 1069;
					this.identifier();
					break;

			}
			this.state = 1077;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 1075;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 1073;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 1074;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1079;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1080;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeDeclaratorList() {
		let localctx = new TypeDeclaratorListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 152, ObjectiveCParser.RULE_typeDeclaratorList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1082;
			this.typeDeclarator();
			this.state = 1087;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 1083;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1084;
				this.typeDeclarator();
				this.state = 1089;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeDeclarator() {
		let localctx = new TypeDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 154, ObjectiveCParser.RULE_typeDeclarator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1091;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.MUL) {
				this.state = 1090;
				this.pointer();
			}

			this.state = 1093;
			this.directDeclarator();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	commonSpecifiers() {
		let localctx = new CommonSpecifiersContext(this, this._ctx, this.state);
		this.enterRule(localctx, 156, ObjectiveCParser.RULE_commonSpecifiers);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1100;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 1100;
						this._errHandler.sync(this);
						switch (this._input.LA(1)) {
							case ObjectiveCParser.AUTORELEASING_QUALIFIER:
							case ObjectiveCParser.STRONG_QUALIFIER:
							case ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER:
							case ObjectiveCParser.WEAK_QUALIFIER:
								this.state = 1095;
								this.arcBehaviourSpecifier();
								break;
							case ObjectiveCParser.NULL_UNSPECIFIED:
							case ObjectiveCParser.NULLABLE:
							case ObjectiveCParser.NONNULL:
							case ObjectiveCParser.NULL_RESETTABLE:
								this.state = 1096;
								this.nullabilitySpecifier();
								break;
							case ObjectiveCParser.IB_OUTLET:
							case ObjectiveCParser.IB_OUTLET_COLLECTION:
								this.state = 1097;
								this.ibOutletQualifier();
								break;
							case ObjectiveCParser.INLINE:
							case ObjectiveCParser.BLOCK:
							case ObjectiveCParser.BRIDGE:
							case ObjectiveCParser.BRIDGE_RETAINED:
							case ObjectiveCParser.BRIDGE_TRANSFER:
							case ObjectiveCParser.KINDOF:
							case ObjectiveCParser.NS_INLINE:
								this.state = 1098;
								this.typePrefix();
								break;
							case ObjectiveCParser.CONST:
							case ObjectiveCParser.RESTRICT:
							case ObjectiveCParser.VOLATILE:
							case ObjectiveCParser.BYCOPY:
							case ObjectiveCParser.BYREF:
							case ObjectiveCParser.IN:
							case ObjectiveCParser.INOUT:
							case ObjectiveCParser.ONEWAY:
							case ObjectiveCParser.OUT:
								this.state = 1099;
								this.typeQualifier();
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1102;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 137, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	declarationSpecifiers() {
		let localctx = new DeclarationSpecifiersContext(this, this._ctx, this.state);
		this.enterRule(localctx, 158, ObjectiveCParser.RULE_declarationSpecifiers);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1108;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 1108;
						this._errHandler.sync(this);
						var la_ = this._interp.adaptivePredict(this._input, 138, this._ctx);
						switch (la_) {
							case 1:
								this.state = 1104;
								this.storageClassSpecifier();
								break;

							case 2:
								this.state = 1105;
								this.attributeSpecifier();
								break;

							case 3:
								this.state = 1106;
								this.commonSpecifiers();
								break;

							case 4:
								this.state = 1107;
								this.typeSpecifier();
								break;

						}
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1110;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 139, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	pointerQualifier() {
		let localctx = new PointerQualifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 160, ObjectiveCParser.RULE_pointerQualifier);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1115;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 1115;
						this._errHandler.sync(this);
						switch (this._input.LA(1)) {
							case ObjectiveCParser.AUTO:
							case ObjectiveCParser.EXTERN:
							case ObjectiveCParser.REGISTER:
							case ObjectiveCParser.STATIC:
								this.state = 1112;
								this.storageClassSpecifier();
								break;
							case ObjectiveCParser.ATTRIBUTE:
								this.state = 1113;
								this.attributeSpecifier();
								break;
							case ObjectiveCParser.CONST:
							case ObjectiveCParser.INLINE:
							case ObjectiveCParser.RESTRICT:
							case ObjectiveCParser.VOLATILE:
							case ObjectiveCParser.BYCOPY:
							case ObjectiveCParser.BYREF:
							case ObjectiveCParser.IN:
							case ObjectiveCParser.INOUT:
							case ObjectiveCParser.ONEWAY:
							case ObjectiveCParser.OUT:
							case ObjectiveCParser.AUTORELEASING_QUALIFIER:
							case ObjectiveCParser.BLOCK:
							case ObjectiveCParser.BRIDGE:
							case ObjectiveCParser.BRIDGE_RETAINED:
							case ObjectiveCParser.BRIDGE_TRANSFER:
							case ObjectiveCParser.KINDOF:
							case ObjectiveCParser.STRONG_QUALIFIER:
							case ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER:
							case ObjectiveCParser.WEAK_QUALIFIER:
							case ObjectiveCParser.NULL_UNSPECIFIED:
							case ObjectiveCParser.NULLABLE:
							case ObjectiveCParser.NONNULL:
							case ObjectiveCParser.NULL_RESETTABLE:
							case ObjectiveCParser.NS_INLINE:
							case ObjectiveCParser.IB_OUTLET:
							case ObjectiveCParser.IB_OUTLET_COLLECTION:
								this.state = 1114;
								this.commonSpecifiers();
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1117;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 141, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	attributeSpecifier() {
		let localctx = new AttributeSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 162, ObjectiveCParser.RULE_attributeSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1119;
			this.match(ObjectiveCParser.ATTRIBUTE);
			this.state = 1120;
			this.match(ObjectiveCParser.LP);
			this.state = 1121;
			this.match(ObjectiveCParser.LP);
			this.state = 1122;
			this.attribute();
			this.state = 1127;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 1123;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1124;
				this.attribute();
				this.state = 1129;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1130;
			this.match(ObjectiveCParser.RP);
			this.state = 1131;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	initDeclaratorList() {
		let localctx = new InitDeclaratorListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 164, ObjectiveCParser.RULE_initDeclaratorList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1133;
			this.initDeclarator();
			this.state = 1138;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 1134;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1135;
				this.initDeclarator();
				this.state = 1140;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	initDeclarator() {
		let localctx = new InitDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 166, ObjectiveCParser.RULE_initDeclarator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1141;
			this.declarator();
			this.state = 1146;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 145, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1144;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
							this.state = 1142;
							this.macro();
							break;
						case ObjectiveCParser.ATTRIBUTE:
							this.state = 1143;
							this.attributeSpecifier();
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
				}
				this.state = 1148;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 145, this._ctx);
			}

			this.state = 1151;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ASSIGNMENT) {
				this.state = 1149;
				this.match(ObjectiveCParser.ASSIGNMENT);
				this.state = 1150;
				this.initializer();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	structOrUnionSpecifier() {
		let localctx = new StructOrUnionSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 168, ObjectiveCParser.RULE_structOrUnionSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1153;
			_la = this._input.LA(1);
			if (!(_la === ObjectiveCParser.STRUCT || _la === ObjectiveCParser.UNION)) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
			this.state = 1166;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 149, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1154;
					this.identifier();
					break;

				case 2:
					this.state = 1156;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
						this.state = 1155;
						this.identifier();
					}

					this.state = 1158;
					this.match(ObjectiveCParser.LBRACE);
					this.state = 1160;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 1159;
						this.fieldDeclaration();
						this.state = 1162;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0));
					this.state = 1164;
					this.match(ObjectiveCParser.RBRACE);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	fieldDeclaration() {
		let localctx = new FieldDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 170, ObjectiveCParser.RULE_fieldDeclaration);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1172;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 150, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1168;
					this.specifierQualifierList();
					this.state = 1169;
					this.fieldDeclaratorList();
					break;

				case 2:
					this.state = 1171;
					this.functionPointer();
					break;

			}
			this.state = 1178;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 1176;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 1174;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 1175;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1180;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1181;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	specifierQualifierList() {
		let localctx = new SpecifierQualifierListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 172, ObjectiveCParser.RULE_specifierQualifierList);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1185;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 1185;
						this._errHandler.sync(this);
						var la_ = this._interp.adaptivePredict(this._input, 153, this._ctx);
						switch (la_) {
							case 1:
								this.state = 1183;
								this.commonSpecifiers();
								break;

							case 2:
								this.state = 1184;
								this.typeSpecifier();
								break;

						}
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1187;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 154, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	ibOutletQualifier() {
		let localctx = new IbOutletQualifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 174, ObjectiveCParser.RULE_ibOutletQualifier);
		try {
			this.state = 1195;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
					this.enterOuterAlt(localctx, 1);
					this.state = 1189;
					this.match(ObjectiveCParser.IB_OUTLET_COLLECTION);
					this.state = 1190;
					this.match(ObjectiveCParser.LP);
					this.state = 1191;
					this.identifier();
					this.state = 1192;
					this.match(ObjectiveCParser.RP);
					break;
				case ObjectiveCParser.IB_OUTLET:
					this.enterOuterAlt(localctx, 2);
					this.state = 1194;
					this.match(ObjectiveCParser.IB_OUTLET);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	arcBehaviourSpecifier() {
		let localctx = new ArcBehaviourSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 176, ObjectiveCParser.RULE_arcBehaviourSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1197;
			_la = this._input.LA(1);
			if (!(((((_la - 85)) & ~0x1f) == 0 && ((1 << (_la - 85)) & ((1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 85)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 85)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 85)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 85)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	nullabilitySpecifier() {
		let localctx = new NullabilitySpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 178, ObjectiveCParser.RULE_nullabilitySpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1199;
			_la = this._input.LA(1);
			if (!(((((_la - 99)) & ~0x1f) == 0 && ((1 << (_la - 99)) & ((1 << (ObjectiveCParser.NULL_UNSPECIFIED - 99)) | (1 << (ObjectiveCParser.NULLABLE - 99)) | (1 << (ObjectiveCParser.NONNULL - 99)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 99)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	storageClassSpecifier() {
		let localctx = new StorageClassSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 180, ObjectiveCParser.RULE_storageClassSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1201;
			_la = this._input.LA(1);
			if (!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.STATIC))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typePrefix() {
		let localctx = new TypePrefixContext(this, this._ctx, this.state);
		this.enterRule(localctx, 182, ObjectiveCParser.RULE_typePrefix);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1203;
			_la = this._input.LA(1);
			if (!(_la === ObjectiveCParser.INLINE || ((((_la - 86)) & ~0x1f) == 0 && ((1 << (_la - 86)) & ((1 << (ObjectiveCParser.BLOCK - 86)) | (1 << (ObjectiveCParser.BRIDGE - 86)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 86)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 86)) | (1 << (ObjectiveCParser.KINDOF - 86)) | (1 << (ObjectiveCParser.NS_INLINE - 86)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeQualifier() {
		let localctx = new TypeQualifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 184, ObjectiveCParser.RULE_typeQualifier);
		try {
			this.state = 1209;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.CONST:
					this.enterOuterAlt(localctx, 1);
					this.state = 1205;
					this.match(ObjectiveCParser.CONST);
					break;
				case ObjectiveCParser.VOLATILE:
					this.enterOuterAlt(localctx, 2);
					this.state = 1206;
					this.match(ObjectiveCParser.VOLATILE);
					break;
				case ObjectiveCParser.RESTRICT:
					this.enterOuterAlt(localctx, 3);
					this.state = 1207;
					this.match(ObjectiveCParser.RESTRICT);
					break;
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
					this.enterOuterAlt(localctx, 4);
					this.state = 1208;
					this.protocolQualifier();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	protocolQualifier() {
		let localctx = new ProtocolQualifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 186, ObjectiveCParser.RULE_protocolQualifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1211;
			_la = this._input.LA(1);
			if (!(((((_la - 42)) & ~0x1f) == 0 && ((1 << (_la - 42)) & ((1 << (ObjectiveCParser.BYCOPY - 42)) | (1 << (ObjectiveCParser.BYREF - 42)) | (1 << (ObjectiveCParser.IN - 42)) | (1 << (ObjectiveCParser.INOUT - 42)) | (1 << (ObjectiveCParser.ONEWAY - 42)) | (1 << (ObjectiveCParser.OUT - 42)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeSpecifier() {
		let localctx = new TypeSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 188, ObjectiveCParser.RULE_typeSpecifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1223;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 158, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1214;
					this._errHandler.sync(this);
					let _alt = 1;
					do {
						switch (_alt) {
							case 1:
								this.state = 1213;
								_la = this._input.LA(1);
								if (!(((((_la - 4)) & ~0x1f) == 0 && ((1 << (_la - 4)) & ((1 << (ObjectiveCParser.CHAR - 4)) | (1 << (ObjectiveCParser.DOUBLE - 4)) | (1 << (ObjectiveCParser.FLOAT - 4)) | (1 << (ObjectiveCParser.INT - 4)) | (1 << (ObjectiveCParser.LONG - 4)) | (1 << (ObjectiveCParser.SHORT - 4)) | (1 << (ObjectiveCParser.SIGNED - 4)) | (1 << (ObjectiveCParser.UNSIGNED - 4)) | (1 << (ObjectiveCParser.VOID - 4)))) !== 0))) {
									this._errHandler.recoverInline(this);
								}
								else {
									this._errHandler.reportMatch(this);
									this.consume();
								}
								break;
							default:
								throw new antlr4.error.NoViableAltException(this);
						}
						this.state = 1216;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 157, this._ctx);
					} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
					break;

				case 2:
					this.state = 1218;
					this.typeofExpression();
					break;

				case 3:
					this.state = 1219;
					this.genericTypeSpecifier();
					break;

				case 4:
					this.state = 1220;
					this.structOrUnionSpecifier();
					break;

				case 5:
					this.state = 1221;
					this.enumSpecifier();
					break;

				case 6:
					this.state = 1222;
					this.identifier();
					break;

			}
			this.state = 1226;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 159, this._ctx);
			if (la_ === 1) {
				this.state = 1225;
				this.pointer();

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeofExpression() {
		let localctx = new TypeofExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 190, ObjectiveCParser.RULE_typeofExpression);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1228;
			this.match(ObjectiveCParser.TYPEOF);

			this.state = 1229;
			this.match(ObjectiveCParser.LP);
			this.state = 1230;
			this.expression(0);
			this.state = 1231;
			this.match(ObjectiveCParser.RP);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	fieldDeclaratorList() {
		let localctx = new FieldDeclaratorListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 192, ObjectiveCParser.RULE_fieldDeclaratorList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1233;
			this.fieldDeclarator();
			this.state = 1238;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 1234;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1235;
				this.fieldDeclarator();
				this.state = 1240;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	fieldDeclarator() {
		let localctx = new FieldDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 194, ObjectiveCParser.RULE_fieldDeclarator);
		var _la = 0; // Token type
		try {
			this.state = 1247;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 162, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1241;
					this.declarator();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1243;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0) || _la === ObjectiveCParser.MUL) {
						this.state = 1242;
						this.declarator();
					}

					this.state = 1245;
					this.match(ObjectiveCParser.COLON);
					this.state = 1246;
					this.constant();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	enumSpecifier() {
		let localctx = new EnumSpecifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 196, ObjectiveCParser.RULE_enumSpecifier);
		var _la = 0; // Token type
		try {
			this.state = 1282;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.ENUM:
					this.enterOuterAlt(localctx, 1);
					this.state = 1249;
					this.match(ObjectiveCParser.ENUM);
					this.state = 1255;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 164, this._ctx);
					if (la_ === 1) {
						this.state = 1251;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
							this.state = 1250;
							localctx.name = this.identifier();
						}

						this.state = 1253;
						this.match(ObjectiveCParser.COLON);
						this.state = 1254;
						this.typeName();

					}
					this.state = 1268;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
							this.state = 1257;
							this.identifier();
							this.state = 1262;
							this._errHandler.sync(this);
							var la_ = this._interp.adaptivePredict(this._input, 165, this._ctx);
							if (la_ === 1) {
								this.state = 1258;
								this.match(ObjectiveCParser.LBRACE);
								this.state = 1259;
								this.enumeratorList();
								this.state = 1260;
								this.match(ObjectiveCParser.RBRACE);

							}
							break;
						case ObjectiveCParser.LBRACE:
							this.state = 1264;
							this.match(ObjectiveCParser.LBRACE);
							this.state = 1265;
							this.enumeratorList();
							this.state = 1266;
							this.match(ObjectiveCParser.RBRACE);
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
					break;
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.NS_CLOSED_ENUM:
				case ObjectiveCParser.NS_ERROR_ENUM:
					this.enterOuterAlt(localctx, 2);
					this.state = 1270;
					localctx.type = this._input.LT(1);
					_la = this._input.LA(1);
					if (!(((((_la - 104)) & ~0x1f) == 0 && ((1 << (_la - 104)) & ((1 << (ObjectiveCParser.NS_ENUM - 104)) | (1 << (ObjectiveCParser.NS_OPTIONS - 104)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 104)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 104)))) !== 0))) {
						localctx.type = this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
					this.state = 1271;
					this.match(ObjectiveCParser.LP);
					this.state = 1272;
					this.typeName();
					this.state = 1275;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.COMMA) {
						this.state = 1273;
						this.match(ObjectiveCParser.COMMA);
						this.state = 1274;
						localctx.name = this.identifier();
					}

					this.state = 1277;
					this.match(ObjectiveCParser.RP);
					this.state = 1278;
					this.match(ObjectiveCParser.LBRACE);
					this.state = 1279;
					this.enumeratorList();
					this.state = 1280;
					this.match(ObjectiveCParser.RBRACE);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	enumeratorList() {
		let localctx = new EnumeratorListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 198, ObjectiveCParser.RULE_enumeratorList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1284;
			localctx._enumerator = this.enumerator();
			localctx.list.push(localctx._enumerator);
			this.state = 1289;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 169, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1285;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1286;
					localctx._enumerator = this.enumerator();
					localctx.list.push(localctx._enumerator);
				}
				this.state = 1291;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 169, this._ctx);
			}

			this.state = 1293;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.COMMA) {
				this.state = 1292;
				this.match(ObjectiveCParser.COMMA);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	enumerator() {
		let localctx = new EnumeratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 200, ObjectiveCParser.RULE_enumerator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1295;
			localctx.name = this.enumeratorIdentifier();
			this.state = 1300;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
				this.state = 1298;
				this._errHandler.sync(this);
				switch (this._input.LA(1)) {
					case ObjectiveCParser.BOOL:
					case ObjectiveCParser.Class:
					case ObjectiveCParser.BYCOPY:
					case ObjectiveCParser.BYREF:
					case ObjectiveCParser.ID:
					case ObjectiveCParser.IMP:
					case ObjectiveCParser.IN:
					case ObjectiveCParser.INOUT:
					case ObjectiveCParser.ONEWAY:
					case ObjectiveCParser.OUT:
					case ObjectiveCParser.PROTOCOL_:
					case ObjectiveCParser.SEL:
					case ObjectiveCParser.SELF:
					case ObjectiveCParser.SUPER:
					case ObjectiveCParser.ATOMIC:
					case ObjectiveCParser.NONATOMIC:
					case ObjectiveCParser.RETAIN:
					case ObjectiveCParser.AUTORELEASING_QUALIFIER:
					case ObjectiveCParser.BLOCK:
					case ObjectiveCParser.BRIDGE_RETAINED:
					case ObjectiveCParser.BRIDGE_TRANSFER:
					case ObjectiveCParser.COVARIANT:
					case ObjectiveCParser.CONTRAVARIANT:
					case ObjectiveCParser.DEPRECATED:
					case ObjectiveCParser.KINDOF:
					case ObjectiveCParser.UNUSED:
					case ObjectiveCParser.NULL_UNSPECIFIED:
					case ObjectiveCParser.NULLABLE:
					case ObjectiveCParser.NONNULL:
					case ObjectiveCParser.NULL_RESETTABLE:
					case ObjectiveCParser.NS_INLINE:
					case ObjectiveCParser.NS_ENUM:
					case ObjectiveCParser.NS_OPTIONS:
					case ObjectiveCParser.ASSIGN:
					case ObjectiveCParser.COPY:
					case ObjectiveCParser.GETTER:
					case ObjectiveCParser.SETTER:
					case ObjectiveCParser.STRONG:
					case ObjectiveCParser.READONLY:
					case ObjectiveCParser.READWRITE:
					case ObjectiveCParser.WEAK:
					case ObjectiveCParser.UNSAFE_UNRETAINED:
					case ObjectiveCParser.IB_OUTLET:
					case ObjectiveCParser.IB_OUTLET_COLLECTION:
					case ObjectiveCParser.IB_INSPECTABLE:
					case ObjectiveCParser.IB_DESIGNABLE:
					case ObjectiveCParser.IDENTIFIER:
						this.state = 1296;
						this.macro();
						break;
					case ObjectiveCParser.ATTRIBUTE:
						this.state = 1297;
						this.attributeSpecifier();
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1302;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1305;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ASSIGNMENT) {
				this.state = 1303;
				this.match(ObjectiveCParser.ASSIGNMENT);
				this.state = 1304;
				localctx.value = this.expression(0);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	enumeratorIdentifier() {
		let localctx = new EnumeratorIdentifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 202, ObjectiveCParser.RULE_enumeratorIdentifier);
		try {
			this.state = 1309;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.enterOuterAlt(localctx, 1);
					this.state = 1307;
					this.identifier();
					break;
				case ObjectiveCParser.DEFAULT:
					this.enterOuterAlt(localctx, 2);
					this.state = 1308;
					this.match(ObjectiveCParser.DEFAULT);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	directDeclarator() {
		let localctx = new DirectDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 204, ObjectiveCParser.RULE_directDeclarator);
		var _la = 0; // Token type
		try {
			this.state = 1334;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 179, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1316;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
							this.state = 1311;
							this.identifier();
							break;
						case ObjectiveCParser.LP:
							this.state = 1312;
							this.match(ObjectiveCParser.LP);
							this.state = 1313;
							this.declarator();
							this.state = 1314;
							this.match(ObjectiveCParser.RP);
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
					this.state = 1321;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					while (_la === ObjectiveCParser.LBRACK) {
						this.state = 1318;
						this.declaratorSuffix();
						this.state = 1323;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					}
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1324;
					this.match(ObjectiveCParser.LP);
					this.state = 1325;
					this.match(ObjectiveCParser.BITXOR);
					this.state = 1327;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 177, this._ctx);
					if (la_ === 1) {
						this.state = 1326;
						this.nullabilitySpecifier();

					}
					this.state = 1330;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
						this.state = 1329;
						this.identifier();
					}

					this.state = 1332;
					this.match(ObjectiveCParser.RP);
					this.state = 1333;
					this.blockParameters();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	declaratorSuffix() {
		let localctx = new DeclaratorSuffixContext(this, this._ctx, this.state);
		this.enterRule(localctx, 206, ObjectiveCParser.RULE_declaratorSuffix);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1336;
			this.match(ObjectiveCParser.LBRACK);
			this.state = 1338;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (ObjectiveCParser.TRUE - 38)) | (1 << (ObjectiveCParser.FALSE - 38)) | (1 << (ObjectiveCParser.BOOL - 38)) | (1 << (ObjectiveCParser.Class - 38)) | (1 << (ObjectiveCParser.BYCOPY - 38)) | (1 << (ObjectiveCParser.BYREF - 38)) | (1 << (ObjectiveCParser.ID - 38)) | (1 << (ObjectiveCParser.IMP - 38)) | (1 << (ObjectiveCParser.IN - 38)) | (1 << (ObjectiveCParser.INOUT - 38)) | (1 << (ObjectiveCParser.NIL - 38)) | (1 << (ObjectiveCParser.NO - 38)) | (1 << (ObjectiveCParser.NULL - 38)) | (1 << (ObjectiveCParser.ONEWAY - 38)) | (1 << (ObjectiveCParser.OUT - 38)) | (1 << (ObjectiveCParser.PROTOCOL_ - 38)) | (1 << (ObjectiveCParser.SEL - 38)) | (1 << (ObjectiveCParser.SELF - 38)) | (1 << (ObjectiveCParser.SUPER - 38)) | (1 << (ObjectiveCParser.YES - 38)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || ((((_la - 163)) & ~0x1f) == 0 && ((1 << (_la - 163)) & ((1 << (ObjectiveCParser.ADD - 163)) | (1 << (ObjectiveCParser.SUB - 163)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 163)) | (1 << (ObjectiveCParser.HEX_LITERAL - 163)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 163)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 163)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 163)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 163)))) !== 0)) {
				this.state = 1337;
				this.constantExpression();
			}

			this.state = 1340;
			this.match(ObjectiveCParser.RBRACK);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	parameterList() {
		let localctx = new ParameterListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 208, ObjectiveCParser.RULE_parameterList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1342;
			this.parameterDeclarationList();
			this.state = 1345;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.COMMA) {
				this.state = 1343;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1344;
				this.match(ObjectiveCParser.ELIPSIS);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	pointer() {
		let localctx = new PointerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 210, ObjectiveCParser.RULE_pointer);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1347;
			this.match(ObjectiveCParser.MUL);
			this.state = 1349;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 182, this._ctx);
			if (la_ === 1) {
				this.state = 1348;
				this.pointerQualifier();

			}
			this.state = 1352;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 183, this._ctx);
			if (la_ === 1) {
				this.state = 1351;
				localctx.nextPointer = this.pointer();

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	macro() {
		let localctx = new MacroContext(this, this._ctx, this.state);
		this.enterRule(localctx, 212, ObjectiveCParser.RULE_macro);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1354;
			this.identifier();
			this.state = 1392;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 1355;
				this.match(ObjectiveCParser.LP);
				this.state = 1378;
				this._errHandler.sync(this);
				var la_ = this._interp.adaptivePredict(this._input, 187, this._ctx);
				switch (la_) {
					case 1:
						this.state = 1356;
						localctx._primaryExpression = this.primaryExpression();
						localctx.messages.push(localctx._primaryExpression);
						break;

					case 2:
						this.state = 1357;
						localctx._osVersion = this.osVersion();
						localctx.osVersions.push(localctx._osVersion);
						break;

					case 3:
						this.state = 1358;
						this.identifier();
						this.state = 1363;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						while (_la === ObjectiveCParser.DOT) {
							this.state = 1359;
							this.match(ObjectiveCParser.DOT);
							this.state = 1360;
							this.identifier();
							this.state = 1365;
							this._errHandler.sync(this);
							_la = this._input.LA(1);
						}
						this.state = 1376;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						if (_la === ObjectiveCParser.LP) {
							this.state = 1366;
							this.match(ObjectiveCParser.LP);
							this.state = 1372;
							this._errHandler.sync(this);
							_la = this._input.LA(1);
							while (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0)) {
								this.state = 1367;
								this.identifier();
								this.state = 1368;
								this.match(ObjectiveCParser.COLON);
								this.state = 1374;
								this._errHandler.sync(this);
								_la = this._input.LA(1);
							}
							this.state = 1375;
							this.match(ObjectiveCParser.RP);
						}

						break;

				}
				this.state = 1387;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				while (_la === ObjectiveCParser.COMMA) {
					this.state = 1380;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1383;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 188, this._ctx);
					switch (la_) {
						case 1:
							this.state = 1381;
							localctx._primaryExpression = this.primaryExpression();
							localctx.messages.push(localctx._primaryExpression);
							break;

						case 2:
							this.state = 1382;
							localctx._osVersion = this.osVersion();
							localctx.osVersions.push(localctx._osVersion);
							break;

					}
					this.state = 1389;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
				}
				this.state = 1390;
				this.match(ObjectiveCParser.RP);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	arrayInitializer() {
		let localctx = new ArrayInitializerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 214, ObjectiveCParser.RULE_arrayInitializer);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1394;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 1399;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 1395;
				this.expressions();
				this.state = 1397;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === ObjectiveCParser.COMMA) {
					this.state = 1396;
					this.match(ObjectiveCParser.COMMA);
				}

			}

			this.state = 1401;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	structInitializer() {
		let localctx = new StructInitializerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 216, ObjectiveCParser.RULE_structInitializer);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1403;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 1417;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.DOT) {
				this.state = 1404;
				this.match(ObjectiveCParser.DOT);
				this.state = 1405;
				this.expression(0);
				this.state = 1411;
				this._errHandler.sync(this);
				let _alt = this._interp.adaptivePredict(this._input, 193, this._ctx)
				while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
					if (_alt === 1) {
						this.state = 1406;
						this.match(ObjectiveCParser.COMMA);
						this.state = 1407;
						this.match(ObjectiveCParser.DOT);
						this.state = 1408;
						this.expression(0);
					}
					this.state = 1413;
					this._errHandler.sync(this);
					_alt = this._interp.adaptivePredict(this._input, 193, this._ctx);
				}

				this.state = 1415;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === ObjectiveCParser.COMMA) {
					this.state = 1414;
					this.match(ObjectiveCParser.COMMA);
				}

			}

			this.state = 1419;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	initializerList() {
		let localctx = new InitializerListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 218, ObjectiveCParser.RULE_initializerList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1421;
			this.initializer();
			this.state = 1426;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 196, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1422;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1423;
					this.initializer();
				}
				this.state = 1428;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 196, this._ctx);
			}

			this.state = 1430;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.COMMA) {
				this.state = 1429;
				this.match(ObjectiveCParser.COMMA);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	typeName() {
		let localctx = new TypeNameContext(this, this._ctx, this.state);
		this.enterRule(localctx, 220, ObjectiveCParser.RULE_typeName);
		var _la = 0; // Token type
		try {
			this.state = 1438;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 199, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1432;
					this.specifierQualifierList();
					this.state = 1434;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 137)) & ~0x1f) == 0 && ((1 << (_la - 137)) & ((1 << (ObjectiveCParser.LP - 137)) | (1 << (ObjectiveCParser.LBRACK - 137)) | (1 << (ObjectiveCParser.MUL - 137)))) !== 0)) {
						this.state = 1433;
						this.abstractDeclarator();
					}

					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1436;
					this.blockType();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1437;
					this.functionPointer();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	abstractDeclarator() {
		let localctx = new AbstractDeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 222, ObjectiveCParser.RULE_abstractDeclarator);
		var _la = 0; // Token type
		try {
			this.state = 1463;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.MUL:
					this.enterOuterAlt(localctx, 1);
					this.state = 1440;
					this.pointer();
					this.state = 1442;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 137)) & ~0x1f) == 0 && ((1 << (_la - 137)) & ((1 << (ObjectiveCParser.LP - 137)) | (1 << (ObjectiveCParser.LBRACK - 137)) | (1 << (ObjectiveCParser.MUL - 137)))) !== 0)) {
						this.state = 1441;
						this.abstractDeclarator();
					}

					break;
				case ObjectiveCParser.LP:
					this.enterOuterAlt(localctx, 2);
					this.state = 1444;
					this.match(ObjectiveCParser.LP);
					this.state = 1446;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 137)) & ~0x1f) == 0 && ((1 << (_la - 137)) & ((1 << (ObjectiveCParser.LP - 137)) | (1 << (ObjectiveCParser.LBRACK - 137)) | (1 << (ObjectiveCParser.MUL - 137)))) !== 0)) {
						this.state = 1445;
						this.abstractDeclarator();
					}

					this.state = 1448;
					this.match(ObjectiveCParser.RP);
					this.state = 1450;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 1449;
						this.abstractDeclaratorSuffix();
						this.state = 1452;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while (_la === ObjectiveCParser.LP || _la === ObjectiveCParser.LBRACK);
					break;
				case ObjectiveCParser.LBRACK:
					this.enterOuterAlt(localctx, 3);
					this.state = 1459;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 1454;
						this.match(ObjectiveCParser.LBRACK);
						this.state = 1456;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						if (((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (ObjectiveCParser.TRUE - 38)) | (1 << (ObjectiveCParser.FALSE - 38)) | (1 << (ObjectiveCParser.BOOL - 38)) | (1 << (ObjectiveCParser.Class - 38)) | (1 << (ObjectiveCParser.BYCOPY - 38)) | (1 << (ObjectiveCParser.BYREF - 38)) | (1 << (ObjectiveCParser.ID - 38)) | (1 << (ObjectiveCParser.IMP - 38)) | (1 << (ObjectiveCParser.IN - 38)) | (1 << (ObjectiveCParser.INOUT - 38)) | (1 << (ObjectiveCParser.NIL - 38)) | (1 << (ObjectiveCParser.NO - 38)) | (1 << (ObjectiveCParser.NULL - 38)) | (1 << (ObjectiveCParser.ONEWAY - 38)) | (1 << (ObjectiveCParser.OUT - 38)) | (1 << (ObjectiveCParser.PROTOCOL_ - 38)) | (1 << (ObjectiveCParser.SEL - 38)) | (1 << (ObjectiveCParser.SELF - 38)) | (1 << (ObjectiveCParser.SUPER - 38)) | (1 << (ObjectiveCParser.YES - 38)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || ((((_la - 163)) & ~0x1f) == 0 && ((1 << (_la - 163)) & ((1 << (ObjectiveCParser.ADD - 163)) | (1 << (ObjectiveCParser.SUB - 163)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 163)) | (1 << (ObjectiveCParser.HEX_LITERAL - 163)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 163)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 163)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 163)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 163)))) !== 0)) {
							this.state = 1455;
							this.constantExpression();
						}

						this.state = 1458;
						this.match(ObjectiveCParser.RBRACK);
						this.state = 1461;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while (_la === ObjectiveCParser.LBRACK);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	abstractDeclaratorSuffix() {
		let localctx = new AbstractDeclaratorSuffixContext(this, this._ctx, this.state);
		this.enterRule(localctx, 224, ObjectiveCParser.RULE_abstractDeclaratorSuffix);
		var _la = 0; // Token type
		try {
			this.state = 1475;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.LBRACK:
					this.enterOuterAlt(localctx, 1);
					this.state = 1465;
					this.match(ObjectiveCParser.LBRACK);
					this.state = 1467;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (ObjectiveCParser.TRUE - 38)) | (1 << (ObjectiveCParser.FALSE - 38)) | (1 << (ObjectiveCParser.BOOL - 38)) | (1 << (ObjectiveCParser.Class - 38)) | (1 << (ObjectiveCParser.BYCOPY - 38)) | (1 << (ObjectiveCParser.BYREF - 38)) | (1 << (ObjectiveCParser.ID - 38)) | (1 << (ObjectiveCParser.IMP - 38)) | (1 << (ObjectiveCParser.IN - 38)) | (1 << (ObjectiveCParser.INOUT - 38)) | (1 << (ObjectiveCParser.NIL - 38)) | (1 << (ObjectiveCParser.NO - 38)) | (1 << (ObjectiveCParser.NULL - 38)) | (1 << (ObjectiveCParser.ONEWAY - 38)) | (1 << (ObjectiveCParser.OUT - 38)) | (1 << (ObjectiveCParser.PROTOCOL_ - 38)) | (1 << (ObjectiveCParser.SEL - 38)) | (1 << (ObjectiveCParser.SELF - 38)) | (1 << (ObjectiveCParser.SUPER - 38)) | (1 << (ObjectiveCParser.YES - 38)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0) || ((((_la - 163)) & ~0x1f) == 0 && ((1 << (_la - 163)) & ((1 << (ObjectiveCParser.ADD - 163)) | (1 << (ObjectiveCParser.SUB - 163)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 163)) | (1 << (ObjectiveCParser.HEX_LITERAL - 163)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 163)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 163)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 163)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 163)))) !== 0)) {
						this.state = 1466;
						this.constantExpression();
					}

					this.state = 1469;
					this.match(ObjectiveCParser.RBRACK);
					break;
				case ObjectiveCParser.LP:
					this.enterOuterAlt(localctx, 2);
					this.state = 1470;
					this.match(ObjectiveCParser.LP);
					this.state = 1472;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.ATTRIBUTE - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 81)) | (1 << (ObjectiveCParser.TYPEOF - 81)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 81)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0)) {
						this.state = 1471;
						this.parameterDeclarationList();
					}

					this.state = 1474;
					this.match(ObjectiveCParser.RP);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	parameterDeclarationList() {
		let localctx = new ParameterDeclarationListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 226, ObjectiveCParser.RULE_parameterDeclarationList);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1477;
			this.parameterDeclaration();
			this.state = 1482;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 209, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1478;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1479;
					this.parameterDeclaration();
				}
				this.state = 1484;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 209, this._ctx);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	parameterDeclaration() {
		let localctx = new ParameterDeclarationContext(this, this._ctx, this.state);
		this.enterRule(localctx, 228, ObjectiveCParser.RULE_parameterDeclaration);
		var _la = 0; // Token type
		try {
			this.state = 1491;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 211, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1485;
					this.declarationSpecifiers();
					this.state = 1487;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)) | (1 << (ObjectiveCParser.LP - 113)))) !== 0) || _la === ObjectiveCParser.MUL) {
						this.state = 1486;
						this.declarator();
					}

					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1489;
					this.match(ObjectiveCParser.VOID);
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1490;
					this.functionPointer();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	declarator() {
		let localctx = new DeclaratorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 230, ObjectiveCParser.RULE_declarator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1494;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.MUL) {
				this.state = 1493;
				this.pointer();
			}

			this.state = 1496;
			this.directDeclarator();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	statement() {
		let localctx = new StatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 232, ObjectiveCParser.RULE_statement);
		try {
			this.state = 1539;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 223, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1498;
					this.labeledStatement();
					this.state = 1500;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 213, this._ctx);
					if (la_ === 1) {
						this.state = 1499;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1502;
					this.compoundStatement();
					this.state = 1504;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 214, this._ctx);
					if (la_ === 1) {
						this.state = 1503;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1506;
					this.selectionStatement();
					this.state = 1508;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 215, this._ctx);
					if (la_ === 1) {
						this.state = 1507;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1510;
					this.iterationStatement();
					this.state = 1512;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 216, this._ctx);
					if (la_ === 1) {
						this.state = 1511;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 5:
					this.enterOuterAlt(localctx, 5);
					this.state = 1514;
					this.jumpStatement();
					this.state = 1516;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 217, this._ctx);
					if (la_ === 1) {
						this.state = 1515;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 6:
					this.enterOuterAlt(localctx, 6);
					this.state = 1518;
					this.synchronizedStatement();
					this.state = 1520;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 218, this._ctx);
					if (la_ === 1) {
						this.state = 1519;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 7:
					this.enterOuterAlt(localctx, 7);
					this.state = 1522;
					this.autoreleaseStatement();
					this.state = 1524;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 219, this._ctx);
					if (la_ === 1) {
						this.state = 1523;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 8:
					this.enterOuterAlt(localctx, 8);
					this.state = 1526;
					this.throwStatement();
					this.state = 1528;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 220, this._ctx);
					if (la_ === 1) {
						this.state = 1527;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 9:
					this.enterOuterAlt(localctx, 9);
					this.state = 1530;
					this.tryBlock();
					this.state = 1532;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 221, this._ctx);
					if (la_ === 1) {
						this.state = 1531;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 10:
					this.enterOuterAlt(localctx, 10);
					this.state = 1534;
					this.expressions();
					this.state = 1536;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 222, this._ctx);
					if (la_ === 1) {
						this.state = 1535;
						this.match(ObjectiveCParser.SEMI);

					}
					break;

				case 11:
					this.enterOuterAlt(localctx, 11);
					this.state = 1538;
					this.match(ObjectiveCParser.SEMI);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	labeledStatement() {
		let localctx = new LabeledStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 234, ObjectiveCParser.RULE_labeledStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1541;
			this.identifier();
			this.state = 1542;
			this.match(ObjectiveCParser.COLON);
			this.state = 1543;
			this.statement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	rangeExpression() {
		let localctx = new RangeExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 236, ObjectiveCParser.RULE_rangeExpression);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1545;
			this.constantExpression();
			this.state = 1548;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.ELIPSIS) {
				this.state = 1546;
				this.match(ObjectiveCParser.ELIPSIS);
				this.state = 1547;
				this.constantExpression();
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	compoundStatement() {
		let localctx = new CompoundStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 238, ObjectiveCParser.RULE_compoundStatement);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1550;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 1555;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.BREAK) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.CONTINUE) | (1 << ObjectiveCParser.DO) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.FOR) | (1 << ObjectiveCParser.GOTO) | (1 << ObjectiveCParser.IF) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.RETURN) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.SIZEOF) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.SWITCH) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.WHILE - 32)) | (1 << (ObjectiveCParser.TRUE - 32)) | (1 << (ObjectiveCParser.FALSE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.NIL - 32)) | (1 << (ObjectiveCParser.NO - 32)) | (1 << (ObjectiveCParser.NULL - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.YES - 32)) | (1 << (ObjectiveCParser.AUTORELEASEPOOL - 32)) | (1 << (ObjectiveCParser.ENCODE - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (ObjectiveCParser.PROTOCOL - 69)) | (1 << (ObjectiveCParser.SELECTOR - 69)) | (1 << (ObjectiveCParser.SYNCHRONIZED - 69)) | (1 << (ObjectiveCParser.THROW - 69)) | (1 << (ObjectiveCParser.TRY - 69)) | (1 << (ObjectiveCParser.ATOMIC - 69)) | (1 << (ObjectiveCParser.NONATOMIC - 69)) | (1 << (ObjectiveCParser.RETAIN - 69)) | (1 << (ObjectiveCParser.ATTRIBUTE - 69)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 69)) | (1 << (ObjectiveCParser.BLOCK - 69)) | (1 << (ObjectiveCParser.BRIDGE - 69)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 69)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 69)) | (1 << (ObjectiveCParser.COVARIANT - 69)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 69)) | (1 << (ObjectiveCParser.DEPRECATED - 69)) | (1 << (ObjectiveCParser.KINDOF - 69)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 69)) | (1 << (ObjectiveCParser.TYPEOF - 69)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 69)) | (1 << (ObjectiveCParser.UNUSED - 69)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 69)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 69)) | (1 << (ObjectiveCParser.NULLABLE - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (ObjectiveCParser.NONNULL - 101)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 101)) | (1 << (ObjectiveCParser.NS_INLINE - 101)) | (1 << (ObjectiveCParser.NS_ENUM - 101)) | (1 << (ObjectiveCParser.NS_OPTIONS - 101)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 101)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 101)) | (1 << (ObjectiveCParser.ASSIGN - 101)) | (1 << (ObjectiveCParser.COPY - 101)) | (1 << (ObjectiveCParser.GETTER - 101)) | (1 << (ObjectiveCParser.SETTER - 101)) | (1 << (ObjectiveCParser.STRONG - 101)) | (1 << (ObjectiveCParser.READONLY - 101)) | (1 << (ObjectiveCParser.READWRITE - 101)) | (1 << (ObjectiveCParser.WEAK - 101)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 101)) | (1 << (ObjectiveCParser.IB_OUTLET - 101)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 101)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 101)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 101)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.LP - 136)) | (1 << (ObjectiveCParser.LBRACE - 136)) | (1 << (ObjectiveCParser.LBRACK - 136)) | (1 << (ObjectiveCParser.SEMI - 136)) | (1 << (ObjectiveCParser.AT - 136)) | (1 << (ObjectiveCParser.BANG - 136)) | (1 << (ObjectiveCParser.TILDE - 136)) | (1 << (ObjectiveCParser.INC - 136)) | (1 << (ObjectiveCParser.DEC - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)) | (1 << (ObjectiveCParser.MUL - 136)) | (1 << (ObjectiveCParser.BITAND - 136)))) !== 0) || ((((_la - 169)) & ~0x1f) == 0 && ((1 << (_la - 169)) & ((1 << (ObjectiveCParser.BITXOR - 169)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 169)) | (1 << (ObjectiveCParser.STRING_START - 169)) | (1 << (ObjectiveCParser.HEX_LITERAL - 169)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 169)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 169)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 169)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 169)))) !== 0)) {
				this.state = 1553;
				this._errHandler.sync(this);
				var la_ = this._interp.adaptivePredict(this._input, 225, this._ctx);
				switch (la_) {
					case 1:
						this.state = 1551;
						this.declaration();
						break;

					case 2:
						this.state = 1552;
						this.statement();
						break;

				}
				this.state = 1557;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1558;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	selectionStatement() {
		let localctx = new SelectionStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 240, ObjectiveCParser.RULE_selectionStatement);
		try {
			this.state = 1570;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.IF:
					this.enterOuterAlt(localctx, 1);
					this.state = 1560;
					this.match(ObjectiveCParser.IF);
					this.state = 1561;
					this.match(ObjectiveCParser.LP);
					this.state = 1562;
					this.expression(0);
					this.state = 1563;
					this.match(ObjectiveCParser.RP);
					this.state = 1564;
					localctx.ifBody = this.statement();
					this.state = 1567;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 227, this._ctx);
					if (la_ === 1) {
						this.state = 1565;
						this.match(ObjectiveCParser.ELSE);
						this.state = 1566;
						localctx.elseBody = this.statement();

					}
					break;
				case ObjectiveCParser.SWITCH:
					this.enterOuterAlt(localctx, 2);
					this.state = 1569;
					this.switchStatement();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	switchStatement() {
		let localctx = new SwitchStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 242, ObjectiveCParser.RULE_switchStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1572;
			this.match(ObjectiveCParser.SWITCH);
			this.state = 1573;
			this.match(ObjectiveCParser.LP);
			this.state = 1574;
			this.expression(0);
			this.state = 1575;
			this.match(ObjectiveCParser.RP);
			this.state = 1576;
			this.switchBlock();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	switchBlock() {
		let localctx = new SwitchBlockContext(this, this._ctx, this.state);
		this.enterRule(localctx, 244, ObjectiveCParser.RULE_switchBlock);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1578;
			this.match(ObjectiveCParser.LBRACE);
			this.state = 1582;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.CASE || _la === ObjectiveCParser.DEFAULT) {
				this.state = 1579;
				this.switchSection();
				this.state = 1584;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
			this.state = 1585;
			this.match(ObjectiveCParser.RBRACE);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	switchSection() {
		let localctx = new SwitchSectionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 246, ObjectiveCParser.RULE_switchSection);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1588;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			do {
				this.state = 1587;
				this.switchLabel();
				this.state = 1590;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			} while (_la === ObjectiveCParser.CASE || _la === ObjectiveCParser.DEFAULT);
			this.state = 1593;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			do {
				this.state = 1592;
				this.statement();
				this.state = 1595;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			} while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.BREAK) | (1 << ObjectiveCParser.CONTINUE) | (1 << ObjectiveCParser.DO) | (1 << ObjectiveCParser.FOR) | (1 << ObjectiveCParser.GOTO) | (1 << ObjectiveCParser.IF) | (1 << ObjectiveCParser.RETURN) | (1 << ObjectiveCParser.SIZEOF) | (1 << ObjectiveCParser.SWITCH))) !== 0) || ((((_la - 34)) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (ObjectiveCParser.WHILE - 34)) | (1 << (ObjectiveCParser.TRUE - 34)) | (1 << (ObjectiveCParser.FALSE - 34)) | (1 << (ObjectiveCParser.BOOL - 34)) | (1 << (ObjectiveCParser.Class - 34)) | (1 << (ObjectiveCParser.BYCOPY - 34)) | (1 << (ObjectiveCParser.BYREF - 34)) | (1 << (ObjectiveCParser.ID - 34)) | (1 << (ObjectiveCParser.IMP - 34)) | (1 << (ObjectiveCParser.IN - 34)) | (1 << (ObjectiveCParser.INOUT - 34)) | (1 << (ObjectiveCParser.NIL - 34)) | (1 << (ObjectiveCParser.NO - 34)) | (1 << (ObjectiveCParser.NULL - 34)) | (1 << (ObjectiveCParser.ONEWAY - 34)) | (1 << (ObjectiveCParser.OUT - 34)) | (1 << (ObjectiveCParser.PROTOCOL_ - 34)) | (1 << (ObjectiveCParser.SEL - 34)) | (1 << (ObjectiveCParser.SELF - 34)) | (1 << (ObjectiveCParser.SUPER - 34)) | (1 << (ObjectiveCParser.YES - 34)) | (1 << (ObjectiveCParser.AUTORELEASEPOOL - 34)) | (1 << (ObjectiveCParser.ENCODE - 34)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (ObjectiveCParser.PROTOCOL - 69)) | (1 << (ObjectiveCParser.SELECTOR - 69)) | (1 << (ObjectiveCParser.SYNCHRONIZED - 69)) | (1 << (ObjectiveCParser.THROW - 69)) | (1 << (ObjectiveCParser.TRY - 69)) | (1 << (ObjectiveCParser.ATOMIC - 69)) | (1 << (ObjectiveCParser.NONATOMIC - 69)) | (1 << (ObjectiveCParser.RETAIN - 69)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 69)) | (1 << (ObjectiveCParser.BLOCK - 69)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 69)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 69)) | (1 << (ObjectiveCParser.COVARIANT - 69)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 69)) | (1 << (ObjectiveCParser.DEPRECATED - 69)) | (1 << (ObjectiveCParser.KINDOF - 69)) | (1 << (ObjectiveCParser.UNUSED - 69)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 69)) | (1 << (ObjectiveCParser.NULLABLE - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (ObjectiveCParser.NONNULL - 101)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 101)) | (1 << (ObjectiveCParser.NS_INLINE - 101)) | (1 << (ObjectiveCParser.NS_ENUM - 101)) | (1 << (ObjectiveCParser.NS_OPTIONS - 101)) | (1 << (ObjectiveCParser.ASSIGN - 101)) | (1 << (ObjectiveCParser.COPY - 101)) | (1 << (ObjectiveCParser.GETTER - 101)) | (1 << (ObjectiveCParser.SETTER - 101)) | (1 << (ObjectiveCParser.STRONG - 101)) | (1 << (ObjectiveCParser.READONLY - 101)) | (1 << (ObjectiveCParser.READWRITE - 101)) | (1 << (ObjectiveCParser.WEAK - 101)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 101)) | (1 << (ObjectiveCParser.IB_OUTLET - 101)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 101)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 101)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 101)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.LP - 136)) | (1 << (ObjectiveCParser.LBRACE - 136)) | (1 << (ObjectiveCParser.LBRACK - 136)) | (1 << (ObjectiveCParser.SEMI - 136)) | (1 << (ObjectiveCParser.AT - 136)) | (1 << (ObjectiveCParser.BANG - 136)) | (1 << (ObjectiveCParser.TILDE - 136)) | (1 << (ObjectiveCParser.INC - 136)) | (1 << (ObjectiveCParser.DEC - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)) | (1 << (ObjectiveCParser.MUL - 136)) | (1 << (ObjectiveCParser.BITAND - 136)))) !== 0) || ((((_la - 169)) & ~0x1f) == 0 && ((1 << (_la - 169)) & ((1 << (ObjectiveCParser.BITXOR - 169)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 169)) | (1 << (ObjectiveCParser.STRING_START - 169)) | (1 << (ObjectiveCParser.HEX_LITERAL - 169)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 169)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 169)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 169)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 169)))) !== 0));
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	switchLabel() {
		let localctx = new SwitchLabelContext(this, this._ctx, this.state);
		this.enterRule(localctx, 248, ObjectiveCParser.RULE_switchLabel);
		try {
			this.state = 1609;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.CASE:
					this.enterOuterAlt(localctx, 1);
					this.state = 1597;
					this.match(ObjectiveCParser.CASE);
					this.state = 1603;
					this._errHandler.sync(this);
					switch (this._input.LA(1)) {
						case ObjectiveCParser.TRUE:
						case ObjectiveCParser.FALSE:
						case ObjectiveCParser.BOOL:
						case ObjectiveCParser.Class:
						case ObjectiveCParser.BYCOPY:
						case ObjectiveCParser.BYREF:
						case ObjectiveCParser.ID:
						case ObjectiveCParser.IMP:
						case ObjectiveCParser.IN:
						case ObjectiveCParser.INOUT:
						case ObjectiveCParser.NIL:
						case ObjectiveCParser.NO:
						case ObjectiveCParser.NULL:
						case ObjectiveCParser.ONEWAY:
						case ObjectiveCParser.OUT:
						case ObjectiveCParser.PROTOCOL_:
						case ObjectiveCParser.SEL:
						case ObjectiveCParser.SELF:
						case ObjectiveCParser.SUPER:
						case ObjectiveCParser.YES:
						case ObjectiveCParser.ATOMIC:
						case ObjectiveCParser.NONATOMIC:
						case ObjectiveCParser.RETAIN:
						case ObjectiveCParser.AUTORELEASING_QUALIFIER:
						case ObjectiveCParser.BLOCK:
						case ObjectiveCParser.BRIDGE_RETAINED:
						case ObjectiveCParser.BRIDGE_TRANSFER:
						case ObjectiveCParser.COVARIANT:
						case ObjectiveCParser.CONTRAVARIANT:
						case ObjectiveCParser.DEPRECATED:
						case ObjectiveCParser.KINDOF:
						case ObjectiveCParser.UNUSED:
						case ObjectiveCParser.NULL_UNSPECIFIED:
						case ObjectiveCParser.NULLABLE:
						case ObjectiveCParser.NONNULL:
						case ObjectiveCParser.NULL_RESETTABLE:
						case ObjectiveCParser.NS_INLINE:
						case ObjectiveCParser.NS_ENUM:
						case ObjectiveCParser.NS_OPTIONS:
						case ObjectiveCParser.ASSIGN:
						case ObjectiveCParser.COPY:
						case ObjectiveCParser.GETTER:
						case ObjectiveCParser.SETTER:
						case ObjectiveCParser.STRONG:
						case ObjectiveCParser.READONLY:
						case ObjectiveCParser.READWRITE:
						case ObjectiveCParser.WEAK:
						case ObjectiveCParser.UNSAFE_UNRETAINED:
						case ObjectiveCParser.IB_OUTLET:
						case ObjectiveCParser.IB_OUTLET_COLLECTION:
						case ObjectiveCParser.IB_INSPECTABLE:
						case ObjectiveCParser.IB_DESIGNABLE:
						case ObjectiveCParser.IDENTIFIER:
						case ObjectiveCParser.ADD:
						case ObjectiveCParser.SUB:
						case ObjectiveCParser.CHARACTER_LITERAL:
						case ObjectiveCParser.HEX_LITERAL:
						case ObjectiveCParser.OCTAL_LITERAL:
						case ObjectiveCParser.BINARY_LITERAL:
						case ObjectiveCParser.DECIMAL_LITERAL:
						case ObjectiveCParser.FLOATING_POINT_LITERAL:
							this.state = 1598;
							this.rangeExpression();
							break;
						case ObjectiveCParser.LP:
							this.state = 1599;
							this.match(ObjectiveCParser.LP);
							this.state = 1600;
							this.rangeExpression();
							this.state = 1601;
							this.match(ObjectiveCParser.RP);
							break;
						default:
							throw new antlr4.error.NoViableAltException(this);
					}
					this.state = 1605;
					this.match(ObjectiveCParser.COLON);
					break;
				case ObjectiveCParser.DEFAULT:
					this.enterOuterAlt(localctx, 2);
					this.state = 1607;
					this.match(ObjectiveCParser.DEFAULT);
					this.state = 1608;
					this.match(ObjectiveCParser.COLON);
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	iterationStatement() {
		let localctx = new IterationStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 250, ObjectiveCParser.RULE_iterationStatement);
		try {
			this.state = 1615;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 234, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1611;
					this.whileStatement();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1612;
					this.doStatement();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1613;
					this.forStatement();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1614;
					this.forInStatement();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	whileStatement() {
		let localctx = new WhileStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 252, ObjectiveCParser.RULE_whileStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1617;
			this.match(ObjectiveCParser.WHILE);
			this.state = 1618;
			this.match(ObjectiveCParser.LP);
			this.state = 1619;
			this.expression(0);
			this.state = 1620;
			this.match(ObjectiveCParser.RP);
			this.state = 1621;
			this.statement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	doStatement() {
		let localctx = new DoStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 254, ObjectiveCParser.RULE_doStatement);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1623;
			this.match(ObjectiveCParser.DO);
			this.state = 1624;
			this.statement();
			this.state = 1625;
			this.match(ObjectiveCParser.WHILE);
			this.state = 1626;
			this.match(ObjectiveCParser.LP);
			this.state = 1627;
			this.expression(0);
			this.state = 1628;
			this.match(ObjectiveCParser.RP);
			this.state = 1629;
			this.match(ObjectiveCParser.SEMI);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	forStatement() {
		let localctx = new ForStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 256, ObjectiveCParser.RULE_forStatement);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1631;
			this.match(ObjectiveCParser.FOR);
			this.state = 1632;
			this.match(ObjectiveCParser.LP);
			this.state = 1634;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.SIZEOF) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.TRUE - 32)) | (1 << (ObjectiveCParser.FALSE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.NIL - 32)) | (1 << (ObjectiveCParser.NO - 32)) | (1 << (ObjectiveCParser.NULL - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.YES - 32)) | (1 << (ObjectiveCParser.ENCODE - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (ObjectiveCParser.PROTOCOL - 69)) | (1 << (ObjectiveCParser.SELECTOR - 69)) | (1 << (ObjectiveCParser.ATOMIC - 69)) | (1 << (ObjectiveCParser.NONATOMIC - 69)) | (1 << (ObjectiveCParser.RETAIN - 69)) | (1 << (ObjectiveCParser.ATTRIBUTE - 69)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 69)) | (1 << (ObjectiveCParser.BLOCK - 69)) | (1 << (ObjectiveCParser.BRIDGE - 69)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 69)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 69)) | (1 << (ObjectiveCParser.COVARIANT - 69)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 69)) | (1 << (ObjectiveCParser.DEPRECATED - 69)) | (1 << (ObjectiveCParser.KINDOF - 69)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 69)) | (1 << (ObjectiveCParser.TYPEOF - 69)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 69)) | (1 << (ObjectiveCParser.UNUSED - 69)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 69)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 69)) | (1 << (ObjectiveCParser.NULLABLE - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (ObjectiveCParser.NONNULL - 101)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 101)) | (1 << (ObjectiveCParser.NS_INLINE - 101)) | (1 << (ObjectiveCParser.NS_ENUM - 101)) | (1 << (ObjectiveCParser.NS_OPTIONS - 101)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 101)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 101)) | (1 << (ObjectiveCParser.ASSIGN - 101)) | (1 << (ObjectiveCParser.COPY - 101)) | (1 << (ObjectiveCParser.GETTER - 101)) | (1 << (ObjectiveCParser.SETTER - 101)) | (1 << (ObjectiveCParser.STRONG - 101)) | (1 << (ObjectiveCParser.READONLY - 101)) | (1 << (ObjectiveCParser.READWRITE - 101)) | (1 << (ObjectiveCParser.WEAK - 101)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 101)) | (1 << (ObjectiveCParser.IB_OUTLET - 101)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 101)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 101)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 101)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.LP - 136)) | (1 << (ObjectiveCParser.LBRACK - 136)) | (1 << (ObjectiveCParser.AT - 136)) | (1 << (ObjectiveCParser.BANG - 136)) | (1 << (ObjectiveCParser.TILDE - 136)) | (1 << (ObjectiveCParser.INC - 136)) | (1 << (ObjectiveCParser.DEC - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)) | (1 << (ObjectiveCParser.MUL - 136)) | (1 << (ObjectiveCParser.BITAND - 136)))) !== 0) || ((((_la - 169)) & ~0x1f) == 0 && ((1 << (_la - 169)) & ((1 << (ObjectiveCParser.BITXOR - 169)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 169)) | (1 << (ObjectiveCParser.STRING_START - 169)) | (1 << (ObjectiveCParser.HEX_LITERAL - 169)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 169)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 169)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 169)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 169)))) !== 0)) {
				this.state = 1633;
				this.forLoopInitializer();
			}

			this.state = 1636;
			this.match(ObjectiveCParser.SEMI);
			this.state = 1638;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 1637;
				this.expression(0);
			}

			this.state = 1640;
			this.match(ObjectiveCParser.SEMI);
			this.state = 1642;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 1641;
				this.expressions();
			}

			this.state = 1644;
			this.match(ObjectiveCParser.RP);
			this.state = 1645;
			this.statement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	forLoopInitializer() {
		let localctx = new ForLoopInitializerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 258, ObjectiveCParser.RULE_forLoopInitializer);
		try {
			this.state = 1651;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 238, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1647;
					this.declarationSpecifiers();
					this.state = 1648;
					this.initDeclaratorList();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1650;
					this.expressions();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	forInStatement() {
		let localctx = new ForInStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 260, ObjectiveCParser.RULE_forInStatement);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1653;
			this.match(ObjectiveCParser.FOR);
			this.state = 1654;
			this.match(ObjectiveCParser.LP);
			this.state = 1655;
			this.typeVariableDeclarator();
			this.state = 1656;
			this.match(ObjectiveCParser.IN);
			this.state = 1658;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
				this.state = 1657;
				this.expression(0);
			}

			this.state = 1660;
			this.match(ObjectiveCParser.RP);
			this.state = 1661;
			this.statement();
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	jumpStatement() {
		let localctx = new JumpStatementContext(this, this._ctx, this.state);
		this.enterRule(localctx, 262, ObjectiveCParser.RULE_jumpStatement);
		try {
			this.state = 1671;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.GOTO:
					this.enterOuterAlt(localctx, 1);
					this.state = 1663;
					this.match(ObjectiveCParser.GOTO);
					this.state = 1664;
					this.identifier();
					break;
				case ObjectiveCParser.CONTINUE:
					this.enterOuterAlt(localctx, 2);
					this.state = 1665;
					this.match(ObjectiveCParser.CONTINUE);
					break;
				case ObjectiveCParser.BREAK:
					this.enterOuterAlt(localctx, 3);
					this.state = 1666;
					this.match(ObjectiveCParser.BREAK);
					break;
				case ObjectiveCParser.RETURN:
					this.enterOuterAlt(localctx, 4);
					this.state = 1667;
					this.match(ObjectiveCParser.RETURN);
					this.state = 1669;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 240, this._ctx);
					if (la_ === 1) {
						this.state = 1668;
						this.expression(0);

					}
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	expressions() {
		let localctx = new ExpressionsContext(this, this._ctx, this.state);
		this.enterRule(localctx, 264, ObjectiveCParser.RULE_expressions);
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1673;
			this.expression(0);
			this.state = 1678;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 242, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1674;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1675;
					this.expression(0);
				}
				this.state = 1680;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 242, this._ctx);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}


	expression(_p) {
		if (_p === undefined) {
			_p = 0;
		}
		const _parentctx = this._ctx;
		const _parentState = this.state;
		let localctx = new ExpressionContext(this, this._ctx, _parentState);
		let _prevctx = localctx;
		const _startState = 266;
		this.enterRecursionRule(localctx, 266, ObjectiveCParser.RULE_expression, _p);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1691;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 243, this._ctx);
			switch (la_) {
				case 1:
					this.state = 1682;
					this.castExpression();
					break;

				case 2:
					this.state = 1683;
					this.match(ObjectiveCParser.LP);
					this.state = 1684;
					this.compoundStatement();
					this.state = 1685;
					this.match(ObjectiveCParser.RP);
					break;

				case 3:
					this.state = 1687;
					this.unaryExpression();
					this.state = 1688;
					this.assignmentOperator();
					this.state = 1689;
					localctx.assignmentExpression = this.expression(1);
					break;

			}
			this._ctx.stop = this._input.LT(-1);
			this.state = 1737;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 247, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					if (this._parseListeners !== null) {
						this.triggerExitRuleEvent();
					}
					_prevctx = localctx;
					this.state = 1735;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 246, this._ctx);
					switch (la_) {
						case 1:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1693;
							if (!(this.precpred(this._ctx, 13))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 13)");
							}
							this.state = 1694;
							localctx.op = this._input.LT(1);
							_la = this._input.LA(1);
							if (!(((((_la - 165)) & ~0x1f) == 0 && ((1 << (_la - 165)) & ((1 << (ObjectiveCParser.MUL - 165)) | (1 << (ObjectiveCParser.DIV - 165)) | (1 << (ObjectiveCParser.MOD - 165)))) !== 0))) {
								localctx.op = this._errHandler.recoverInline(this);
							}
							else {
								this._errHandler.reportMatch(this);
								this.consume();
							}
							this.state = 1695;
							this.expression(14);
							break;

						case 2:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1696;
							if (!(this.precpred(this._ctx, 12))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
							}
							this.state = 1697;
							localctx.op = this._input.LT(1);
							_la = this._input.LA(1);
							if (!(_la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB)) {
								localctx.op = this._errHandler.recoverInline(this);
							}
							else {
								this._errHandler.reportMatch(this);
								this.consume();
							}
							this.state = 1698;
							this.expression(13);
							break;

						case 3:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1699;
							if (!(this.precpred(this._ctx, 11))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
							}
							this.state = 1704;
							this._errHandler.sync(this);
							switch (this._input.LA(1)) {
								case ObjectiveCParser.LT:
									this.state = 1700;
									this.match(ObjectiveCParser.LT);
									this.state = 1701;
									this.match(ObjectiveCParser.LT);
									break;
								case ObjectiveCParser.GT:
									this.state = 1702;
									this.match(ObjectiveCParser.GT);
									this.state = 1703;
									this.match(ObjectiveCParser.GT);
									break;
								default:
									throw new antlr4.error.NoViableAltException(this);
							}
							this.state = 1706;
							this.expression(12);
							break;

						case 4:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1707;
							if (!(this.precpred(this._ctx, 10))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
							}
							this.state = 1708;
							localctx.op = this._input.LT(1);
							_la = this._input.LA(1);
							if (!(((((_la - 149)) & ~0x1f) == 0 && ((1 << (_la - 149)) & ((1 << (ObjectiveCParser.GT - 149)) | (1 << (ObjectiveCParser.LT - 149)) | (1 << (ObjectiveCParser.LE - 149)) | (1 << (ObjectiveCParser.GE - 149)))) !== 0))) {
								localctx.op = this._errHandler.recoverInline(this);
							}
							else {
								this._errHandler.reportMatch(this);
								this.consume();
							}
							this.state = 1709;
							this.expression(11);
							break;

						case 5:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1710;
							if (!(this.precpred(this._ctx, 9))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
							}
							this.state = 1711;
							localctx.op = this._input.LT(1);
							_la = this._input.LA(1);
							if (!(_la === ObjectiveCParser.EQUAL || _la === ObjectiveCParser.NOTEQUAL)) {
								localctx.op = this._errHandler.recoverInline(this);
							}
							else {
								this._errHandler.reportMatch(this);
								this.consume();
							}
							this.state = 1712;
							this.expression(10);
							break;

						case 6:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1713;
							if (!(this.precpred(this._ctx, 8))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
							}
							this.state = 1714;
							localctx.op = this.match(ObjectiveCParser.BITAND);
							this.state = 1715;
							this.expression(9);
							break;

						case 7:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1716;
							if (!(this.precpred(this._ctx, 7))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
							}
							this.state = 1717;
							localctx.op = this.match(ObjectiveCParser.BITXOR);
							this.state = 1718;
							this.expression(8);
							break;

						case 8:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1719;
							if (!(this.precpred(this._ctx, 6))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
							}
							this.state = 1720;
							localctx.op = this.match(ObjectiveCParser.BITOR);
							this.state = 1721;
							this.expression(7);
							break;

						case 9:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1722;
							if (!(this.precpred(this._ctx, 5))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
							}
							this.state = 1723;
							localctx.op = this.match(ObjectiveCParser.AND);
							this.state = 1724;
							this.expression(6);
							break;

						case 10:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1725;
							if (!(this.precpred(this._ctx, 4))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
							}
							this.state = 1726;
							localctx.op = this.match(ObjectiveCParser.OR);
							this.state = 1727;
							this.expression(5);
							break;

						case 11:
							localctx = new ExpressionContext(this, _parentctx, _parentState);
							this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_expression);
							this.state = 1728;
							if (!(this.precpred(this._ctx, 3))) {
								throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
							}
							this.state = 1729;
							this.match(ObjectiveCParser.QUESTION);
							this.state = 1731;
							this._errHandler.sync(this);
							_la = this._input.LA(1);
							if (((((_la - 25)) & ~0x1f) == 0 && ((1 << (_la - 25)) & ((1 << (ObjectiveCParser.SIZEOF - 25)) | (1 << (ObjectiveCParser.TRUE - 25)) | (1 << (ObjectiveCParser.FALSE - 25)) | (1 << (ObjectiveCParser.BOOL - 25)) | (1 << (ObjectiveCParser.Class - 25)) | (1 << (ObjectiveCParser.BYCOPY - 25)) | (1 << (ObjectiveCParser.BYREF - 25)) | (1 << (ObjectiveCParser.ID - 25)) | (1 << (ObjectiveCParser.IMP - 25)) | (1 << (ObjectiveCParser.IN - 25)) | (1 << (ObjectiveCParser.INOUT - 25)) | (1 << (ObjectiveCParser.NIL - 25)) | (1 << (ObjectiveCParser.NO - 25)) | (1 << (ObjectiveCParser.NULL - 25)) | (1 << (ObjectiveCParser.ONEWAY - 25)) | (1 << (ObjectiveCParser.OUT - 25)) | (1 << (ObjectiveCParser.PROTOCOL_ - 25)) | (1 << (ObjectiveCParser.SEL - 25)) | (1 << (ObjectiveCParser.SELF - 25)) | (1 << (ObjectiveCParser.SUPER - 25)))) !== 0) || ((((_la - 57)) & ~0x1f) == 0 && ((1 << (_la - 57)) & ((1 << (ObjectiveCParser.YES - 57)) | (1 << (ObjectiveCParser.ENCODE - 57)) | (1 << (ObjectiveCParser.PROTOCOL - 57)) | (1 << (ObjectiveCParser.SELECTOR - 57)) | (1 << (ObjectiveCParser.ATOMIC - 57)) | (1 << (ObjectiveCParser.NONATOMIC - 57)) | (1 << (ObjectiveCParser.RETAIN - 57)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 57)) | (1 << (ObjectiveCParser.BLOCK - 57)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 57)))) !== 0) || ((((_la - 89)) & ~0x1f) == 0 && ((1 << (_la - 89)) & ((1 << (ObjectiveCParser.BRIDGE_TRANSFER - 89)) | (1 << (ObjectiveCParser.COVARIANT - 89)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 89)) | (1 << (ObjectiveCParser.DEPRECATED - 89)) | (1 << (ObjectiveCParser.KINDOF - 89)) | (1 << (ObjectiveCParser.UNUSED - 89)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 89)) | (1 << (ObjectiveCParser.NULLABLE - 89)) | (1 << (ObjectiveCParser.NONNULL - 89)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 89)) | (1 << (ObjectiveCParser.NS_INLINE - 89)) | (1 << (ObjectiveCParser.NS_ENUM - 89)) | (1 << (ObjectiveCParser.NS_OPTIONS - 89)) | (1 << (ObjectiveCParser.ASSIGN - 89)) | (1 << (ObjectiveCParser.COPY - 89)) | (1 << (ObjectiveCParser.GETTER - 89)) | (1 << (ObjectiveCParser.SETTER - 89)) | (1 << (ObjectiveCParser.STRONG - 89)) | (1 << (ObjectiveCParser.READONLY - 89)) | (1 << (ObjectiveCParser.READWRITE - 89)) | (1 << (ObjectiveCParser.WEAK - 89)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 89)) | (1 << (ObjectiveCParser.IB_OUTLET - 89)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 89)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 89)))) !== 0) || ((((_la - 121)) & ~0x1f) == 0 && ((1 << (_la - 121)) & ((1 << (ObjectiveCParser.IB_DESIGNABLE - 121)) | (1 << (ObjectiveCParser.IDENTIFIER - 121)) | (1 << (ObjectiveCParser.LP - 121)) | (1 << (ObjectiveCParser.LBRACK - 121)) | (1 << (ObjectiveCParser.AT - 121)) | (1 << (ObjectiveCParser.BANG - 121)) | (1 << (ObjectiveCParser.TILDE - 121)))) !== 0) || ((((_la - 161)) & ~0x1f) == 0 && ((1 << (_la - 161)) & ((1 << (ObjectiveCParser.INC - 161)) | (1 << (ObjectiveCParser.DEC - 161)) | (1 << (ObjectiveCParser.ADD - 161)) | (1 << (ObjectiveCParser.SUB - 161)) | (1 << (ObjectiveCParser.MUL - 161)) | (1 << (ObjectiveCParser.BITAND - 161)) | (1 << (ObjectiveCParser.BITXOR - 161)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 161)) | (1 << (ObjectiveCParser.STRING_START - 161)) | (1 << (ObjectiveCParser.HEX_LITERAL - 161)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 161)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 161)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 161)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 161)))) !== 0)) {
								this.state = 1730;
								localctx.trueExpression = this.expression(0);
							}

							this.state = 1733;
							this.match(ObjectiveCParser.COLON);
							this.state = 1734;
							localctx.falseExpression = this.expression(4);
							break;

					}
				}
				this.state = 1739;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 247, this._ctx);
			}

		} catch (error) {
			if (error instanceof antlr4.error.RecognitionException) {
				localctx.exception = error;
				this._errHandler.reportError(this, error);
				this._errHandler.recover(this, error);
			} else {
				throw error;
			}
		} finally {
			this.unrollRecursionContexts(_parentctx)
		}
		return localctx;
	}



	assignmentOperator() {
		let localctx = new AssignmentOperatorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 268, ObjectiveCParser.RULE_assignmentOperator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1740;
			_la = this._input.LA(1);
			if (!(((((_la - 148)) & ~0x1f) == 0 && ((1 << (_la - 148)) & ((1 << (ObjectiveCParser.ASSIGNMENT - 148)) | (1 << (ObjectiveCParser.ADD_ASSIGN - 148)) | (1 << (ObjectiveCParser.SUB_ASSIGN - 148)) | (1 << (ObjectiveCParser.MUL_ASSIGN - 148)) | (1 << (ObjectiveCParser.DIV_ASSIGN - 148)) | (1 << (ObjectiveCParser.AND_ASSIGN - 148)) | (1 << (ObjectiveCParser.OR_ASSIGN - 148)) | (1 << (ObjectiveCParser.XOR_ASSIGN - 148)) | (1 << (ObjectiveCParser.MOD_ASSIGN - 148)) | (1 << (ObjectiveCParser.LSHIFT_ASSIGN - 148)))) !== 0) || _la === ObjectiveCParser.RSHIFT_ASSIGN)) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	castExpression() {
		let localctx = new CastExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 270, ObjectiveCParser.RULE_castExpression);
		try {
			this.state = 1751;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 249, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1742;
					this.unaryExpression();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1743;
					this.match(ObjectiveCParser.LP);
					this.state = 1744;
					this.typeName();
					this.state = 1745;
					this.match(ObjectiveCParser.RP);
					this.state = 1749;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 248, this._ctx);
					switch (la_) {
						case 1:
							this.state = 1747;
							this.castExpression();
							break;

						case 2:
							this.state = 1748;
							this.initializer();
							break;

					}
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	initializer() {
		let localctx = new InitializerContext(this, this._ctx, this.state);
		this.enterRule(localctx, 272, ObjectiveCParser.RULE_initializer);
		try {
			this.state = 1756;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 250, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1753;
					this.expression(0);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1754;
					this.arrayInitializer();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1755;
					this.structInitializer();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	constantExpression() {
		let localctx = new ConstantExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 274, ObjectiveCParser.RULE_constantExpression);
		try {
			this.state = 1760;
			this._errHandler.sync(this);
			switch (this._input.LA(1)) {
				case ObjectiveCParser.BOOL:
				case ObjectiveCParser.Class:
				case ObjectiveCParser.BYCOPY:
				case ObjectiveCParser.BYREF:
				case ObjectiveCParser.ID:
				case ObjectiveCParser.IMP:
				case ObjectiveCParser.IN:
				case ObjectiveCParser.INOUT:
				case ObjectiveCParser.ONEWAY:
				case ObjectiveCParser.OUT:
				case ObjectiveCParser.PROTOCOL_:
				case ObjectiveCParser.SEL:
				case ObjectiveCParser.SELF:
				case ObjectiveCParser.SUPER:
				case ObjectiveCParser.ATOMIC:
				case ObjectiveCParser.NONATOMIC:
				case ObjectiveCParser.RETAIN:
				case ObjectiveCParser.AUTORELEASING_QUALIFIER:
				case ObjectiveCParser.BLOCK:
				case ObjectiveCParser.BRIDGE_RETAINED:
				case ObjectiveCParser.BRIDGE_TRANSFER:
				case ObjectiveCParser.COVARIANT:
				case ObjectiveCParser.CONTRAVARIANT:
				case ObjectiveCParser.DEPRECATED:
				case ObjectiveCParser.KINDOF:
				case ObjectiveCParser.UNUSED:
				case ObjectiveCParser.NULL_UNSPECIFIED:
				case ObjectiveCParser.NULLABLE:
				case ObjectiveCParser.NONNULL:
				case ObjectiveCParser.NULL_RESETTABLE:
				case ObjectiveCParser.NS_INLINE:
				case ObjectiveCParser.NS_ENUM:
				case ObjectiveCParser.NS_OPTIONS:
				case ObjectiveCParser.ASSIGN:
				case ObjectiveCParser.COPY:
				case ObjectiveCParser.GETTER:
				case ObjectiveCParser.SETTER:
				case ObjectiveCParser.STRONG:
				case ObjectiveCParser.READONLY:
				case ObjectiveCParser.READWRITE:
				case ObjectiveCParser.WEAK:
				case ObjectiveCParser.UNSAFE_UNRETAINED:
				case ObjectiveCParser.IB_OUTLET:
				case ObjectiveCParser.IB_OUTLET_COLLECTION:
				case ObjectiveCParser.IB_INSPECTABLE:
				case ObjectiveCParser.IB_DESIGNABLE:
				case ObjectiveCParser.IDENTIFIER:
					this.enterOuterAlt(localctx, 1);
					this.state = 1758;
					this.identifier();
					break;
				case ObjectiveCParser.TRUE:
				case ObjectiveCParser.FALSE:
				case ObjectiveCParser.NIL:
				case ObjectiveCParser.NO:
				case ObjectiveCParser.NULL:
				case ObjectiveCParser.YES:
				case ObjectiveCParser.ADD:
				case ObjectiveCParser.SUB:
				case ObjectiveCParser.CHARACTER_LITERAL:
				case ObjectiveCParser.HEX_LITERAL:
				case ObjectiveCParser.OCTAL_LITERAL:
				case ObjectiveCParser.BINARY_LITERAL:
				case ObjectiveCParser.DECIMAL_LITERAL:
				case ObjectiveCParser.FLOATING_POINT_LITERAL:
					this.enterOuterAlt(localctx, 2);
					this.state = 1759;
					this.constant();
					break;
				default:
					throw new antlr4.error.NoViableAltException(this);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	unaryExpression() {
		let localctx = new UnaryExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 276, ObjectiveCParser.RULE_unaryExpression);
		var _la = 0; // Token type
		try {
			this.state = 1776;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 253, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1762;
					this.postfixExpression(0);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1763;
					this.match(ObjectiveCParser.SIZEOF);
					this.state = 1769;
					this._errHandler.sync(this);
					var la_ = this._interp.adaptivePredict(this._input, 252, this._ctx);
					switch (la_) {
						case 1:
							this.state = 1764;
							this.unaryExpression();
							break;

						case 2:
							this.state = 1765;
							this.match(ObjectiveCParser.LP);
							this.state = 1766;
							this.typeSpecifier();
							this.state = 1767;
							this.match(ObjectiveCParser.RP);
							break;

					}
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1771;
					localctx.op = this._input.LT(1);
					_la = this._input.LA(1);
					if (!(_la === ObjectiveCParser.INC || _la === ObjectiveCParser.DEC)) {
						localctx.op = this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
					this.state = 1772;
					this.unaryExpression();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1773;
					this.unaryOperator();
					this.state = 1774;
					this.castExpression();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	unaryOperator() {
		let localctx = new UnaryOperatorContext(this, this._ctx, this.state);
		this.enterRule(localctx, 278, ObjectiveCParser.RULE_unaryOperator);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1778;
			_la = this._input.LA(1);
			if (!(((((_la - 151)) & ~0x1f) == 0 && ((1 << (_la - 151)) & ((1 << (ObjectiveCParser.BANG - 151)) | (1 << (ObjectiveCParser.TILDE - 151)) | (1 << (ObjectiveCParser.ADD - 151)) | (1 << (ObjectiveCParser.SUB - 151)) | (1 << (ObjectiveCParser.MUL - 151)) | (1 << (ObjectiveCParser.BITAND - 151)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}


	postfixExpression(_p) {
		if (_p === undefined) {
			_p = 0;
		}
		const _parentctx = this._ctx;
		const _parentState = this.state;
		let localctx = new PostfixExpressionContext(this, this._ctx, _parentState);
		let _prevctx = localctx;
		const _startState = 280;
		this.enterRecursionRule(localctx, 280, ObjectiveCParser.RULE_postfixExpression, _p);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1781;
			this.primaryExpression();
			this.state = 1785;
			this._errHandler.sync(this);
			let _alt = this._interp.adaptivePredict(this._input, 254, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					this.state = 1782;
					this.postfix();
				}
				this.state = 1787;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 254, this._ctx);
			}

			this._ctx.stop = this._input.LT(-1);
			this.state = 1799;
			this._errHandler.sync(this);
			_alt = this._interp.adaptivePredict(this._input, 256, this._ctx)
			while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
				if (_alt === 1) {
					if (this._parseListeners !== null) {
						this.triggerExitRuleEvent();
					}
					_prevctx = localctx;
					localctx = new PostfixExpressionContext(this, _parentctx, _parentState);
					this.pushNewRecursionContext(localctx, _startState, ObjectiveCParser.RULE_postfixExpression);
					this.state = 1788;
					if (!(this.precpred(this._ctx, 1))) {
						throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
					}
					this.state = 1789;
					_la = this._input.LA(1);
					if (!(_la === ObjectiveCParser.DOT || _la === ObjectiveCParser.STRUCTACCESS)) {
						this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
					this.state = 1790;
					this.identifier();
					this.state = 1794;
					this._errHandler.sync(this);
					let _alt = this._interp.adaptivePredict(this._input, 255, this._ctx)
					while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
						if (_alt === 1) {
							this.state = 1791;
							this.postfix();
						}
						this.state = 1796;
						this._errHandler.sync(this);
						_alt = this._interp.adaptivePredict(this._input, 255, this._ctx);
					}

				}
				this.state = 1801;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 256, this._ctx);
			}

		} catch (error) {
			if (error instanceof antlr4.error.RecognitionException) {
				localctx.exception = error;
				this._errHandler.reportError(this, error);
				this._errHandler.recover(this, error);
			} else {
				throw error;
			}
		} finally {
			this.unrollRecursionContexts(_parentctx)
		}
		return localctx;
	}



	postfix() {
		let localctx = new PostfixContext(this, this._ctx, this.state);
		this.enterRule(localctx, 282, ObjectiveCParser.RULE_postfix);
		var _la = 0; // Token type
		try {
			this.state = 1820;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 260, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1802;
					this.match(ObjectiveCParser.LBRACK);
					this.state = 1803;
					this.expression(0);
					this.state = 1804;
					this.match(ObjectiveCParser.RBRACK);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1806;
					this.match(ObjectiveCParser.LP);
					this.state = 1808;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.SIZEOF) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.TRUE - 32)) | (1 << (ObjectiveCParser.FALSE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.NIL - 32)) | (1 << (ObjectiveCParser.NO - 32)) | (1 << (ObjectiveCParser.NULL - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.YES - 32)) | (1 << (ObjectiveCParser.ENCODE - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (ObjectiveCParser.PROTOCOL - 69)) | (1 << (ObjectiveCParser.SELECTOR - 69)) | (1 << (ObjectiveCParser.ATOMIC - 69)) | (1 << (ObjectiveCParser.NONATOMIC - 69)) | (1 << (ObjectiveCParser.RETAIN - 69)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 69)) | (1 << (ObjectiveCParser.BLOCK - 69)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 69)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 69)) | (1 << (ObjectiveCParser.COVARIANT - 69)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 69)) | (1 << (ObjectiveCParser.DEPRECATED - 69)) | (1 << (ObjectiveCParser.KINDOF - 69)) | (1 << (ObjectiveCParser.TYPEOF - 69)) | (1 << (ObjectiveCParser.UNUSED - 69)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 69)) | (1 << (ObjectiveCParser.NULLABLE - 69)))) !== 0) || ((((_la - 101)) & ~0x1f) == 0 && ((1 << (_la - 101)) & ((1 << (ObjectiveCParser.NONNULL - 101)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 101)) | (1 << (ObjectiveCParser.NS_INLINE - 101)) | (1 << (ObjectiveCParser.NS_ENUM - 101)) | (1 << (ObjectiveCParser.NS_OPTIONS - 101)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 101)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 101)) | (1 << (ObjectiveCParser.ASSIGN - 101)) | (1 << (ObjectiveCParser.COPY - 101)) | (1 << (ObjectiveCParser.GETTER - 101)) | (1 << (ObjectiveCParser.SETTER - 101)) | (1 << (ObjectiveCParser.STRONG - 101)) | (1 << (ObjectiveCParser.READONLY - 101)) | (1 << (ObjectiveCParser.READWRITE - 101)) | (1 << (ObjectiveCParser.WEAK - 101)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 101)) | (1 << (ObjectiveCParser.IB_OUTLET - 101)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 101)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 101)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 101)))) !== 0) || ((((_la - 136)) & ~0x1f) == 0 && ((1 << (_la - 136)) & ((1 << (ObjectiveCParser.IDENTIFIER - 136)) | (1 << (ObjectiveCParser.LP - 136)) | (1 << (ObjectiveCParser.LBRACK - 136)) | (1 << (ObjectiveCParser.AT - 136)) | (1 << (ObjectiveCParser.BANG - 136)) | (1 << (ObjectiveCParser.TILDE - 136)) | (1 << (ObjectiveCParser.INC - 136)) | (1 << (ObjectiveCParser.DEC - 136)) | (1 << (ObjectiveCParser.ADD - 136)) | (1 << (ObjectiveCParser.SUB - 136)) | (1 << (ObjectiveCParser.MUL - 136)) | (1 << (ObjectiveCParser.BITAND - 136)))) !== 0) || ((((_la - 169)) & ~0x1f) == 0 && ((1 << (_la - 169)) & ((1 << (ObjectiveCParser.BITXOR - 169)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 169)) | (1 << (ObjectiveCParser.STRING_START - 169)) | (1 << (ObjectiveCParser.HEX_LITERAL - 169)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 169)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 169)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 169)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 169)))) !== 0)) {
						this.state = 1807;
						this.argumentExpressionList();
					}

					this.state = 1810;
					this.match(ObjectiveCParser.RP);
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1811;
					this.match(ObjectiveCParser.LP);
					this.state = 1814;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					do {
						this.state = 1814;
						this._errHandler.sync(this);
						var la_ = this._interp.adaptivePredict(this._input, 258, this._ctx);
						switch (la_) {
							case 1:
								this.state = 1812;
								this.match(ObjectiveCParser.COMMA);
								break;

							case 2:
								this.state = 1813;
								localctx._tset3557 = this._input.LT(1);
								_la = this._input.LA(1);
								if (_la <= 0 || _la === ObjectiveCParser.RP) {
									localctx._tset3557 = this._errHandler.recoverInline(this);
								}
								else {
									this._errHandler.reportMatch(this);
									this.consume();
								}
								localctx.macroArguments.push(localctx._tset3557);
								break;

						}
						this.state = 1816;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
					} while ((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << ObjectiveCParser.AUTO) | (1 << ObjectiveCParser.BREAK) | (1 << ObjectiveCParser.CASE) | (1 << ObjectiveCParser.CHAR) | (1 << ObjectiveCParser.CONST) | (1 << ObjectiveCParser.CONTINUE) | (1 << ObjectiveCParser.DEFAULT) | (1 << ObjectiveCParser.DO) | (1 << ObjectiveCParser.DOUBLE) | (1 << ObjectiveCParser.ELSE) | (1 << ObjectiveCParser.ENUM) | (1 << ObjectiveCParser.EXTERN) | (1 << ObjectiveCParser.FLOAT) | (1 << ObjectiveCParser.FOR) | (1 << ObjectiveCParser.GOTO) | (1 << ObjectiveCParser.IF) | (1 << ObjectiveCParser.INLINE) | (1 << ObjectiveCParser.INT) | (1 << ObjectiveCParser.LONG) | (1 << ObjectiveCParser.REGISTER) | (1 << ObjectiveCParser.RESTRICT) | (1 << ObjectiveCParser.RETURN) | (1 << ObjectiveCParser.SHORT) | (1 << ObjectiveCParser.SIGNED) | (1 << ObjectiveCParser.SIZEOF) | (1 << ObjectiveCParser.STATIC) | (1 << ObjectiveCParser.STRUCT) | (1 << ObjectiveCParser.SWITCH) | (1 << ObjectiveCParser.TYPEDEF) | (1 << ObjectiveCParser.UNION) | (1 << ObjectiveCParser.UNSIGNED))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (ObjectiveCParser.VOID - 32)) | (1 << (ObjectiveCParser.VOLATILE - 32)) | (1 << (ObjectiveCParser.WHILE - 32)) | (1 << (ObjectiveCParser.BOOL_ - 32)) | (1 << (ObjectiveCParser.COMPLEX - 32)) | (1 << (ObjectiveCParser.IMAGINERY - 32)) | (1 << (ObjectiveCParser.TRUE - 32)) | (1 << (ObjectiveCParser.FALSE - 32)) | (1 << (ObjectiveCParser.BOOL - 32)) | (1 << (ObjectiveCParser.Class - 32)) | (1 << (ObjectiveCParser.BYCOPY - 32)) | (1 << (ObjectiveCParser.BYREF - 32)) | (1 << (ObjectiveCParser.ID - 32)) | (1 << (ObjectiveCParser.IMP - 32)) | (1 << (ObjectiveCParser.IN - 32)) | (1 << (ObjectiveCParser.INOUT - 32)) | (1 << (ObjectiveCParser.NIL - 32)) | (1 << (ObjectiveCParser.NO - 32)) | (1 << (ObjectiveCParser.NULL - 32)) | (1 << (ObjectiveCParser.ONEWAY - 32)) | (1 << (ObjectiveCParser.OUT - 32)) | (1 << (ObjectiveCParser.PROTOCOL_ - 32)) | (1 << (ObjectiveCParser.SEL - 32)) | (1 << (ObjectiveCParser.SELF - 32)) | (1 << (ObjectiveCParser.SUPER - 32)) | (1 << (ObjectiveCParser.YES - 32)) | (1 << (ObjectiveCParser.AUTORELEASEPOOL - 32)) | (1 << (ObjectiveCParser.CATCH - 32)) | (1 << (ObjectiveCParser.CLASS - 32)) | (1 << (ObjectiveCParser.DYNAMIC - 32)) | (1 << (ObjectiveCParser.ENCODE - 32)) | (1 << (ObjectiveCParser.END - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (ObjectiveCParser.FINALLY - 64)) | (1 << (ObjectiveCParser.IMPLEMENTATION - 64)) | (1 << (ObjectiveCParser.INTERFACE - 64)) | (1 << (ObjectiveCParser.IMPORT - 64)) | (1 << (ObjectiveCParser.PACKAGE - 64)) | (1 << (ObjectiveCParser.PROTOCOL - 64)) | (1 << (ObjectiveCParser.OPTIONAL - 64)) | (1 << (ObjectiveCParser.PRIVATE - 64)) | (1 << (ObjectiveCParser.PROPERTY - 64)) | (1 << (ObjectiveCParser.PROTECTED - 64)) | (1 << (ObjectiveCParser.PUBLIC - 64)) | (1 << (ObjectiveCParser.REQUIRED - 64)) | (1 << (ObjectiveCParser.SELECTOR - 64)) | (1 << (ObjectiveCParser.SYNCHRONIZED - 64)) | (1 << (ObjectiveCParser.SYNTHESIZE - 64)) | (1 << (ObjectiveCParser.THROW - 64)) | (1 << (ObjectiveCParser.TRY - 64)) | (1 << (ObjectiveCParser.ATOMIC - 64)) | (1 << (ObjectiveCParser.NONATOMIC - 64)) | (1 << (ObjectiveCParser.RETAIN - 64)) | (1 << (ObjectiveCParser.ATTRIBUTE - 64)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 64)) | (1 << (ObjectiveCParser.BLOCK - 64)) | (1 << (ObjectiveCParser.BRIDGE - 64)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 64)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 64)) | (1 << (ObjectiveCParser.COVARIANT - 64)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 64)) | (1 << (ObjectiveCParser.DEPRECATED - 64)) | (1 << (ObjectiveCParser.KINDOF - 64)) | (1 << (ObjectiveCParser.STRONG_QUALIFIER - 64)) | (1 << (ObjectiveCParser.TYPEOF - 64)))) !== 0) || ((((_la - 96)) & ~0x1f) == 0 && ((1 << (_la - 96)) & ((1 << (ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER - 96)) | (1 << (ObjectiveCParser.UNUSED - 96)) | (1 << (ObjectiveCParser.WEAK_QUALIFIER - 96)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 96)) | (1 << (ObjectiveCParser.NULLABLE - 96)) | (1 << (ObjectiveCParser.NONNULL - 96)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 96)) | (1 << (ObjectiveCParser.NS_INLINE - 96)) | (1 << (ObjectiveCParser.NS_ENUM - 96)) | (1 << (ObjectiveCParser.NS_OPTIONS - 96)) | (1 << (ObjectiveCParser.NS_CLOSED_ENUM - 96)) | (1 << (ObjectiveCParser.NS_TYPED_EXTENSIBLE_ENUM - 96)) | (1 << (ObjectiveCParser.NS_ERROR_ENUM - 96)) | (1 << (ObjectiveCParser.ASSIGN - 96)) | (1 << (ObjectiveCParser.COPY - 96)) | (1 << (ObjectiveCParser.GETTER - 96)) | (1 << (ObjectiveCParser.SETTER - 96)) | (1 << (ObjectiveCParser.STRONG - 96)) | (1 << (ObjectiveCParser.READONLY - 96)) | (1 << (ObjectiveCParser.READWRITE - 96)) | (1 << (ObjectiveCParser.WEAK - 96)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 96)) | (1 << (ObjectiveCParser.IB_OUTLET - 96)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 96)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 96)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 96)) | (1 << (ObjectiveCParser.NS_ASSUME_NONNULL_BEGIN - 96)) | (1 << (ObjectiveCParser.NS_ASSUME_NONNULL_END - 96)) | (1 << (ObjectiveCParser.EXTERN_SUFFIX - 96)) | (1 << (ObjectiveCParser.IOS_SUFFIX - 96)) | (1 << (ObjectiveCParser.MAC_SUFFIX - 96)) | (1 << (ObjectiveCParser.TVOS_PROHIBITED - 96)))) !== 0) || ((((_la - 128)) & ~0x1f) == 0 && ((1 << (_la - 128)) & ((1 << (ObjectiveCParser.NS_NOESCAPE - 128)) | (1 << (ObjectiveCParser.EXPORT_SUFFIX - 128)) | (1 << (ObjectiveCParser.NS_RETURNS_RETAINED - 128)) | (1 << (ObjectiveCParser.NS_RETURNS_NOT_RETAINED - 128)) | (1 << (ObjectiveCParser.NS_RETURNS_INNER_POINTER - 128)) | (1 << (ObjectiveCParser.CF_RETURNS_RETAINED - 128)) | (1 << (ObjectiveCParser.CF_RETURNS_NOT_RETAINED - 128)) | (1 << (ObjectiveCParser.CF_CONSUMED - 128)) | (1 << (ObjectiveCParser.IDENTIFIER - 128)) | (1 << (ObjectiveCParser.LP - 128)) | (1 << (ObjectiveCParser.LBRACE - 128)) | (1 << (ObjectiveCParser.RBRACE - 128)) | (1 << (ObjectiveCParser.LBRACK - 128)) | (1 << (ObjectiveCParser.RBRACK - 128)) | (1 << (ObjectiveCParser.SEMI - 128)) | (1 << (ObjectiveCParser.COMMA - 128)) | (1 << (ObjectiveCParser.DOT - 128)) | (1 << (ObjectiveCParser.STRUCTACCESS - 128)) | (1 << (ObjectiveCParser.AT - 128)) | (1 << (ObjectiveCParser.ASSIGNMENT - 128)) | (1 << (ObjectiveCParser.GT - 128)) | (1 << (ObjectiveCParser.LT - 128)) | (1 << (ObjectiveCParser.BANG - 128)) | (1 << (ObjectiveCParser.TILDE - 128)) | (1 << (ObjectiveCParser.QUESTION - 128)) | (1 << (ObjectiveCParser.COLON - 128)) | (1 << (ObjectiveCParser.EQUAL - 128)) | (1 << (ObjectiveCParser.LE - 128)) | (1 << (ObjectiveCParser.GE - 128)) | (1 << (ObjectiveCParser.NOTEQUAL - 128)) | (1 << (ObjectiveCParser.AND - 128)))) !== 0) || ((((_la - 160)) & ~0x1f) == 0 && ((1 << (_la - 160)) & ((1 << (ObjectiveCParser.OR - 160)) | (1 << (ObjectiveCParser.INC - 160)) | (1 << (ObjectiveCParser.DEC - 160)) | (1 << (ObjectiveCParser.ADD - 160)) | (1 << (ObjectiveCParser.SUB - 160)) | (1 << (ObjectiveCParser.MUL - 160)) | (1 << (ObjectiveCParser.DIV - 160)) | (1 << (ObjectiveCParser.BITAND - 160)) | (1 << (ObjectiveCParser.BITOR - 160)) | (1 << (ObjectiveCParser.BITXOR - 160)) | (1 << (ObjectiveCParser.MOD - 160)) | (1 << (ObjectiveCParser.ADD_ASSIGN - 160)) | (1 << (ObjectiveCParser.SUB_ASSIGN - 160)) | (1 << (ObjectiveCParser.MUL_ASSIGN - 160)) | (1 << (ObjectiveCParser.DIV_ASSIGN - 160)) | (1 << (ObjectiveCParser.AND_ASSIGN - 160)) | (1 << (ObjectiveCParser.OR_ASSIGN - 160)) | (1 << (ObjectiveCParser.XOR_ASSIGN - 160)) | (1 << (ObjectiveCParser.MOD_ASSIGN - 160)) | (1 << (ObjectiveCParser.LSHIFT_ASSIGN - 160)) | (1 << (ObjectiveCParser.RSHIFT_ASSIGN - 160)) | (1 << (ObjectiveCParser.ELIPSIS - 160)) | (1 << (ObjectiveCParser.CHARACTER_LITERAL - 160)) | (1 << (ObjectiveCParser.STRING_START - 160)) | (1 << (ObjectiveCParser.HEX_LITERAL - 160)) | (1 << (ObjectiveCParser.OCTAL_LITERAL - 160)) | (1 << (ObjectiveCParser.BINARY_LITERAL - 160)) | (1 << (ObjectiveCParser.DECIMAL_LITERAL - 160)) | (1 << (ObjectiveCParser.FLOATING_POINT_LITERAL - 160)) | (1 << (ObjectiveCParser.VERSION_SEMATIC - 160)) | (1 << (ObjectiveCParser.WS - 160)) | (1 << (ObjectiveCParser.MULTI_COMMENT - 160)))) !== 0) || ((((_la - 192)) & ~0x1f) == 0 && ((1 << (_la - 192)) & ((1 << (ObjectiveCParser.SINGLE_COMMENT - 192)) | (1 << (ObjectiveCParser.BACKSLASH - 192)) | (1 << (ObjectiveCParser.SHARP - 192)) | (1 << (ObjectiveCParser.STRING_NEWLINE - 192)) | (1 << (ObjectiveCParser.STRING_END - 192)) | (1 << (ObjectiveCParser.STRING_VALUE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_IMPORT - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_INCLUDE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_PRAGMA - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_DEFINE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_DEFINED - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_IF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_ELIF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_ELSE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_UNDEF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_IFDEF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_IFNDEF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_ENDIF - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_TRUE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_FALSE - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_ERROR - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_WARNING - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_BANG - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_LP - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_RP - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_EQUAL - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_NOTEQUAL - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_AND - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_OR - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_LT - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_GT - 192)) | (1 << (ObjectiveCParser.DIRECTIVE_LE - 192)))) !== 0) || ((((_la - 224)) & ~0x1f) == 0 && ((1 << (_la - 224)) & ((1 << (ObjectiveCParser.DIRECTIVE_GE - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_ADD - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_SUB - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_MUL - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_DIV - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_BITAND - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_BITOR - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_BITXOR - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_MOD - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_DOT - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_STRING - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_ID - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_DECIMAL_LITERAL - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_FLOAT - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_NEWLINE - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_MULTI_COMMENT - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_SINGLE_COMMENT - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_BACKSLASH_NEWLINE - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_TEXT_NEWLINE - 224)) | (1 << (ObjectiveCParser.DIRECTIVE_TEXT - 224)))) !== 0));
					this.state = 1818;
					this.match(ObjectiveCParser.RP);
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1819;
					localctx.op = this._input.LT(1);
					_la = this._input.LA(1);
					if (!(_la === ObjectiveCParser.INC || _la === ObjectiveCParser.DEC)) {
						localctx.op = this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	argumentExpressionList() {
		let localctx = new ArgumentExpressionListContext(this, this._ctx, this.state);
		this.enterRule(localctx, 284, ObjectiveCParser.RULE_argumentExpressionList);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1822;
			this.argumentExpression();
			this.state = 1827;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			while (_la === ObjectiveCParser.COMMA) {
				this.state = 1823;
				this.match(ObjectiveCParser.COMMA);
				this.state = 1824;
				this.argumentExpression();
				this.state = 1829;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	argumentExpression() {
		let localctx = new ArgumentExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 286, ObjectiveCParser.RULE_argumentExpression);
		try {
			this.state = 1832;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 262, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1830;
					this.expression(0);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1831;
					this.typeSpecifier();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	osVersion() {
		let localctx = new OsVersionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 288, ObjectiveCParser.RULE_osVersion);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1834;
			localctx.os = this.identifier();
			this.state = 1842;
			this._errHandler.sync(this);
			_la = this._input.LA(1);
			if (_la === ObjectiveCParser.LP) {
				this.state = 1835;
				this.match(ObjectiveCParser.LP);
				this.state = 1836;
				localctx.min = this._input.LT(1);
				_la = this._input.LA(1);
				if (!(_la === ObjectiveCParser.IDENTIFIER || _la === ObjectiveCParser.FLOATING_POINT_LITERAL || _la === ObjectiveCParser.VERSION_SEMATIC)) {
					localctx.min = this._errHandler.recoverInline(this);
				}
				else {
					this._errHandler.reportMatch(this);
					this.consume();
				}
				this.state = 1839;
				this._errHandler.sync(this);
				_la = this._input.LA(1);
				if (_la === ObjectiveCParser.COMMA) {
					this.state = 1837;
					this.match(ObjectiveCParser.COMMA);
					this.state = 1838;
					localctx.max = this._input.LT(1);
					_la = this._input.LA(1);
					if (!(_la === ObjectiveCParser.IDENTIFIER || _la === ObjectiveCParser.FLOATING_POINT_LITERAL || _la === ObjectiveCParser.VERSION_SEMATIC)) {
						localctx.max = this._errHandler.recoverInline(this);
					}
					else {
						this._errHandler.reportMatch(this);
						this.consume();
					}
				}

				this.state = 1841;
				this.match(ObjectiveCParser.RP);
			}

		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	primaryExpression() {
		let localctx = new PrimaryExpressionContext(this, this._ctx, this.state);
		this.enterRule(localctx, 290, ObjectiveCParser.RULE_primaryExpression);
		try {
			this.state = 1859;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 265, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1844;
					this.identifier();
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1845;
					this.constant();
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1846;
					this.stringLiteral();
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1847;
					this.match(ObjectiveCParser.LP);
					this.state = 1848;
					this.expression(0);
					this.state = 1849;
					this.match(ObjectiveCParser.RP);
					break;

				case 5:
					this.enterOuterAlt(localctx, 5);
					this.state = 1851;
					this.messageExpression();
					break;

				case 6:
					this.enterOuterAlt(localctx, 6);
					this.state = 1852;
					this.selectorExpression();
					break;

				case 7:
					this.enterOuterAlt(localctx, 7);
					this.state = 1853;
					this.protocolExpression();
					break;

				case 8:
					this.enterOuterAlt(localctx, 8);
					this.state = 1854;
					this.encodeExpression();
					break;

				case 9:
					this.enterOuterAlt(localctx, 9);
					this.state = 1855;
					this.dictionaryExpression();
					break;

				case 10:
					this.enterOuterAlt(localctx, 10);
					this.state = 1856;
					this.arrayExpression();
					break;

				case 11:
					this.enterOuterAlt(localctx, 11);
					this.state = 1857;
					this.boxExpression();
					break;

				case 12:
					this.enterOuterAlt(localctx, 12);
					this.state = 1858;
					this.blockExpression();
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	constant() {
		let localctx = new ConstantContext(this, this._ctx, this.state);
		this.enterRule(localctx, 292, ObjectiveCParser.RULE_constant);
		var _la = 0; // Token type
		try {
			this.state = 1879;
			this._errHandler.sync(this);
			var la_ = this._interp.adaptivePredict(this._input, 268, this._ctx);
			switch (la_) {
				case 1:
					this.enterOuterAlt(localctx, 1);
					this.state = 1861;
					this.match(ObjectiveCParser.HEX_LITERAL);
					break;

				case 2:
					this.enterOuterAlt(localctx, 2);
					this.state = 1862;
					this.match(ObjectiveCParser.OCTAL_LITERAL);
					break;

				case 3:
					this.enterOuterAlt(localctx, 3);
					this.state = 1863;
					this.match(ObjectiveCParser.BINARY_LITERAL);
					break;

				case 4:
					this.enterOuterAlt(localctx, 4);
					this.state = 1865;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB) {
						this.state = 1864;
						_la = this._input.LA(1);
						if (!(_la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB)) {
							this._errHandler.recoverInline(this);
						}
						else {
							this._errHandler.reportMatch(this);
							this.consume();
						}
					}

					this.state = 1867;
					this.match(ObjectiveCParser.DECIMAL_LITERAL);
					break;

				case 5:
					this.enterOuterAlt(localctx, 5);
					this.state = 1869;
					this._errHandler.sync(this);
					_la = this._input.LA(1);
					if (_la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB) {
						this.state = 1868;
						_la = this._input.LA(1);
						if (!(_la === ObjectiveCParser.ADD || _la === ObjectiveCParser.SUB)) {
							this._errHandler.recoverInline(this);
						}
						else {
							this._errHandler.reportMatch(this);
							this.consume();
						}
					}

					this.state = 1871;
					this.match(ObjectiveCParser.FLOATING_POINT_LITERAL);
					break;

				case 6:
					this.enterOuterAlt(localctx, 6);
					this.state = 1872;
					this.match(ObjectiveCParser.CHARACTER_LITERAL);
					break;

				case 7:
					this.enterOuterAlt(localctx, 7);
					this.state = 1873;
					this.match(ObjectiveCParser.NIL);
					break;

				case 8:
					this.enterOuterAlt(localctx, 8);
					this.state = 1874;
					this.match(ObjectiveCParser.NULL);
					break;

				case 9:
					this.enterOuterAlt(localctx, 9);
					this.state = 1875;
					this.match(ObjectiveCParser.YES);
					break;

				case 10:
					this.enterOuterAlt(localctx, 10);
					this.state = 1876;
					this.match(ObjectiveCParser.NO);
					break;

				case 11:
					this.enterOuterAlt(localctx, 11);
					this.state = 1877;
					this.match(ObjectiveCParser.TRUE);
					break;

				case 12:
					this.enterOuterAlt(localctx, 12);
					this.state = 1878;
					this.match(ObjectiveCParser.FALSE);
					break;

			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	stringLiteral() {
		let localctx = new StringLiteralContext(this, this._ctx, this.state);
		this.enterRule(localctx, 294, ObjectiveCParser.RULE_stringLiteral);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1889;
			this._errHandler.sync(this);
			let _alt = 1;
			do {
				switch (_alt) {
					case 1:
						this.state = 1881;
						this.match(ObjectiveCParser.STRING_START);
						this.state = 1885;
						this._errHandler.sync(this);
						_la = this._input.LA(1);
						while (_la === ObjectiveCParser.STRING_NEWLINE || _la === ObjectiveCParser.STRING_VALUE) {
							this.state = 1882;
							_la = this._input.LA(1);
							if (!(_la === ObjectiveCParser.STRING_NEWLINE || _la === ObjectiveCParser.STRING_VALUE)) {
								this._errHandler.recoverInline(this);
							}
							else {
								this._errHandler.reportMatch(this);
								this.consume();
							}
							this.state = 1887;
							this._errHandler.sync(this);
							_la = this._input.LA(1);
						}
						this.state = 1888;
						this.match(ObjectiveCParser.STRING_END);
						break;
					default:
						throw new antlr4.error.NoViableAltException(this);
				}
				this.state = 1891;
				this._errHandler.sync(this);
				_alt = this._interp.adaptivePredict(this._input, 270, this._ctx);
			} while (_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER);
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}



	identifier() {
		let localctx = new IdentifierContext(this, this._ctx, this.state);
		this.enterRule(localctx, 296, ObjectiveCParser.RULE_identifier);
		var _la = 0; // Token type
		try {
			this.enterOuterAlt(localctx, 1);
			this.state = 1893;
			_la = this._input.LA(1);
			if (!(((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (ObjectiveCParser.BOOL - 40)) | (1 << (ObjectiveCParser.Class - 40)) | (1 << (ObjectiveCParser.BYCOPY - 40)) | (1 << (ObjectiveCParser.BYREF - 40)) | (1 << (ObjectiveCParser.ID - 40)) | (1 << (ObjectiveCParser.IMP - 40)) | (1 << (ObjectiveCParser.IN - 40)) | (1 << (ObjectiveCParser.INOUT - 40)) | (1 << (ObjectiveCParser.ONEWAY - 40)) | (1 << (ObjectiveCParser.OUT - 40)) | (1 << (ObjectiveCParser.PROTOCOL_ - 40)) | (1 << (ObjectiveCParser.SEL - 40)) | (1 << (ObjectiveCParser.SELF - 40)) | (1 << (ObjectiveCParser.SUPER - 40)))) !== 0) || ((((_la - 81)) & ~0x1f) == 0 && ((1 << (_la - 81)) & ((1 << (ObjectiveCParser.ATOMIC - 81)) | (1 << (ObjectiveCParser.NONATOMIC - 81)) | (1 << (ObjectiveCParser.RETAIN - 81)) | (1 << (ObjectiveCParser.AUTORELEASING_QUALIFIER - 81)) | (1 << (ObjectiveCParser.BLOCK - 81)) | (1 << (ObjectiveCParser.BRIDGE_RETAINED - 81)) | (1 << (ObjectiveCParser.BRIDGE_TRANSFER - 81)) | (1 << (ObjectiveCParser.COVARIANT - 81)) | (1 << (ObjectiveCParser.CONTRAVARIANT - 81)) | (1 << (ObjectiveCParser.DEPRECATED - 81)) | (1 << (ObjectiveCParser.KINDOF - 81)) | (1 << (ObjectiveCParser.UNUSED - 81)) | (1 << (ObjectiveCParser.NULL_UNSPECIFIED - 81)) | (1 << (ObjectiveCParser.NULLABLE - 81)) | (1 << (ObjectiveCParser.NONNULL - 81)) | (1 << (ObjectiveCParser.NULL_RESETTABLE - 81)) | (1 << (ObjectiveCParser.NS_INLINE - 81)) | (1 << (ObjectiveCParser.NS_ENUM - 81)) | (1 << (ObjectiveCParser.NS_OPTIONS - 81)) | (1 << (ObjectiveCParser.ASSIGN - 81)) | (1 << (ObjectiveCParser.COPY - 81)) | (1 << (ObjectiveCParser.GETTER - 81)) | (1 << (ObjectiveCParser.SETTER - 81)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (ObjectiveCParser.STRONG - 113)) | (1 << (ObjectiveCParser.READONLY - 113)) | (1 << (ObjectiveCParser.READWRITE - 113)) | (1 << (ObjectiveCParser.WEAK - 113)) | (1 << (ObjectiveCParser.UNSAFE_UNRETAINED - 113)) | (1 << (ObjectiveCParser.IB_OUTLET - 113)) | (1 << (ObjectiveCParser.IB_OUTLET_COLLECTION - 113)) | (1 << (ObjectiveCParser.IB_INSPECTABLE - 113)) | (1 << (ObjectiveCParser.IB_DESIGNABLE - 113)) | (1 << (ObjectiveCParser.IDENTIFIER - 113)))) !== 0))) {
				this._errHandler.recoverInline(this);
			}
			else {
				this._errHandler.reportMatch(this);
				this.consume();
			}
		} catch (re) {
			if (re instanceof antlr4.error.RecognitionException) {
				localctx.exception = re;
				this._errHandler.reportError(this, re);
				this._errHandler.recover(this, re);
			} else {
				throw re;
			}
		} finally {
			this.exitRule();
		}
		return localctx;
	}


}

ObjectiveCParser.EOF = antlr4.Token.EOF;
ObjectiveCParser.AUTO = 1;
ObjectiveCParser.BREAK = 2;
ObjectiveCParser.CASE = 3;
ObjectiveCParser.CHAR = 4;
ObjectiveCParser.CONST = 5;
ObjectiveCParser.CONTINUE = 6;
ObjectiveCParser.DEFAULT = 7;
ObjectiveCParser.DO = 8;
ObjectiveCParser.DOUBLE = 9;
ObjectiveCParser.ELSE = 10;
ObjectiveCParser.ENUM = 11;
ObjectiveCParser.EXTERN = 12;
ObjectiveCParser.FLOAT = 13;
ObjectiveCParser.FOR = 14;
ObjectiveCParser.GOTO = 15;
ObjectiveCParser.IF = 16;
ObjectiveCParser.INLINE = 17;
ObjectiveCParser.INT = 18;
ObjectiveCParser.LONG = 19;
ObjectiveCParser.REGISTER = 20;
ObjectiveCParser.RESTRICT = 21;
ObjectiveCParser.RETURN = 22;
ObjectiveCParser.SHORT = 23;
ObjectiveCParser.SIGNED = 24;
ObjectiveCParser.SIZEOF = 25;
ObjectiveCParser.STATIC = 26;
ObjectiveCParser.STRUCT = 27;
ObjectiveCParser.SWITCH = 28;
ObjectiveCParser.TYPEDEF = 29;
ObjectiveCParser.UNION = 30;
ObjectiveCParser.UNSIGNED = 31;
ObjectiveCParser.VOID = 32;
ObjectiveCParser.VOLATILE = 33;
ObjectiveCParser.WHILE = 34;
ObjectiveCParser.BOOL_ = 35;
ObjectiveCParser.COMPLEX = 36;
ObjectiveCParser.IMAGINERY = 37;
ObjectiveCParser.TRUE = 38;
ObjectiveCParser.FALSE = 39;
ObjectiveCParser.BOOL = 40;
ObjectiveCParser.Class = 41;
ObjectiveCParser.BYCOPY = 42;
ObjectiveCParser.BYREF = 43;
ObjectiveCParser.ID = 44;
ObjectiveCParser.IMP = 45;
ObjectiveCParser.IN = 46;
ObjectiveCParser.INOUT = 47;
ObjectiveCParser.NIL = 48;
ObjectiveCParser.NO = 49;
ObjectiveCParser.NULL = 50;
ObjectiveCParser.ONEWAY = 51;
ObjectiveCParser.OUT = 52;
ObjectiveCParser.PROTOCOL_ = 53;
ObjectiveCParser.SEL = 54;
ObjectiveCParser.SELF = 55;
ObjectiveCParser.SUPER = 56;
ObjectiveCParser.YES = 57;
ObjectiveCParser.AUTORELEASEPOOL = 58;
ObjectiveCParser.CATCH = 59;
ObjectiveCParser.CLASS = 60;
ObjectiveCParser.DYNAMIC = 61;
ObjectiveCParser.ENCODE = 62;
ObjectiveCParser.END = 63;
ObjectiveCParser.FINALLY = 64;
ObjectiveCParser.IMPLEMENTATION = 65;
ObjectiveCParser.INTERFACE = 66;
ObjectiveCParser.IMPORT = 67;
ObjectiveCParser.PACKAGE = 68;
ObjectiveCParser.PROTOCOL = 69;
ObjectiveCParser.OPTIONAL = 70;
ObjectiveCParser.PRIVATE = 71;
ObjectiveCParser.PROPERTY = 72;
ObjectiveCParser.PROTECTED = 73;
ObjectiveCParser.PUBLIC = 74;
ObjectiveCParser.REQUIRED = 75;
ObjectiveCParser.SELECTOR = 76;
ObjectiveCParser.SYNCHRONIZED = 77;
ObjectiveCParser.SYNTHESIZE = 78;
ObjectiveCParser.THROW = 79;
ObjectiveCParser.TRY = 80;
ObjectiveCParser.ATOMIC = 81;
ObjectiveCParser.NONATOMIC = 82;
ObjectiveCParser.RETAIN = 83;
ObjectiveCParser.ATTRIBUTE = 84;
ObjectiveCParser.AUTORELEASING_QUALIFIER = 85;
ObjectiveCParser.BLOCK = 86;
ObjectiveCParser.BRIDGE = 87;
ObjectiveCParser.BRIDGE_RETAINED = 88;
ObjectiveCParser.BRIDGE_TRANSFER = 89;
ObjectiveCParser.COVARIANT = 90;
ObjectiveCParser.CONTRAVARIANT = 91;
ObjectiveCParser.DEPRECATED = 92;
ObjectiveCParser.KINDOF = 93;
ObjectiveCParser.STRONG_QUALIFIER = 94;
ObjectiveCParser.TYPEOF = 95;
ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER = 96;
ObjectiveCParser.UNUSED = 97;
ObjectiveCParser.WEAK_QUALIFIER = 98;
ObjectiveCParser.NULL_UNSPECIFIED = 99;
ObjectiveCParser.NULLABLE = 100;
ObjectiveCParser.NONNULL = 101;
ObjectiveCParser.NULL_RESETTABLE = 102;
ObjectiveCParser.NS_INLINE = 103;
ObjectiveCParser.NS_ENUM = 104;
ObjectiveCParser.NS_OPTIONS = 105;
ObjectiveCParser.NS_CLOSED_ENUM = 106;
ObjectiveCParser.NS_TYPED_EXTENSIBLE_ENUM = 107;
ObjectiveCParser.NS_ERROR_ENUM = 108;
ObjectiveCParser.ASSIGN = 109;
ObjectiveCParser.COPY = 110;
ObjectiveCParser.GETTER = 111;
ObjectiveCParser.SETTER = 112;
ObjectiveCParser.STRONG = 113;
ObjectiveCParser.READONLY = 114;
ObjectiveCParser.READWRITE = 115;
ObjectiveCParser.WEAK = 116;
ObjectiveCParser.UNSAFE_UNRETAINED = 117;
ObjectiveCParser.IB_OUTLET = 118;
ObjectiveCParser.IB_OUTLET_COLLECTION = 119;
ObjectiveCParser.IB_INSPECTABLE = 120;
ObjectiveCParser.IB_DESIGNABLE = 121;
ObjectiveCParser.NS_ASSUME_NONNULL_BEGIN = 122;
ObjectiveCParser.NS_ASSUME_NONNULL_END = 123;
ObjectiveCParser.EXTERN_SUFFIX = 124;
ObjectiveCParser.IOS_SUFFIX = 125;
ObjectiveCParser.MAC_SUFFIX = 126;
ObjectiveCParser.TVOS_PROHIBITED = 127;
ObjectiveCParser.NS_NOESCAPE = 128;
ObjectiveCParser.EXPORT_SUFFIX = 129;
ObjectiveCParser.NS_RETURNS_RETAINED = 130;
ObjectiveCParser.NS_RETURNS_NOT_RETAINED = 131;
ObjectiveCParser.NS_RETURNS_INNER_POINTER = 132;
ObjectiveCParser.CF_RETURNS_RETAINED = 133;
ObjectiveCParser.CF_RETURNS_NOT_RETAINED = 134;
ObjectiveCParser.CF_CONSUMED = 135;
ObjectiveCParser.IDENTIFIER = 136;
ObjectiveCParser.LP = 137;
ObjectiveCParser.RP = 138;
ObjectiveCParser.LBRACE = 139;
ObjectiveCParser.RBRACE = 140;
ObjectiveCParser.LBRACK = 141;
ObjectiveCParser.RBRACK = 142;
ObjectiveCParser.SEMI = 143;
ObjectiveCParser.COMMA = 144;
ObjectiveCParser.DOT = 145;
ObjectiveCParser.STRUCTACCESS = 146;
ObjectiveCParser.AT = 147;
ObjectiveCParser.ASSIGNMENT = 148;
ObjectiveCParser.GT = 149;
ObjectiveCParser.LT = 150;
ObjectiveCParser.BANG = 151;
ObjectiveCParser.TILDE = 152;
ObjectiveCParser.QUESTION = 153;
ObjectiveCParser.COLON = 154;
ObjectiveCParser.EQUAL = 155;
ObjectiveCParser.LE = 156;
ObjectiveCParser.GE = 157;
ObjectiveCParser.NOTEQUAL = 158;
ObjectiveCParser.AND = 159;
ObjectiveCParser.OR = 160;
ObjectiveCParser.INC = 161;
ObjectiveCParser.DEC = 162;
ObjectiveCParser.ADD = 163;
ObjectiveCParser.SUB = 164;
ObjectiveCParser.MUL = 165;
ObjectiveCParser.DIV = 166;
ObjectiveCParser.BITAND = 167;
ObjectiveCParser.BITOR = 168;
ObjectiveCParser.BITXOR = 169;
ObjectiveCParser.MOD = 170;
ObjectiveCParser.ADD_ASSIGN = 171;
ObjectiveCParser.SUB_ASSIGN = 172;
ObjectiveCParser.MUL_ASSIGN = 173;
ObjectiveCParser.DIV_ASSIGN = 174;
ObjectiveCParser.AND_ASSIGN = 175;
ObjectiveCParser.OR_ASSIGN = 176;
ObjectiveCParser.XOR_ASSIGN = 177;
ObjectiveCParser.MOD_ASSIGN = 178;
ObjectiveCParser.LSHIFT_ASSIGN = 179;
ObjectiveCParser.RSHIFT_ASSIGN = 180;
ObjectiveCParser.ELIPSIS = 181;
ObjectiveCParser.CHARACTER_LITERAL = 182;
ObjectiveCParser.STRING_START = 183;
ObjectiveCParser.HEX_LITERAL = 184;
ObjectiveCParser.OCTAL_LITERAL = 185;
ObjectiveCParser.BINARY_LITERAL = 186;
ObjectiveCParser.DECIMAL_LITERAL = 187;
ObjectiveCParser.FLOATING_POINT_LITERAL = 188;
ObjectiveCParser.VERSION_SEMATIC = 189;
ObjectiveCParser.WS = 190;
ObjectiveCParser.MULTI_COMMENT = 191;
ObjectiveCParser.SINGLE_COMMENT = 192;
ObjectiveCParser.BACKSLASH = 193;
ObjectiveCParser.SHARP = 194;
ObjectiveCParser.STRING_NEWLINE = 195;
ObjectiveCParser.STRING_END = 196;
ObjectiveCParser.STRING_VALUE = 197;
ObjectiveCParser.DIRECTIVE_IMPORT = 198;
ObjectiveCParser.DIRECTIVE_INCLUDE = 199;
ObjectiveCParser.DIRECTIVE_PRAGMA = 200;
ObjectiveCParser.DIRECTIVE_DEFINE = 201;
ObjectiveCParser.DIRECTIVE_DEFINED = 202;
ObjectiveCParser.DIRECTIVE_IF = 203;
ObjectiveCParser.DIRECTIVE_ELIF = 204;
ObjectiveCParser.DIRECTIVE_ELSE = 205;
ObjectiveCParser.DIRECTIVE_UNDEF = 206;
ObjectiveCParser.DIRECTIVE_IFDEF = 207;
ObjectiveCParser.DIRECTIVE_IFNDEF = 208;
ObjectiveCParser.DIRECTIVE_ENDIF = 209;
ObjectiveCParser.DIRECTIVE_TRUE = 210;
ObjectiveCParser.DIRECTIVE_FALSE = 211;
ObjectiveCParser.DIRECTIVE_ERROR = 212;
ObjectiveCParser.DIRECTIVE_WARNING = 213;
ObjectiveCParser.DIRECTIVE_BANG = 214;
ObjectiveCParser.DIRECTIVE_LP = 215;
ObjectiveCParser.DIRECTIVE_RP = 216;
ObjectiveCParser.DIRECTIVE_EQUAL = 217;
ObjectiveCParser.DIRECTIVE_NOTEQUAL = 218;
ObjectiveCParser.DIRECTIVE_AND = 219;
ObjectiveCParser.DIRECTIVE_OR = 220;
ObjectiveCParser.DIRECTIVE_LT = 221;
ObjectiveCParser.DIRECTIVE_GT = 222;
ObjectiveCParser.DIRECTIVE_LE = 223;
ObjectiveCParser.DIRECTIVE_GE = 224;
ObjectiveCParser.DIRECTIVE_ADD = 225;
ObjectiveCParser.DIRECTIVE_SUB = 226;
ObjectiveCParser.DIRECTIVE_MUL = 227;
ObjectiveCParser.DIRECTIVE_DIV = 228;
ObjectiveCParser.DIRECTIVE_BITAND = 229;
ObjectiveCParser.DIRECTIVE_BITOR = 230;
ObjectiveCParser.DIRECTIVE_BITXOR = 231;
ObjectiveCParser.DIRECTIVE_MOD = 232;
ObjectiveCParser.DIRECTIVE_DOT = 233;
ObjectiveCParser.DIRECTIVE_STRING = 234;
ObjectiveCParser.DIRECTIVE_ID = 235;
ObjectiveCParser.DIRECTIVE_DECIMAL_LITERAL = 236;
ObjectiveCParser.DIRECTIVE_FLOAT = 237;
ObjectiveCParser.DIRECTIVE_NEWLINE = 238;
ObjectiveCParser.DIRECTIVE_MULTI_COMMENT = 239;
ObjectiveCParser.DIRECTIVE_SINGLE_COMMENT = 240;
ObjectiveCParser.DIRECTIVE_BACKSLASH_NEWLINE = 241;
ObjectiveCParser.DIRECTIVE_TEXT_NEWLINE = 242;
ObjectiveCParser.DIRECTIVE_TEXT = 243;

ObjectiveCParser.RULE_translationUnit = 0;
ObjectiveCParser.RULE_topLevelDeclaration = 1;
ObjectiveCParser.RULE_importDeclaration = 2;
ObjectiveCParser.RULE_classInterface = 3;
ObjectiveCParser.RULE_categoryInterface = 4;
ObjectiveCParser.RULE_classImplementation = 5;
ObjectiveCParser.RULE_categoryImplementation = 6;
ObjectiveCParser.RULE_genericTypeSpecifier = 7;
ObjectiveCParser.RULE_protocolDeclaration = 8;
ObjectiveCParser.RULE_protocolDeclarationSection = 9;
ObjectiveCParser.RULE_protocolDeclarationList = 10;
ObjectiveCParser.RULE_classDeclaration = 11;
ObjectiveCParser.RULE_classDeclarationList = 12;
ObjectiveCParser.RULE_protocolList = 13;
ObjectiveCParser.RULE_propertyDeclaration = 14;
ObjectiveCParser.RULE_propertyAttributesList = 15;
ObjectiveCParser.RULE_propertyAttribute = 16;
ObjectiveCParser.RULE_protocolName = 17;
ObjectiveCParser.RULE_instanceVariables = 18;
ObjectiveCParser.RULE_visibilitySection = 19;
ObjectiveCParser.RULE_accessModifier = 20;
ObjectiveCParser.RULE_interfaceDeclarationList = 21;
ObjectiveCParser.RULE_classMethodDeclaration = 22;
ObjectiveCParser.RULE_instanceMethodDeclaration = 23;
ObjectiveCParser.RULE_methodDeclaration = 24;
ObjectiveCParser.RULE_implementationDefinitionList = 25;
ObjectiveCParser.RULE_classMethodDefinition = 26;
ObjectiveCParser.RULE_instanceMethodDefinition = 27;
ObjectiveCParser.RULE_methodDefinition = 28;
ObjectiveCParser.RULE_methodSelector = 29;
ObjectiveCParser.RULE_keywordDeclarator = 30;
ObjectiveCParser.RULE_selector = 31;
ObjectiveCParser.RULE_methodType = 32;
ObjectiveCParser.RULE_propertyImplementation = 33;
ObjectiveCParser.RULE_propertySynthesizeList = 34;
ObjectiveCParser.RULE_propertySynthesizeItem = 35;
ObjectiveCParser.RULE_blockType = 36;
ObjectiveCParser.RULE_genericsSpecifier = 37;
ObjectiveCParser.RULE_typeSpecifierWithPrefixes = 38;
ObjectiveCParser.RULE_dictionaryExpression = 39;
ObjectiveCParser.RULE_dictionaryPair = 40;
ObjectiveCParser.RULE_arrayExpression = 41;
ObjectiveCParser.RULE_boxExpression = 42;
ObjectiveCParser.RULE_blockParameters = 43;
ObjectiveCParser.RULE_typeVariableDeclaratorOrName = 44;
ObjectiveCParser.RULE_blockExpression = 45;
ObjectiveCParser.RULE_messageExpression = 46;
ObjectiveCParser.RULE_receiver = 47;
ObjectiveCParser.RULE_messageSelector = 48;
ObjectiveCParser.RULE_keywordArgument = 49;
ObjectiveCParser.RULE_keywordArgumentType = 50;
ObjectiveCParser.RULE_selectorExpression = 51;
ObjectiveCParser.RULE_selectorName = 52;
ObjectiveCParser.RULE_protocolExpression = 53;
ObjectiveCParser.RULE_encodeExpression = 54;
ObjectiveCParser.RULE_typeVariableDeclarator = 55;
ObjectiveCParser.RULE_throwStatement = 56;
ObjectiveCParser.RULE_tryBlock = 57;
ObjectiveCParser.RULE_catchStatement = 58;
ObjectiveCParser.RULE_synchronizedStatement = 59;
ObjectiveCParser.RULE_autoreleaseStatement = 60;
ObjectiveCParser.RULE_functionDeclaration = 61;
ObjectiveCParser.RULE_functionDefinition = 62;
ObjectiveCParser.RULE_functionSignature = 63;
ObjectiveCParser.RULE_functionPointer = 64;
ObjectiveCParser.RULE_attribute = 65;
ObjectiveCParser.RULE_attributeName = 66;
ObjectiveCParser.RULE_attributeParameters = 67;
ObjectiveCParser.RULE_attributeParameterList = 68;
ObjectiveCParser.RULE_attributeParameter = 69;
ObjectiveCParser.RULE_attributeParameterAssignment = 70;
ObjectiveCParser.RULE_declaration = 71;
ObjectiveCParser.RULE_functionCallExpression = 72;
ObjectiveCParser.RULE_enumDeclaration = 73;
ObjectiveCParser.RULE_varDeclaration = 74;
ObjectiveCParser.RULE_typedefDeclaration = 75;
ObjectiveCParser.RULE_typeDeclaratorList = 76;
ObjectiveCParser.RULE_typeDeclarator = 77;
ObjectiveCParser.RULE_commonSpecifiers = 78;
ObjectiveCParser.RULE_declarationSpecifiers = 79;
ObjectiveCParser.RULE_pointerQualifier = 80;
ObjectiveCParser.RULE_attributeSpecifier = 81;
ObjectiveCParser.RULE_initDeclaratorList = 82;
ObjectiveCParser.RULE_initDeclarator = 83;
ObjectiveCParser.RULE_structOrUnionSpecifier = 84;
ObjectiveCParser.RULE_fieldDeclaration = 85;
ObjectiveCParser.RULE_specifierQualifierList = 86;
ObjectiveCParser.RULE_ibOutletQualifier = 87;
ObjectiveCParser.RULE_arcBehaviourSpecifier = 88;
ObjectiveCParser.RULE_nullabilitySpecifier = 89;
ObjectiveCParser.RULE_storageClassSpecifier = 90;
ObjectiveCParser.RULE_typePrefix = 91;
ObjectiveCParser.RULE_typeQualifier = 92;
ObjectiveCParser.RULE_protocolQualifier = 93;
ObjectiveCParser.RULE_typeSpecifier = 94;
ObjectiveCParser.RULE_typeofExpression = 95;
ObjectiveCParser.RULE_fieldDeclaratorList = 96;
ObjectiveCParser.RULE_fieldDeclarator = 97;
ObjectiveCParser.RULE_enumSpecifier = 98;
ObjectiveCParser.RULE_enumeratorList = 99;
ObjectiveCParser.RULE_enumerator = 100;
ObjectiveCParser.RULE_enumeratorIdentifier = 101;
ObjectiveCParser.RULE_directDeclarator = 102;
ObjectiveCParser.RULE_declaratorSuffix = 103;
ObjectiveCParser.RULE_parameterList = 104;
ObjectiveCParser.RULE_pointer = 105;
ObjectiveCParser.RULE_macro = 106;
ObjectiveCParser.RULE_arrayInitializer = 107;
ObjectiveCParser.RULE_structInitializer = 108;
ObjectiveCParser.RULE_initializerList = 109;
ObjectiveCParser.RULE_typeName = 110;
ObjectiveCParser.RULE_abstractDeclarator = 111;
ObjectiveCParser.RULE_abstractDeclaratorSuffix = 112;
ObjectiveCParser.RULE_parameterDeclarationList = 113;
ObjectiveCParser.RULE_parameterDeclaration = 114;
ObjectiveCParser.RULE_declarator = 115;
ObjectiveCParser.RULE_statement = 116;
ObjectiveCParser.RULE_labeledStatement = 117;
ObjectiveCParser.RULE_rangeExpression = 118;
ObjectiveCParser.RULE_compoundStatement = 119;
ObjectiveCParser.RULE_selectionStatement = 120;
ObjectiveCParser.RULE_switchStatement = 121;
ObjectiveCParser.RULE_switchBlock = 122;
ObjectiveCParser.RULE_switchSection = 123;
ObjectiveCParser.RULE_switchLabel = 124;
ObjectiveCParser.RULE_iterationStatement = 125;
ObjectiveCParser.RULE_whileStatement = 126;
ObjectiveCParser.RULE_doStatement = 127;
ObjectiveCParser.RULE_forStatement = 128;
ObjectiveCParser.RULE_forLoopInitializer = 129;
ObjectiveCParser.RULE_forInStatement = 130;
ObjectiveCParser.RULE_jumpStatement = 131;
ObjectiveCParser.RULE_expressions = 132;
ObjectiveCParser.RULE_expression = 133;
ObjectiveCParser.RULE_assignmentOperator = 134;
ObjectiveCParser.RULE_castExpression = 135;
ObjectiveCParser.RULE_initializer = 136;
ObjectiveCParser.RULE_constantExpression = 137;
ObjectiveCParser.RULE_unaryExpression = 138;
ObjectiveCParser.RULE_unaryOperator = 139;
ObjectiveCParser.RULE_postfixExpression = 140;
ObjectiveCParser.RULE_postfix = 141;
ObjectiveCParser.RULE_argumentExpressionList = 142;
ObjectiveCParser.RULE_argumentExpression = 143;
ObjectiveCParser.RULE_osVersion = 144;
ObjectiveCParser.RULE_primaryExpression = 145;
ObjectiveCParser.RULE_constant = 146;
ObjectiveCParser.RULE_stringLiteral = 147;
ObjectiveCParser.RULE_identifier = 148;

class TranslationUnitContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_translationUnit;
	}

	EOF() {
		return this.getToken(ObjectiveCParser.EOF, 0);
	};

	topLevelDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TopLevelDeclarationContext);
		} else {
			return this.getTypedRuleContext(TopLevelDeclarationContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTranslationUnit(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTranslationUnit(this);
		}
	}


}



class TopLevelDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_topLevelDeclaration;
	}

	importDeclaration() {
		return this.getTypedRuleContext(ImportDeclarationContext, 0);
	};

	functionDeclaration() {
		return this.getTypedRuleContext(FunctionDeclarationContext, 0);
	};

	declaration() {
		return this.getTypedRuleContext(DeclarationContext, 0);
	};

	classInterface() {
		return this.getTypedRuleContext(ClassInterfaceContext, 0);
	};

	classImplementation() {
		return this.getTypedRuleContext(ClassImplementationContext, 0);
	};

	categoryInterface() {
		return this.getTypedRuleContext(CategoryInterfaceContext, 0);
	};

	categoryImplementation() {
		return this.getTypedRuleContext(CategoryImplementationContext, 0);
	};

	protocolDeclaration() {
		return this.getTypedRuleContext(ProtocolDeclarationContext, 0);
	};

	protocolDeclarationList() {
		return this.getTypedRuleContext(ProtocolDeclarationListContext, 0);
	};

	classDeclarationList() {
		return this.getTypedRuleContext(ClassDeclarationListContext, 0);
	};

	functionDefinition() {
		return this.getTypedRuleContext(FunctionDefinitionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTopLevelDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTopLevelDeclaration(this);
		}
	}


}



class ImportDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_importDeclaration;
		this.frameworkName = null; // IdentifierContext
		this.headerName = null; // IdentifierContext
	}

	IMPORT() {
		return this.getToken(ObjectiveCParser.IMPORT, 0);
	};

	stringLiteral() {
		return this.getTypedRuleContext(StringLiteralContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	DOT() {
		return this.getToken(ObjectiveCParser.DOT, 0);
	};

	IDENTIFIER() {
		return this.getToken(ObjectiveCParser.IDENTIFIER, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	identifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(IdentifierContext);
		} else {
			return this.getTypedRuleContext(IdentifierContext, i);
		}
	};

	DIV() {
		return this.getToken(ObjectiveCParser.DIV, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterImportDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitImportDeclaration(this);
		}
	}


}



class ClassInterfaceContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classInterface;
		this.className = null; // GenericTypeSpecifierContext
		this.superclassName = null; // IdentifierContext
		this.protocols = null; // ProtocolListContext
	}

	INTERFACE() {
		return this.getToken(ObjectiveCParser.INTERFACE, 0);
	};

	END() {
		return this.getToken(ObjectiveCParser.END, 0);
	};

	genericTypeSpecifier() {
		return this.getTypedRuleContext(GenericTypeSpecifierContext, 0);
	};

	IB_DESIGNABLE() {
		return this.getToken(ObjectiveCParser.IB_DESIGNABLE, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	instanceVariables() {
		return this.getTypedRuleContext(InstanceVariablesContext, 0);
	};

	interfaceDeclarationList() {
		return this.getTypedRuleContext(InterfaceDeclarationListContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassInterface(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassInterface(this);
		}
	}


}



class CategoryInterfaceContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_categoryInterface;
		this.className = null; // GenericTypeSpecifierContext
		this.categoryName = null; // IdentifierContext
		this.protocols = null; // ProtocolListContext
	}

	INTERFACE() {
		return this.getToken(ObjectiveCParser.INTERFACE, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	END() {
		return this.getToken(ObjectiveCParser.END, 0);
	};

	genericTypeSpecifier() {
		return this.getTypedRuleContext(GenericTypeSpecifierContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	instanceVariables() {
		return this.getTypedRuleContext(InstanceVariablesContext, 0);
	};

	interfaceDeclarationList() {
		return this.getTypedRuleContext(InterfaceDeclarationListContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCategoryInterface(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCategoryInterface(this);
		}
	}


}



class ClassImplementationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classImplementation;
		this.className = null; // GenericTypeSpecifierContext
		this.superclassName = null; // IdentifierContext
	}

	IMPLEMENTATION() {
		return this.getToken(ObjectiveCParser.IMPLEMENTATION, 0);
	};

	END() {
		return this.getToken(ObjectiveCParser.END, 0);
	};

	genericTypeSpecifier() {
		return this.getTypedRuleContext(GenericTypeSpecifierContext, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	instanceVariables() {
		return this.getTypedRuleContext(InstanceVariablesContext, 0);
	};

	implementationDefinitionList() {
		return this.getTypedRuleContext(ImplementationDefinitionListContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassImplementation(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassImplementation(this);
		}
	}


}



class CategoryImplementationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_categoryImplementation;
		this.className = null; // GenericTypeSpecifierContext
		this.categoryName = null; // IdentifierContext
	}

	IMPLEMENTATION() {
		return this.getToken(ObjectiveCParser.IMPLEMENTATION, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	END() {
		return this.getToken(ObjectiveCParser.END, 0);
	};

	genericTypeSpecifier() {
		return this.getTypedRuleContext(GenericTypeSpecifierContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	implementationDefinitionList() {
		return this.getTypedRuleContext(ImplementationDefinitionListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCategoryImplementation(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCategoryImplementation(this);
		}
	}


}



class GenericTypeSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_genericTypeSpecifier;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	genericsSpecifier() {
		return this.getTypedRuleContext(GenericsSpecifierContext, 0);
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterGenericTypeSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitGenericTypeSpecifier(this);
		}
	}


}



class ProtocolDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolDeclaration;
		this.name = null; // ProtocolNameContext
		this.protocols = null; // ProtocolListContext
	}

	PROTOCOL() {
		return this.getToken(ObjectiveCParser.PROTOCOL, 0);
	};

	END() {
		return this.getToken(ObjectiveCParser.END, 0);
	};

	protocolName() {
		return this.getTypedRuleContext(ProtocolNameContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	protocolDeclarationSection = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ProtocolDeclarationSectionContext);
		} else {
			return this.getTypedRuleContext(ProtocolDeclarationSectionContext, i);
		}
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolDeclaration(this);
		}
	}


}



class ProtocolDeclarationSectionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolDeclarationSection;
		this.modifier = null; // Token
	}

	REQUIRED() {
		return this.getToken(ObjectiveCParser.REQUIRED, 0);
	};

	OPTIONAL() {
		return this.getToken(ObjectiveCParser.OPTIONAL, 0);
	};

	interfaceDeclarationList = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(InterfaceDeclarationListContext);
		} else {
			return this.getTypedRuleContext(InterfaceDeclarationListContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolDeclarationSection(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolDeclarationSection(this);
		}
	}


}



class ProtocolDeclarationListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolDeclarationList;
	}

	PROTOCOL() {
		return this.getToken(ObjectiveCParser.PROTOCOL, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolDeclarationList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolDeclarationList(this);
		}
	}


}



class ClassDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classDeclaration;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassDeclaration(this);
		}
	}


}



class ClassDeclarationListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classDeclarationList;
	}

	CLASS() {
		return this.getToken(ObjectiveCParser.CLASS, 0);
	};

	classDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ClassDeclarationContext);
		} else {
			return this.getTypedRuleContext(ClassDeclarationContext, i);
		}
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassDeclarationList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassDeclarationList(this);
		}
	}


}



class ProtocolListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolList;
		this._protocolName = null; // ProtocolNameContext
		this.list = []; // of ProtocolNameContexts
	}

	protocolName = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ProtocolNameContext);
		} else {
			return this.getTypedRuleContext(ProtocolNameContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolList(this);
		}
	}


}



class PropertyDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertyDeclaration;
	}

	PROPERTY() {
		return this.getToken(ObjectiveCParser.PROPERTY, 0);
	};

	fieldDeclaration() {
		return this.getTypedRuleContext(FieldDeclarationContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	propertyAttributesList() {
		return this.getTypedRuleContext(PropertyAttributesListContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	ibOutletQualifier() {
		return this.getTypedRuleContext(IbOutletQualifierContext, 0);
	};

	IB_INSPECTABLE() {
		return this.getToken(ObjectiveCParser.IB_INSPECTABLE, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertyDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertyDeclaration(this);
		}
	}


}



class PropertyAttributesListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertyAttributesList;
	}

	propertyAttribute = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PropertyAttributeContext);
		} else {
			return this.getTypedRuleContext(PropertyAttributeContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertyAttributesList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertyAttributesList(this);
		}
	}


}



class PropertyAttributeContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertyAttribute;
	}

	ATOMIC() {
		return this.getToken(ObjectiveCParser.ATOMIC, 0);
	};

	NONATOMIC() {
		return this.getToken(ObjectiveCParser.NONATOMIC, 0);
	};

	STRONG() {
		return this.getToken(ObjectiveCParser.STRONG, 0);
	};

	WEAK() {
		return this.getToken(ObjectiveCParser.WEAK, 0);
	};

	RETAIN() {
		return this.getToken(ObjectiveCParser.RETAIN, 0);
	};

	ASSIGN() {
		return this.getToken(ObjectiveCParser.ASSIGN, 0);
	};

	UNSAFE_UNRETAINED() {
		return this.getToken(ObjectiveCParser.UNSAFE_UNRETAINED, 0);
	};

	COPY() {
		return this.getToken(ObjectiveCParser.COPY, 0);
	};

	READONLY() {
		return this.getToken(ObjectiveCParser.READONLY, 0);
	};

	READWRITE() {
		return this.getToken(ObjectiveCParser.READWRITE, 0);
	};

	GETTER() {
		return this.getToken(ObjectiveCParser.GETTER, 0);
	};

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	SETTER() {
		return this.getToken(ObjectiveCParser.SETTER, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	nullabilitySpecifier() {
		return this.getTypedRuleContext(NullabilitySpecifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertyAttribute(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertyAttribute(this);
		}
	}


}



class ProtocolNameContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolName;
		this.name = null; // TypeNameContext
	}

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	protocolList() {
		return this.getTypedRuleContext(ProtocolListContext, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	COVARIANT() {
		return this.getToken(ObjectiveCParser.COVARIANT, 0);
	};

	CONTRAVARIANT() {
		return this.getToken(ObjectiveCParser.CONTRAVARIANT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolName(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolName(this);
		}
	}


}



class InstanceVariablesContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_instanceVariables;
	}

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	visibilitySection = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(VisibilitySectionContext);
		} else {
			return this.getTypedRuleContext(VisibilitySectionContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInstanceVariables(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInstanceVariables(this);
		}
	}


}



class VisibilitySectionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_visibilitySection;
	}

	accessModifier() {
		return this.getTypedRuleContext(AccessModifierContext, 0);
	};

	fieldDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(FieldDeclarationContext);
		} else {
			return this.getTypedRuleContext(FieldDeclarationContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterVisibilitySection(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitVisibilitySection(this);
		}
	}


}



class AccessModifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_accessModifier;
	}

	PRIVATE() {
		return this.getToken(ObjectiveCParser.PRIVATE, 0);
	};

	PROTECTED() {
		return this.getToken(ObjectiveCParser.PROTECTED, 0);
	};

	PACKAGE() {
		return this.getToken(ObjectiveCParser.PACKAGE, 0);
	};

	PUBLIC() {
		return this.getToken(ObjectiveCParser.PUBLIC, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAccessModifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAccessModifier(this);
		}
	}


}



class InterfaceDeclarationListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_interfaceDeclarationList;
	}

	declaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(DeclarationContext);
		} else {
			return this.getTypedRuleContext(DeclarationContext, i);
		}
	};

	classMethodDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ClassMethodDeclarationContext);
		} else {
			return this.getTypedRuleContext(ClassMethodDeclarationContext, i);
		}
	};

	instanceMethodDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(InstanceMethodDeclarationContext);
		} else {
			return this.getTypedRuleContext(InstanceMethodDeclarationContext, i);
		}
	};

	propertyDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PropertyDeclarationContext);
		} else {
			return this.getTypedRuleContext(PropertyDeclarationContext, i);
		}
	};

	functionDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(FunctionDeclarationContext);
		} else {
			return this.getTypedRuleContext(FunctionDeclarationContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInterfaceDeclarationList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInterfaceDeclarationList(this);
		}
	}


}



class ClassMethodDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classMethodDeclaration;
	}

	ADD() {
		return this.getToken(ObjectiveCParser.ADD, 0);
	};

	methodDeclaration() {
		return this.getTypedRuleContext(MethodDeclarationContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassMethodDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassMethodDeclaration(this);
		}
	}


}



class InstanceMethodDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_instanceMethodDeclaration;
	}

	SUB() {
		return this.getToken(ObjectiveCParser.SUB, 0);
	};

	methodDeclaration() {
		return this.getTypedRuleContext(MethodDeclarationContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInstanceMethodDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInstanceMethodDeclaration(this);
		}
	}


}



class MethodDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_methodDeclaration;
	}

	methodSelector() {
		return this.getTypedRuleContext(MethodSelectorContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	methodType() {
		return this.getTypedRuleContext(MethodTypeContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMethodDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMethodDeclaration(this);
		}
	}


}



class ImplementationDefinitionListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_implementationDefinitionList;
	}

	functionDefinition = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(FunctionDefinitionContext);
		} else {
			return this.getTypedRuleContext(FunctionDefinitionContext, i);
		}
	};

	declaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(DeclarationContext);
		} else {
			return this.getTypedRuleContext(DeclarationContext, i);
		}
	};

	classMethodDefinition = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ClassMethodDefinitionContext);
		} else {
			return this.getTypedRuleContext(ClassMethodDefinitionContext, i);
		}
	};

	instanceMethodDefinition = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(InstanceMethodDefinitionContext);
		} else {
			return this.getTypedRuleContext(InstanceMethodDefinitionContext, i);
		}
	};

	propertyImplementation = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PropertyImplementationContext);
		} else {
			return this.getTypedRuleContext(PropertyImplementationContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterImplementationDefinitionList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitImplementationDefinitionList(this);
		}
	}


}



class ClassMethodDefinitionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_classMethodDefinition;
	}

	ADD() {
		return this.getToken(ObjectiveCParser.ADD, 0);
	};

	methodDefinition() {
		return this.getTypedRuleContext(MethodDefinitionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterClassMethodDefinition(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitClassMethodDefinition(this);
		}
	}


}



class InstanceMethodDefinitionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_instanceMethodDefinition;
	}

	SUB() {
		return this.getToken(ObjectiveCParser.SUB, 0);
	};

	methodDefinition() {
		return this.getTypedRuleContext(MethodDefinitionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInstanceMethodDefinition(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInstanceMethodDefinition(this);
		}
	}


}



class MethodDefinitionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_methodDefinition;
	}

	methodSelector() {
		return this.getTypedRuleContext(MethodSelectorContext, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	methodType() {
		return this.getTypedRuleContext(MethodTypeContext, 0);
	};

	initDeclaratorList() {
		return this.getTypedRuleContext(InitDeclaratorListContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMethodDefinition(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMethodDefinition(this);
		}
	}


}



class MethodSelectorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_methodSelector;
		this.sel = null; // SelectorContext
	}

	selector() {
		return this.getTypedRuleContext(SelectorContext, 0);
	};

	keywordDeclarator = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(KeywordDeclaratorContext);
		} else {
			return this.getTypedRuleContext(KeywordDeclaratorContext, i);
		}
	};

	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	ELIPSIS() {
		return this.getToken(ObjectiveCParser.ELIPSIS, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMethodSelector(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMethodSelector(this);
		}
	}


}



class KeywordDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_keywordDeclarator;
		this.sel = null; // SelectorContext
		this._methodType = null; // MethodTypeContext
		this.types = []; // of MethodTypeContexts
		this.name = null; // IdentifierContext
	}

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	arcBehaviourSpecifier() {
		return this.getTypedRuleContext(ArcBehaviourSpecifierContext, 0);
	};

	selector() {
		return this.getTypedRuleContext(SelectorContext, 0);
	};

	methodType = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MethodTypeContext);
		} else {
			return this.getTypedRuleContext(MethodTypeContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterKeywordDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitKeywordDeclarator(this);
		}
	}


}



class SelectorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_selector;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	RETURN() {
		return this.getToken(ObjectiveCParser.RETURN, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSelector(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSelector(this);
		}
	}


}



class MethodTypeContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_methodType;
	}

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMethodType(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMethodType(this);
		}
	}


}



class PropertyImplementationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertyImplementation;
	}

	SYNTHESIZE() {
		return this.getToken(ObjectiveCParser.SYNTHESIZE, 0);
	};

	propertySynthesizeList() {
		return this.getTypedRuleContext(PropertySynthesizeListContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	DYNAMIC() {
		return this.getToken(ObjectiveCParser.DYNAMIC, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertyImplementation(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertyImplementation(this);
		}
	}


}



class PropertySynthesizeListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertySynthesizeList;
	}

	propertySynthesizeItem = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PropertySynthesizeItemContext);
		} else {
			return this.getTypedRuleContext(PropertySynthesizeItemContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertySynthesizeList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertySynthesizeList(this);
		}
	}


}



class PropertySynthesizeItemContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_propertySynthesizeItem;
	}

	identifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(IdentifierContext);
		} else {
			return this.getTypedRuleContext(IdentifierContext, i);
		}
	};

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPropertySynthesizeItem(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPropertySynthesizeItem(this);
		}
	}


}



class BlockTypeContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_blockType;
	}

	typeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeSpecifierContext);
		} else {
			return this.getTypedRuleContext(TypeSpecifierContext, i);
		}
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	BITXOR() {
		return this.getToken(ObjectiveCParser.BITXOR, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	nullabilitySpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(NullabilitySpecifierContext);
		} else {
			return this.getTypedRuleContext(NullabilitySpecifierContext, i);
		}
	};

	blockParameters() {
		return this.getTypedRuleContext(BlockParametersContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterBlockType(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitBlockType(this);
		}
	}


}



class GenericsSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_genericsSpecifier;
	}

	LT() {
		return this.getToken(ObjectiveCParser.LT, 0);
	};

	GT() {
		return this.getToken(ObjectiveCParser.GT, 0);
	};

	typeSpecifierWithPrefixes = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeSpecifierWithPrefixesContext);
		} else {
			return this.getTypedRuleContext(TypeSpecifierWithPrefixesContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterGenericsSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitGenericsSpecifier(this);
		}
	}


}



class TypeSpecifierWithPrefixesContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeSpecifierWithPrefixes;
	}

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	typePrefix = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypePrefixContext);
		} else {
			return this.getTypedRuleContext(TypePrefixContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeSpecifierWithPrefixes(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeSpecifierWithPrefixes(this);
		}
	}


}



class DictionaryExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_dictionaryExpression;
	}

	AT() {
		return this.getToken(ObjectiveCParser.AT, 0);
	};

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	dictionaryPair = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(DictionaryPairContext);
		} else {
			return this.getTypedRuleContext(DictionaryPairContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDictionaryExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDictionaryExpression(this);
		}
	}


}



class DictionaryPairContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_dictionaryPair;
	}

	castExpression() {
		return this.getTypedRuleContext(CastExpressionContext, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDictionaryPair(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDictionaryPair(this);
		}
	}


}



class ArrayExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_arrayExpression;
	}

	AT() {
		return this.getToken(ObjectiveCParser.AT, 0);
	};

	LBRACK() {
		return this.getToken(ObjectiveCParser.LBRACK, 0);
	};

	RBRACK() {
		return this.getToken(ObjectiveCParser.RBRACK, 0);
	};

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterArrayExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitArrayExpression(this);
		}
	}


}



class BoxExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_boxExpression;
	}

	AT() {
		return this.getToken(ObjectiveCParser.AT, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterBoxExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitBoxExpression(this);
		}
	}


}



class BlockParametersContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_blockParameters;
		this._typeVariableDeclaratorOrName = null; // TypeVariableDeclaratorOrNameContext
		this.types = []; // of TypeVariableDeclaratorOrNameContexts
	}

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	VOID() {
		return this.getToken(ObjectiveCParser.VOID, 0);
	};

	typeVariableDeclaratorOrName = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeVariableDeclaratorOrNameContext);
		} else {
			return this.getTypedRuleContext(TypeVariableDeclaratorOrNameContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterBlockParameters(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitBlockParameters(this);
		}
	}


}



class TypeVariableDeclaratorOrNameContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeVariableDeclaratorOrName;
	}

	typeVariableDeclarator() {
		return this.getTypedRuleContext(TypeVariableDeclaratorContext, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeVariableDeclaratorOrName(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeVariableDeclaratorOrName(this);
		}
	}


}



class BlockExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_blockExpression;
	}

	BITXOR() {
		return this.getToken(ObjectiveCParser.BITXOR, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	nullabilitySpecifier() {
		return this.getTypedRuleContext(NullabilitySpecifierContext, 0);
	};

	blockParameters() {
		return this.getTypedRuleContext(BlockParametersContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterBlockExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitBlockExpression(this);
		}
	}


}



class MessageExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_messageExpression;
	}

	LBRACK() {
		return this.getToken(ObjectiveCParser.LBRACK, 0);
	};

	receiver() {
		return this.getTypedRuleContext(ReceiverContext, 0);
	};

	messageSelector() {
		return this.getTypedRuleContext(MessageSelectorContext, 0);
	};

	RBRACK() {
		return this.getToken(ObjectiveCParser.RBRACK, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMessageExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMessageExpression(this);
		}
	}


}



class ReceiverContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_receiver;
	}

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterReceiver(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitReceiver(this);
		}
	}


}



class MessageSelectorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_messageSelector;
	}

	selector() {
		return this.getTypedRuleContext(SelectorContext, 0);
	};

	keywordArgument = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(KeywordArgumentContext);
		} else {
			return this.getTypedRuleContext(KeywordArgumentContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMessageSelector(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMessageSelector(this);
		}
	}


}



class KeywordArgumentContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_keywordArgument;
	}

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	keywordArgumentType = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(KeywordArgumentTypeContext);
		} else {
			return this.getTypedRuleContext(KeywordArgumentTypeContext, i);
		}
	};

	selector() {
		return this.getTypedRuleContext(SelectorContext, 0);
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterKeywordArgument(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitKeywordArgument(this);
		}
	}


}



class KeywordArgumentTypeContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_keywordArgumentType;
	}

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	nullabilitySpecifier() {
		return this.getTypedRuleContext(NullabilitySpecifierContext, 0);
	};

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	initializerList() {
		return this.getTypedRuleContext(InitializerListContext, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterKeywordArgumentType(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitKeywordArgumentType(this);
		}
	}


}



class SelectorExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_selectorExpression;
	}

	SELECTOR() {
		return this.getToken(ObjectiveCParser.SELECTOR, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	selectorName() {
		return this.getTypedRuleContext(SelectorNameContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSelectorExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSelectorExpression(this);
		}
	}


}



class SelectorNameContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_selectorName;
	}

	selector = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(SelectorContext);
		} else {
			return this.getTypedRuleContext(SelectorContext, i);
		}
	};

	COLON = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COLON);
		} else {
			return this.getToken(ObjectiveCParser.COLON, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSelectorName(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSelectorName(this);
		}
	}


}



class ProtocolExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolExpression;
	}

	PROTOCOL() {
		return this.getToken(ObjectiveCParser.PROTOCOL, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	protocolName() {
		return this.getTypedRuleContext(ProtocolNameContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolExpression(this);
		}
	}


}



class EncodeExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_encodeExpression;
	}

	ENCODE() {
		return this.getToken(ObjectiveCParser.ENCODE, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEncodeExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEncodeExpression(this);
		}
	}


}



class TypeVariableDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeVariableDeclarator;
	}

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	declarator() {
		return this.getTypedRuleContext(DeclaratorContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeVariableDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeVariableDeclarator(this);
		}
	}


}



class ThrowStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_throwStatement;
	}

	THROW() {
		return this.getToken(ObjectiveCParser.THROW, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterThrowStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitThrowStatement(this);
		}
	}


}



class TryBlockContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_tryBlock;
		this.tryStatement = null; // CompoundStatementContext
		this.finallyStatement = null; // CompoundStatementContext
	}

	TRY() {
		return this.getToken(ObjectiveCParser.TRY, 0);
	};

	compoundStatement = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(CompoundStatementContext);
		} else {
			return this.getTypedRuleContext(CompoundStatementContext, i);
		}
	};

	catchStatement = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(CatchStatementContext);
		} else {
			return this.getTypedRuleContext(CatchStatementContext, i);
		}
	};

	FINALLY() {
		return this.getToken(ObjectiveCParser.FINALLY, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTryBlock(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTryBlock(this);
		}
	}


}



class CatchStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_catchStatement;
	}

	CATCH() {
		return this.getToken(ObjectiveCParser.CATCH, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeVariableDeclarator() {
		return this.getTypedRuleContext(TypeVariableDeclaratorContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCatchStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCatchStatement(this);
		}
	}


}



class SynchronizedStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_synchronizedStatement;
	}

	SYNCHRONIZED() {
		return this.getToken(ObjectiveCParser.SYNCHRONIZED, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSynchronizedStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSynchronizedStatement(this);
		}
	}


}



class AutoreleaseStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_autoreleaseStatement;
	}

	AUTORELEASEPOOL() {
		return this.getToken(ObjectiveCParser.AUTORELEASEPOOL, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAutoreleaseStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAutoreleaseStatement(this);
		}
	}


}



class FunctionDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_functionDeclaration;
	}

	functionSignature() {
		return this.getTypedRuleContext(FunctionSignatureContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFunctionDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFunctionDeclaration(this);
		}
	}


}



class FunctionDefinitionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_functionDefinition;
	}

	functionSignature() {
		return this.getTypedRuleContext(FunctionSignatureContext, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFunctionDefinition(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFunctionDefinition(this);
		}
	}


}



class FunctionSignatureContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_functionSignature;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	attributeSpecifier() {
		return this.getTypedRuleContext(AttributeSpecifierContext, 0);
	};

	parameterList() {
		return this.getTypedRuleContext(ParameterListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFunctionSignature(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFunctionSignature(this);
		}
	}


}



class FunctionPointerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_functionPointer;
		this.name = null; // IdentifierContext
	}

	LP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LP);
		} else {
			return this.getToken(ObjectiveCParser.LP, i);
		}
	};


	MUL() {
		return this.getToken(ObjectiveCParser.MUL, 0);
	};

	RP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.RP);
		} else {
			return this.getToken(ObjectiveCParser.RP, i);
		}
	};


	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	attributeSpecifier() {
		return this.getTypedRuleContext(AttributeSpecifierContext, 0);
	};

	nullabilitySpecifier() {
		return this.getTypedRuleContext(NullabilitySpecifierContext, 0);
	};

	parameterList() {
		return this.getTypedRuleContext(ParameterListContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFunctionPointer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFunctionPointer(this);
		}
	}


}



class AttributeContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attribute;
	}

	attributeName() {
		return this.getTypedRuleContext(AttributeNameContext, 0);
	};

	attributeParameters() {
		return this.getTypedRuleContext(AttributeParametersContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttribute(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttribute(this);
		}
	}


}



class AttributeNameContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeName;
	}

	CONST() {
		return this.getToken(ObjectiveCParser.CONST, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeName(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeName(this);
		}
	}


}



class AttributeParametersContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeParameters;
	}

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	attributeParameterList() {
		return this.getTypedRuleContext(AttributeParameterListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeParameters(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeParameters(this);
		}
	}


}



class AttributeParameterListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeParameterList;
	}

	attributeParameter = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeParameterContext);
		} else {
			return this.getTypedRuleContext(AttributeParameterContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeParameterList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeParameterList(this);
		}
	}


}



class AttributeParameterContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeParameter;
	}

	attribute() {
		return this.getTypedRuleContext(AttributeContext, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	stringLiteral() {
		return this.getTypedRuleContext(StringLiteralContext, 0);
	};

	attributeParameterAssignment() {
		return this.getTypedRuleContext(AttributeParameterAssignmentContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeParameter(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeParameter(this);
		}
	}


}



class AttributeParameterAssignmentContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeParameterAssignment;
	}

	attributeName = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeNameContext);
		} else {
			return this.getTypedRuleContext(AttributeNameContext, i);
		}
	};

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	stringLiteral() {
		return this.getTypedRuleContext(StringLiteralContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeParameterAssignment(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeParameterAssignment(this);
		}
	}


}



class DeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_declaration;
	}

	functionCallExpression() {
		return this.getTypedRuleContext(FunctionCallExpressionContext, 0);
	};

	enumDeclaration() {
		return this.getTypedRuleContext(EnumDeclarationContext, 0);
	};

	varDeclaration() {
		return this.getTypedRuleContext(VarDeclarationContext, 0);
	};

	typedefDeclaration() {
		return this.getTypedRuleContext(TypedefDeclarationContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDeclaration(this);
		}
	}


}



class FunctionCallExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_functionCallExpression;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	directDeclarator() {
		return this.getTypedRuleContext(DirectDeclaratorContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFunctionCallExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFunctionCallExpression(this);
		}
	}


}



class EnumDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_enumDeclaration;
		this.name = null; // IdentifierContext
	}

	enumSpecifier() {
		return this.getTypedRuleContext(EnumSpecifierContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	TYPEDEF() {
		return this.getToken(ObjectiveCParser.TYPEDEF, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEnumDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEnumDeclaration(this);
		}
	}


}



class VarDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_varDeclaration;
	}

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	initDeclaratorList() {
		return this.getTypedRuleContext(InitDeclaratorListContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterVarDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitVarDeclaration(this);
		}
	}


}



class TypedefDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typedefDeclaration;
	}

	TYPEDEF() {
		return this.getToken(ObjectiveCParser.TYPEDEF, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	typeDeclaratorList() {
		return this.getTypedRuleContext(TypeDeclaratorListContext, 0);
	};

	functionPointer() {
		return this.getTypedRuleContext(FunctionPointerContext, 0);
	};

	functionSignature() {
		return this.getTypedRuleContext(FunctionSignatureContext, 0);
	};

	structOrUnionSpecifier() {
		return this.getTypedRuleContext(StructOrUnionSpecifierContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypedefDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypedefDeclaration(this);
		}
	}


}



class TypeDeclaratorListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeDeclaratorList;
	}

	typeDeclarator = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeDeclaratorContext);
		} else {
			return this.getTypedRuleContext(TypeDeclaratorContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeDeclaratorList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeDeclaratorList(this);
		}
	}


}



class TypeDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeDeclarator;
	}

	directDeclarator() {
		return this.getTypedRuleContext(DirectDeclaratorContext, 0);
	};

	pointer() {
		return this.getTypedRuleContext(PointerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeDeclarator(this);
		}
	}


}



class CommonSpecifiersContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_commonSpecifiers;
	}

	arcBehaviourSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ArcBehaviourSpecifierContext);
		} else {
			return this.getTypedRuleContext(ArcBehaviourSpecifierContext, i);
		}
	};

	nullabilitySpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(NullabilitySpecifierContext);
		} else {
			return this.getTypedRuleContext(NullabilitySpecifierContext, i);
		}
	};

	ibOutletQualifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(IbOutletQualifierContext);
		} else {
			return this.getTypedRuleContext(IbOutletQualifierContext, i);
		}
	};

	typePrefix = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypePrefixContext);
		} else {
			return this.getTypedRuleContext(TypePrefixContext, i);
		}
	};

	typeQualifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeQualifierContext);
		} else {
			return this.getTypedRuleContext(TypeQualifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCommonSpecifiers(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCommonSpecifiers(this);
		}
	}


}



class DeclarationSpecifiersContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_declarationSpecifiers;
	}

	storageClassSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(StorageClassSpecifierContext);
		} else {
			return this.getTypedRuleContext(StorageClassSpecifierContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	commonSpecifiers = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(CommonSpecifiersContext);
		} else {
			return this.getTypedRuleContext(CommonSpecifiersContext, i);
		}
	};

	typeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeSpecifierContext);
		} else {
			return this.getTypedRuleContext(TypeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDeclarationSpecifiers(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDeclarationSpecifiers(this);
		}
	}


}



class PointerQualifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_pointerQualifier;
	}

	storageClassSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(StorageClassSpecifierContext);
		} else {
			return this.getTypedRuleContext(StorageClassSpecifierContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	commonSpecifiers = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(CommonSpecifiersContext);
		} else {
			return this.getTypedRuleContext(CommonSpecifiersContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPointerQualifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPointerQualifier(this);
		}
	}


}



class AttributeSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_attributeSpecifier;
	}

	ATTRIBUTE() {
		return this.getToken(ObjectiveCParser.ATTRIBUTE, 0);
	};

	LP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LP);
		} else {
			return this.getToken(ObjectiveCParser.LP, i);
		}
	};


	attribute = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeContext);
		} else {
			return this.getTypedRuleContext(AttributeContext, i);
		}
	};

	RP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.RP);
		} else {
			return this.getToken(ObjectiveCParser.RP, i);
		}
	};


	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAttributeSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAttributeSpecifier(this);
		}
	}


}



class InitDeclaratorListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_initDeclaratorList;
	}

	initDeclarator = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(InitDeclaratorContext);
		} else {
			return this.getTypedRuleContext(InitDeclaratorContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInitDeclaratorList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInitDeclaratorList(this);
		}
	}


}



class InitDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_initDeclarator;
	}

	declarator() {
		return this.getTypedRuleContext(DeclaratorContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	initializer() {
		return this.getTypedRuleContext(InitializerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInitDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInitDeclarator(this);
		}
	}


}



class StructOrUnionSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_structOrUnionSpecifier;
	}

	STRUCT() {
		return this.getToken(ObjectiveCParser.STRUCT, 0);
	};

	UNION() {
		return this.getToken(ObjectiveCParser.UNION, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	fieldDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(FieldDeclarationContext);
		} else {
			return this.getTypedRuleContext(FieldDeclarationContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterStructOrUnionSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitStructOrUnionSpecifier(this);
		}
	}


}



class FieldDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_fieldDeclaration;
	}

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	specifierQualifierList() {
		return this.getTypedRuleContext(SpecifierQualifierListContext, 0);
	};

	fieldDeclaratorList() {
		return this.getTypedRuleContext(FieldDeclaratorListContext, 0);
	};

	functionPointer() {
		return this.getTypedRuleContext(FunctionPointerContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFieldDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFieldDeclaration(this);
		}
	}


}



class SpecifierQualifierListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_specifierQualifierList;
	}

	commonSpecifiers = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(CommonSpecifiersContext);
		} else {
			return this.getTypedRuleContext(CommonSpecifiersContext, i);
		}
	};

	typeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(TypeSpecifierContext);
		} else {
			return this.getTypedRuleContext(TypeSpecifierContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSpecifierQualifierList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSpecifierQualifierList(this);
		}
	}


}



class IbOutletQualifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_ibOutletQualifier;
	}

	IB_OUTLET_COLLECTION() {
		return this.getToken(ObjectiveCParser.IB_OUTLET_COLLECTION, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	IB_OUTLET() {
		return this.getToken(ObjectiveCParser.IB_OUTLET, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterIbOutletQualifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitIbOutletQualifier(this);
		}
	}


}



class ArcBehaviourSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_arcBehaviourSpecifier;
	}

	WEAK_QUALIFIER() {
		return this.getToken(ObjectiveCParser.WEAK_QUALIFIER, 0);
	};

	STRONG_QUALIFIER() {
		return this.getToken(ObjectiveCParser.STRONG_QUALIFIER, 0);
	};

	AUTORELEASING_QUALIFIER() {
		return this.getToken(ObjectiveCParser.AUTORELEASING_QUALIFIER, 0);
	};

	UNSAFE_UNRETAINED_QUALIFIER() {
		return this.getToken(ObjectiveCParser.UNSAFE_UNRETAINED_QUALIFIER, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterArcBehaviourSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitArcBehaviourSpecifier(this);
		}
	}


}



class NullabilitySpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_nullabilitySpecifier;
	}

	NULL_UNSPECIFIED() {
		return this.getToken(ObjectiveCParser.NULL_UNSPECIFIED, 0);
	};

	NULLABLE() {
		return this.getToken(ObjectiveCParser.NULLABLE, 0);
	};

	NONNULL() {
		return this.getToken(ObjectiveCParser.NONNULL, 0);
	};

	NULL_RESETTABLE() {
		return this.getToken(ObjectiveCParser.NULL_RESETTABLE, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterNullabilitySpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitNullabilitySpecifier(this);
		}
	}


}



class StorageClassSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_storageClassSpecifier;
	}

	AUTO() {
		return this.getToken(ObjectiveCParser.AUTO, 0);
	};

	REGISTER() {
		return this.getToken(ObjectiveCParser.REGISTER, 0);
	};

	STATIC() {
		return this.getToken(ObjectiveCParser.STATIC, 0);
	};

	EXTERN() {
		return this.getToken(ObjectiveCParser.EXTERN, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterStorageClassSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitStorageClassSpecifier(this);
		}
	}


}



class TypePrefixContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typePrefix;
	}

	BRIDGE() {
		return this.getToken(ObjectiveCParser.BRIDGE, 0);
	};

	BRIDGE_TRANSFER() {
		return this.getToken(ObjectiveCParser.BRIDGE_TRANSFER, 0);
	};

	BRIDGE_RETAINED() {
		return this.getToken(ObjectiveCParser.BRIDGE_RETAINED, 0);
	};

	BLOCK() {
		return this.getToken(ObjectiveCParser.BLOCK, 0);
	};

	INLINE() {
		return this.getToken(ObjectiveCParser.INLINE, 0);
	};

	NS_INLINE() {
		return this.getToken(ObjectiveCParser.NS_INLINE, 0);
	};

	KINDOF() {
		return this.getToken(ObjectiveCParser.KINDOF, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypePrefix(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypePrefix(this);
		}
	}


}



class TypeQualifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeQualifier;
	}

	CONST() {
		return this.getToken(ObjectiveCParser.CONST, 0);
	};

	VOLATILE() {
		return this.getToken(ObjectiveCParser.VOLATILE, 0);
	};

	RESTRICT() {
		return this.getToken(ObjectiveCParser.RESTRICT, 0);
	};

	protocolQualifier() {
		return this.getTypedRuleContext(ProtocolQualifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeQualifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeQualifier(this);
		}
	}


}



class ProtocolQualifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_protocolQualifier;
	}

	IN() {
		return this.getToken(ObjectiveCParser.IN, 0);
	};

	OUT() {
		return this.getToken(ObjectiveCParser.OUT, 0);
	};

	INOUT() {
		return this.getToken(ObjectiveCParser.INOUT, 0);
	};

	BYCOPY() {
		return this.getToken(ObjectiveCParser.BYCOPY, 0);
	};

	BYREF() {
		return this.getToken(ObjectiveCParser.BYREF, 0);
	};

	ONEWAY() {
		return this.getToken(ObjectiveCParser.ONEWAY, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterProtocolQualifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitProtocolQualifier(this);
		}
	}


}



class TypeSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeSpecifier;
	}

	typeofExpression() {
		return this.getTypedRuleContext(TypeofExpressionContext, 0);
	};

	genericTypeSpecifier() {
		return this.getTypedRuleContext(GenericTypeSpecifierContext, 0);
	};

	structOrUnionSpecifier() {
		return this.getTypedRuleContext(StructOrUnionSpecifierContext, 0);
	};

	enumSpecifier() {
		return this.getTypedRuleContext(EnumSpecifierContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	pointer() {
		return this.getTypedRuleContext(PointerContext, 0);
	};

	VOID = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.VOID);
		} else {
			return this.getToken(ObjectiveCParser.VOID, i);
		}
	};


	CHAR = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.CHAR);
		} else {
			return this.getToken(ObjectiveCParser.CHAR, i);
		}
	};


	SHORT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.SHORT);
		} else {
			return this.getToken(ObjectiveCParser.SHORT, i);
		}
	};


	INT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.INT);
		} else {
			return this.getToken(ObjectiveCParser.INT, i);
		}
	};


	LONG = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LONG);
		} else {
			return this.getToken(ObjectiveCParser.LONG, i);
		}
	};


	FLOAT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.FLOAT);
		} else {
			return this.getToken(ObjectiveCParser.FLOAT, i);
		}
	};


	DOUBLE = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.DOUBLE);
		} else {
			return this.getToken(ObjectiveCParser.DOUBLE, i);
		}
	};


	SIGNED = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.SIGNED);
		} else {
			return this.getToken(ObjectiveCParser.SIGNED, i);
		}
	};


	UNSIGNED = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.UNSIGNED);
		} else {
			return this.getToken(ObjectiveCParser.UNSIGNED, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeSpecifier(this);
		}
	}


}



class TypeofExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeofExpression;
	}

	TYPEOF() {
		return this.getToken(ObjectiveCParser.TYPEOF, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeofExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeofExpression(this);
		}
	}


}



class FieldDeclaratorListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_fieldDeclaratorList;
	}

	fieldDeclarator = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(FieldDeclaratorContext);
		} else {
			return this.getTypedRuleContext(FieldDeclaratorContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFieldDeclaratorList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFieldDeclaratorList(this);
		}
	}


}



class FieldDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_fieldDeclarator;
	}

	declarator() {
		return this.getTypedRuleContext(DeclaratorContext, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterFieldDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitFieldDeclarator(this);
		}
	}


}



class EnumSpecifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_enumSpecifier;
		this.name = null; // IdentifierContext
		this.type = null; // Token
	}

	ENUM() {
		return this.getToken(ObjectiveCParser.ENUM, 0);
	};

	identifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(IdentifierContext);
		} else {
			return this.getTypedRuleContext(IdentifierContext, i);
		}
	};

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	enumeratorList() {
		return this.getTypedRuleContext(EnumeratorListContext, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	NS_OPTIONS() {
		return this.getToken(ObjectiveCParser.NS_OPTIONS, 0);
	};

	NS_ENUM() {
		return this.getToken(ObjectiveCParser.NS_ENUM, 0);
	};

	NS_ERROR_ENUM() {
		return this.getToken(ObjectiveCParser.NS_ERROR_ENUM, 0);
	};

	NS_CLOSED_ENUM() {
		return this.getToken(ObjectiveCParser.NS_CLOSED_ENUM, 0);
	};

	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEnumSpecifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEnumSpecifier(this);
		}
	}


}



class EnumeratorListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_enumeratorList;
		this._enumerator = null; // EnumeratorContext
		this.list = []; // of EnumeratorContexts
	}

	enumerator = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(EnumeratorContext);
		} else {
			return this.getTypedRuleContext(EnumeratorContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEnumeratorList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEnumeratorList(this);
		}
	}


}



class EnumeratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_enumerator;
		this.name = null; // EnumeratorIdentifierContext
		this.value = null; // ExpressionContext
	}

	enumeratorIdentifier() {
		return this.getTypedRuleContext(EnumeratorIdentifierContext, 0);
	};

	macro = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(MacroContext);
		} else {
			return this.getTypedRuleContext(MacroContext, i);
		}
	};

	attributeSpecifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AttributeSpecifierContext);
		} else {
			return this.getTypedRuleContext(AttributeSpecifierContext, i);
		}
	};

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEnumerator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEnumerator(this);
		}
	}


}



class EnumeratorIdentifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_enumeratorIdentifier;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	DEFAULT() {
		return this.getToken(ObjectiveCParser.DEFAULT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterEnumeratorIdentifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitEnumeratorIdentifier(this);
		}
	}


}



class DirectDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_directDeclarator;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	declarator() {
		return this.getTypedRuleContext(DeclaratorContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	declaratorSuffix = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(DeclaratorSuffixContext);
		} else {
			return this.getTypedRuleContext(DeclaratorSuffixContext, i);
		}
	};

	BITXOR() {
		return this.getToken(ObjectiveCParser.BITXOR, 0);
	};

	blockParameters() {
		return this.getTypedRuleContext(BlockParametersContext, 0);
	};

	nullabilitySpecifier() {
		return this.getTypedRuleContext(NullabilitySpecifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDirectDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDirectDeclarator(this);
		}
	}


}



class DeclaratorSuffixContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_declaratorSuffix;
	}

	LBRACK() {
		return this.getToken(ObjectiveCParser.LBRACK, 0);
	};

	RBRACK() {
		return this.getToken(ObjectiveCParser.RBRACK, 0);
	};

	constantExpression() {
		return this.getTypedRuleContext(ConstantExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDeclaratorSuffix(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDeclaratorSuffix(this);
		}
	}


}



class ParameterListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_parameterList;
	}

	parameterDeclarationList() {
		return this.getTypedRuleContext(ParameterDeclarationListContext, 0);
	};

	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	ELIPSIS() {
		return this.getToken(ObjectiveCParser.ELIPSIS, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterParameterList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitParameterList(this);
		}
	}


}



class PointerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_pointer;
		this.nextPointer = null; // PointerContext
	}

	MUL() {
		return this.getToken(ObjectiveCParser.MUL, 0);
	};

	pointerQualifier() {
		return this.getTypedRuleContext(PointerQualifierContext, 0);
	};

	pointer() {
		return this.getTypedRuleContext(PointerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPointer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPointer(this);
		}
	}


}



class MacroContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_macro;
		this._primaryExpression = null; // PrimaryExpressionContext
		this.messages = []; // of PrimaryExpressionContexts
		this._osVersion = null; // OsVersionContext
		this.osVersions = []; // of OsVersionContexts
	}

	identifier = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(IdentifierContext);
		} else {
			return this.getTypedRuleContext(IdentifierContext, i);
		}
	};

	LP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LP);
		} else {
			return this.getToken(ObjectiveCParser.LP, i);
		}
	};


	RP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.RP);
		} else {
			return this.getToken(ObjectiveCParser.RP, i);
		}
	};


	primaryExpression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PrimaryExpressionContext);
		} else {
			return this.getTypedRuleContext(PrimaryExpressionContext, i);
		}
	};

	osVersion = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(OsVersionContext);
		} else {
			return this.getTypedRuleContext(OsVersionContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	DOT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.DOT);
		} else {
			return this.getToken(ObjectiveCParser.DOT, i);
		}
	};


	COLON = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COLON);
		} else {
			return this.getToken(ObjectiveCParser.COLON, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterMacro(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitMacro(this);
		}
	}


}



class ArrayInitializerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_arrayInitializer;
	}

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterArrayInitializer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitArrayInitializer(this);
		}
	}


}



class StructInitializerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_structInitializer;
	}

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	DOT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.DOT);
		} else {
			return this.getToken(ObjectiveCParser.DOT, i);
		}
	};


	expression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ExpressionContext);
		} else {
			return this.getTypedRuleContext(ExpressionContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterStructInitializer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitStructInitializer(this);
		}
	}


}



class InitializerListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_initializerList;
	}

	initializer = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(InitializerContext);
		} else {
			return this.getTypedRuleContext(InitializerContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInitializerList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInitializerList(this);
		}
	}


}



class TypeNameContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_typeName;
	}

	specifierQualifierList() {
		return this.getTypedRuleContext(SpecifierQualifierListContext, 0);
	};

	abstractDeclarator() {
		return this.getTypedRuleContext(AbstractDeclaratorContext, 0);
	};

	blockType() {
		return this.getTypedRuleContext(BlockTypeContext, 0);
	};

	functionPointer() {
		return this.getTypedRuleContext(FunctionPointerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterTypeName(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitTypeName(this);
		}
	}


}



class AbstractDeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_abstractDeclarator;
	}

	pointer() {
		return this.getTypedRuleContext(PointerContext, 0);
	};

	abstractDeclarator() {
		return this.getTypedRuleContext(AbstractDeclaratorContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	abstractDeclaratorSuffix = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(AbstractDeclaratorSuffixContext);
		} else {
			return this.getTypedRuleContext(AbstractDeclaratorSuffixContext, i);
		}
	};

	LBRACK = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LBRACK);
		} else {
			return this.getToken(ObjectiveCParser.LBRACK, i);
		}
	};


	RBRACK = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.RBRACK);
		} else {
			return this.getToken(ObjectiveCParser.RBRACK, i);
		}
	};


	constantExpression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ConstantExpressionContext);
		} else {
			return this.getTypedRuleContext(ConstantExpressionContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAbstractDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAbstractDeclarator(this);
		}
	}


}



class AbstractDeclaratorSuffixContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_abstractDeclaratorSuffix;
	}

	LBRACK() {
		return this.getToken(ObjectiveCParser.LBRACK, 0);
	};

	RBRACK() {
		return this.getToken(ObjectiveCParser.RBRACK, 0);
	};

	constantExpression() {
		return this.getTypedRuleContext(ConstantExpressionContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	parameterDeclarationList() {
		return this.getTypedRuleContext(ParameterDeclarationListContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAbstractDeclaratorSuffix(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAbstractDeclaratorSuffix(this);
		}
	}


}



class ParameterDeclarationListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_parameterDeclarationList;
	}

	parameterDeclaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ParameterDeclarationContext);
		} else {
			return this.getTypedRuleContext(ParameterDeclarationContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterParameterDeclarationList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitParameterDeclarationList(this);
		}
	}


}



class ParameterDeclarationContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_parameterDeclaration;
	}

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	declarator() {
		return this.getTypedRuleContext(DeclaratorContext, 0);
	};

	VOID() {
		return this.getToken(ObjectiveCParser.VOID, 0);
	};

	functionPointer() {
		return this.getTypedRuleContext(FunctionPointerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterParameterDeclaration(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitParameterDeclaration(this);
		}
	}


}



class DeclaratorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_declarator;
	}

	directDeclarator() {
		return this.getTypedRuleContext(DirectDeclaratorContext, 0);
	};

	pointer() {
		return this.getTypedRuleContext(PointerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDeclarator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDeclarator(this);
		}
	}


}



class StatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_statement;
	}

	labeledStatement() {
		return this.getTypedRuleContext(LabeledStatementContext, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	selectionStatement() {
		return this.getTypedRuleContext(SelectionStatementContext, 0);
	};

	iterationStatement() {
		return this.getTypedRuleContext(IterationStatementContext, 0);
	};

	jumpStatement() {
		return this.getTypedRuleContext(JumpStatementContext, 0);
	};

	synchronizedStatement() {
		return this.getTypedRuleContext(SynchronizedStatementContext, 0);
	};

	autoreleaseStatement() {
		return this.getTypedRuleContext(AutoreleaseStatementContext, 0);
	};

	throwStatement() {
		return this.getTypedRuleContext(ThrowStatementContext, 0);
	};

	tryBlock() {
		return this.getTypedRuleContext(TryBlockContext, 0);
	};

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitStatement(this);
		}
	}


}



class LabeledStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_labeledStatement;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	statement() {
		return this.getTypedRuleContext(StatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterLabeledStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitLabeledStatement(this);
		}
	}


}



class RangeExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_rangeExpression;
	}

	constantExpression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ConstantExpressionContext);
		} else {
			return this.getTypedRuleContext(ConstantExpressionContext, i);
		}
	};

	ELIPSIS() {
		return this.getToken(ObjectiveCParser.ELIPSIS, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterRangeExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitRangeExpression(this);
		}
	}


}



class CompoundStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_compoundStatement;
	}

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	declaration = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(DeclarationContext);
		} else {
			return this.getTypedRuleContext(DeclarationContext, i);
		}
	};

	statement = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(StatementContext);
		} else {
			return this.getTypedRuleContext(StatementContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCompoundStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCompoundStatement(this);
		}
	}


}



class SelectionStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_selectionStatement;
		this.ifBody = null; // StatementContext
		this.elseBody = null; // StatementContext
	}

	IF() {
		return this.getToken(ObjectiveCParser.IF, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	statement = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(StatementContext);
		} else {
			return this.getTypedRuleContext(StatementContext, i);
		}
	};

	ELSE() {
		return this.getToken(ObjectiveCParser.ELSE, 0);
	};

	switchStatement() {
		return this.getTypedRuleContext(SwitchStatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSelectionStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSelectionStatement(this);
		}
	}


}



class SwitchStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_switchStatement;
	}

	SWITCH() {
		return this.getToken(ObjectiveCParser.SWITCH, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	switchBlock() {
		return this.getTypedRuleContext(SwitchBlockContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSwitchStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSwitchStatement(this);
		}
	}


}



class SwitchBlockContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_switchBlock;
	}

	LBRACE() {
		return this.getToken(ObjectiveCParser.LBRACE, 0);
	};

	RBRACE() {
		return this.getToken(ObjectiveCParser.RBRACE, 0);
	};

	switchSection = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(SwitchSectionContext);
		} else {
			return this.getTypedRuleContext(SwitchSectionContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSwitchBlock(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSwitchBlock(this);
		}
	}


}



class SwitchSectionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_switchSection;
	}

	switchLabel = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(SwitchLabelContext);
		} else {
			return this.getTypedRuleContext(SwitchLabelContext, i);
		}
	};

	statement = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(StatementContext);
		} else {
			return this.getTypedRuleContext(StatementContext, i);
		}
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSwitchSection(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSwitchSection(this);
		}
	}


}



class SwitchLabelContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_switchLabel;
	}

	CASE() {
		return this.getToken(ObjectiveCParser.CASE, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	rangeExpression() {
		return this.getTypedRuleContext(RangeExpressionContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	DEFAULT() {
		return this.getToken(ObjectiveCParser.DEFAULT, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterSwitchLabel(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitSwitchLabel(this);
		}
	}


}



class IterationStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_iterationStatement;
	}

	whileStatement() {
		return this.getTypedRuleContext(WhileStatementContext, 0);
	};

	doStatement() {
		return this.getTypedRuleContext(DoStatementContext, 0);
	};

	forStatement() {
		return this.getTypedRuleContext(ForStatementContext, 0);
	};

	forInStatement() {
		return this.getTypedRuleContext(ForInStatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterIterationStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitIterationStatement(this);
		}
	}


}



class WhileStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_whileStatement;
	}

	WHILE() {
		return this.getToken(ObjectiveCParser.WHILE, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	statement() {
		return this.getTypedRuleContext(StatementContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterWhileStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitWhileStatement(this);
		}
	}


}



class DoStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_doStatement;
	}

	DO() {
		return this.getToken(ObjectiveCParser.DO, 0);
	};

	statement() {
		return this.getTypedRuleContext(StatementContext, 0);
	};

	WHILE() {
		return this.getToken(ObjectiveCParser.WHILE, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	SEMI() {
		return this.getToken(ObjectiveCParser.SEMI, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterDoStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitDoStatement(this);
		}
	}


}



class ForStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_forStatement;
	}

	FOR() {
		return this.getToken(ObjectiveCParser.FOR, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	SEMI = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.SEMI);
		} else {
			return this.getToken(ObjectiveCParser.SEMI, i);
		}
	};


	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	statement() {
		return this.getTypedRuleContext(StatementContext, 0);
	};

	forLoopInitializer() {
		return this.getTypedRuleContext(ForLoopInitializerContext, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterForStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitForStatement(this);
		}
	}


}



class ForLoopInitializerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_forLoopInitializer;
	}

	declarationSpecifiers() {
		return this.getTypedRuleContext(DeclarationSpecifiersContext, 0);
	};

	initDeclaratorList() {
		return this.getTypedRuleContext(InitDeclaratorListContext, 0);
	};

	expressions() {
		return this.getTypedRuleContext(ExpressionsContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterForLoopInitializer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitForLoopInitializer(this);
		}
	}


}



class ForInStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_forInStatement;
	}

	FOR() {
		return this.getToken(ObjectiveCParser.FOR, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeVariableDeclarator() {
		return this.getTypedRuleContext(TypeVariableDeclaratorContext, 0);
	};

	IN() {
		return this.getToken(ObjectiveCParser.IN, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	statement() {
		return this.getTypedRuleContext(StatementContext, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterForInStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitForInStatement(this);
		}
	}


}



class JumpStatementContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_jumpStatement;
	}

	GOTO() {
		return this.getToken(ObjectiveCParser.GOTO, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	CONTINUE() {
		return this.getToken(ObjectiveCParser.CONTINUE, 0);
	};

	BREAK() {
		return this.getToken(ObjectiveCParser.BREAK, 0);
	};

	RETURN() {
		return this.getToken(ObjectiveCParser.RETURN, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterJumpStatement(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitJumpStatement(this);
		}
	}


}



class ExpressionsContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_expressions;
	}

	expression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ExpressionContext);
		} else {
			return this.getTypedRuleContext(ExpressionContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterExpressions(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitExpressions(this);
		}
	}


}



class ExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_expression;
		this.assignmentExpression = null; // ExpressionContext
		this.op = null; // Token
		this.trueExpression = null; // ExpressionContext
		this.falseExpression = null; // ExpressionContext
	}

	castExpression() {
		return this.getTypedRuleContext(CastExpressionContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	compoundStatement() {
		return this.getTypedRuleContext(CompoundStatementContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	unaryExpression() {
		return this.getTypedRuleContext(UnaryExpressionContext, 0);
	};

	assignmentOperator() {
		return this.getTypedRuleContext(AssignmentOperatorContext, 0);
	};

	expression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ExpressionContext);
		} else {
			return this.getTypedRuleContext(ExpressionContext, i);
		}
	};

	MUL() {
		return this.getToken(ObjectiveCParser.MUL, 0);
	};

	DIV() {
		return this.getToken(ObjectiveCParser.DIV, 0);
	};

	MOD() {
		return this.getToken(ObjectiveCParser.MOD, 0);
	};

	ADD() {
		return this.getToken(ObjectiveCParser.ADD, 0);
	};

	SUB() {
		return this.getToken(ObjectiveCParser.SUB, 0);
	};

	LT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.LT);
		} else {
			return this.getToken(ObjectiveCParser.LT, i);
		}
	};


	GT = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.GT);
		} else {
			return this.getToken(ObjectiveCParser.GT, i);
		}
	};


	LE() {
		return this.getToken(ObjectiveCParser.LE, 0);
	};

	GE() {
		return this.getToken(ObjectiveCParser.GE, 0);
	};

	NOTEQUAL() {
		return this.getToken(ObjectiveCParser.NOTEQUAL, 0);
	};

	EQUAL() {
		return this.getToken(ObjectiveCParser.EQUAL, 0);
	};

	BITAND() {
		return this.getToken(ObjectiveCParser.BITAND, 0);
	};

	BITXOR() {
		return this.getToken(ObjectiveCParser.BITXOR, 0);
	};

	BITOR() {
		return this.getToken(ObjectiveCParser.BITOR, 0);
	};

	AND() {
		return this.getToken(ObjectiveCParser.AND, 0);
	};

	OR() {
		return this.getToken(ObjectiveCParser.OR, 0);
	};

	QUESTION() {
		return this.getToken(ObjectiveCParser.QUESTION, 0);
	};

	COLON() {
		return this.getToken(ObjectiveCParser.COLON, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitExpression(this);
		}
	}


}



class AssignmentOperatorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_assignmentOperator;
	}

	ASSIGNMENT() {
		return this.getToken(ObjectiveCParser.ASSIGNMENT, 0);
	};

	MUL_ASSIGN() {
		return this.getToken(ObjectiveCParser.MUL_ASSIGN, 0);
	};

	DIV_ASSIGN() {
		return this.getToken(ObjectiveCParser.DIV_ASSIGN, 0);
	};

	MOD_ASSIGN() {
		return this.getToken(ObjectiveCParser.MOD_ASSIGN, 0);
	};

	ADD_ASSIGN() {
		return this.getToken(ObjectiveCParser.ADD_ASSIGN, 0);
	};

	SUB_ASSIGN() {
		return this.getToken(ObjectiveCParser.SUB_ASSIGN, 0);
	};

	LSHIFT_ASSIGN() {
		return this.getToken(ObjectiveCParser.LSHIFT_ASSIGN, 0);
	};

	RSHIFT_ASSIGN() {
		return this.getToken(ObjectiveCParser.RSHIFT_ASSIGN, 0);
	};

	AND_ASSIGN() {
		return this.getToken(ObjectiveCParser.AND_ASSIGN, 0);
	};

	XOR_ASSIGN() {
		return this.getToken(ObjectiveCParser.XOR_ASSIGN, 0);
	};

	OR_ASSIGN() {
		return this.getToken(ObjectiveCParser.OR_ASSIGN, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterAssignmentOperator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitAssignmentOperator(this);
		}
	}


}



class CastExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_castExpression;
	}

	unaryExpression() {
		return this.getTypedRuleContext(UnaryExpressionContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeName() {
		return this.getTypedRuleContext(TypeNameContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	castExpression() {
		return this.getTypedRuleContext(CastExpressionContext, 0);
	};

	initializer() {
		return this.getTypedRuleContext(InitializerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterCastExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitCastExpression(this);
		}
	}


}



class InitializerContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_initializer;
	}

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	arrayInitializer() {
		return this.getTypedRuleContext(ArrayInitializerContext, 0);
	};

	structInitializer() {
		return this.getTypedRuleContext(StructInitializerContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterInitializer(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitInitializer(this);
		}
	}


}



class ConstantExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_constantExpression;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterConstantExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitConstantExpression(this);
		}
	}


}



class UnaryExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_unaryExpression;
		this.op = null; // Token
	}

	postfixExpression() {
		return this.getTypedRuleContext(PostfixExpressionContext, 0);
	};

	SIZEOF() {
		return this.getToken(ObjectiveCParser.SIZEOF, 0);
	};

	unaryExpression() {
		return this.getTypedRuleContext(UnaryExpressionContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	INC() {
		return this.getToken(ObjectiveCParser.INC, 0);
	};

	DEC() {
		return this.getToken(ObjectiveCParser.DEC, 0);
	};

	unaryOperator() {
		return this.getTypedRuleContext(UnaryOperatorContext, 0);
	};

	castExpression() {
		return this.getTypedRuleContext(CastExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterUnaryExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitUnaryExpression(this);
		}
	}


}



class UnaryOperatorContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_unaryOperator;
	}

	BITAND() {
		return this.getToken(ObjectiveCParser.BITAND, 0);
	};

	MUL() {
		return this.getToken(ObjectiveCParser.MUL, 0);
	};

	ADD() {
		return this.getToken(ObjectiveCParser.ADD, 0);
	};

	SUB() {
		return this.getToken(ObjectiveCParser.SUB, 0);
	};

	TILDE() {
		return this.getToken(ObjectiveCParser.TILDE, 0);
	};

	BANG() {
		return this.getToken(ObjectiveCParser.BANG, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterUnaryOperator(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitUnaryOperator(this);
		}
	}


}



class PostfixExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_postfixExpression;
	}

	primaryExpression() {
		return this.getTypedRuleContext(PrimaryExpressionContext, 0);
	};

	postfix = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(PostfixContext);
		} else {
			return this.getTypedRuleContext(PostfixContext, i);
		}
	};

	postfixExpression() {
		return this.getTypedRuleContext(PostfixExpressionContext, 0);
	};

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	DOT() {
		return this.getToken(ObjectiveCParser.DOT, 0);
	};

	STRUCTACCESS() {
		return this.getToken(ObjectiveCParser.STRUCTACCESS, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPostfixExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPostfixExpression(this);
		}
	}


}



class PostfixContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_postfix;
		this._RP = null; // Token
		this.macroArguments = []; // of Tokens
		this._tset3557 = null; // Token
		this.op = null; // Token
	}

	LBRACK() {
		return this.getToken(ObjectiveCParser.LBRACK, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RBRACK() {
		return this.getToken(ObjectiveCParser.RBRACK, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.RP);
		} else {
			return this.getToken(ObjectiveCParser.RP, i);
		}
	};


	argumentExpressionList() {
		return this.getTypedRuleContext(ArgumentExpressionListContext, 0);
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	INC() {
		return this.getToken(ObjectiveCParser.INC, 0);
	};

	DEC() {
		return this.getToken(ObjectiveCParser.DEC, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPostfix(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPostfix(this);
		}
	}


}



class ArgumentExpressionListContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_argumentExpressionList;
	}

	argumentExpression = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTypedRuleContexts(ArgumentExpressionContext);
		} else {
			return this.getTypedRuleContext(ArgumentExpressionContext, i);
		}
	};

	COMMA = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.COMMA);
		} else {
			return this.getToken(ObjectiveCParser.COMMA, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterArgumentExpressionList(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitArgumentExpressionList(this);
		}
	}


}



class ArgumentExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_argumentExpression;
	}

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	typeSpecifier() {
		return this.getTypedRuleContext(TypeSpecifierContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterArgumentExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitArgumentExpression(this);
		}
	}


}



class OsVersionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_osVersion;
		this.os = null; // IdentifierContext
		this.min = null; // Token
		this.max = null; // Token
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	FLOATING_POINT_LITERAL = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.FLOATING_POINT_LITERAL);
		} else {
			return this.getToken(ObjectiveCParser.FLOATING_POINT_LITERAL, i);
		}
	};


	VERSION_SEMATIC = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.VERSION_SEMATIC);
		} else {
			return this.getToken(ObjectiveCParser.VERSION_SEMATIC, i);
		}
	};


	IDENTIFIER = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.IDENTIFIER);
		} else {
			return this.getToken(ObjectiveCParser.IDENTIFIER, i);
		}
	};


	COMMA() {
		return this.getToken(ObjectiveCParser.COMMA, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterOsVersion(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitOsVersion(this);
		}
	}


}



class PrimaryExpressionContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_primaryExpression;
	}

	identifier() {
		return this.getTypedRuleContext(IdentifierContext, 0);
	};

	constant() {
		return this.getTypedRuleContext(ConstantContext, 0);
	};

	stringLiteral() {
		return this.getTypedRuleContext(StringLiteralContext, 0);
	};

	LP() {
		return this.getToken(ObjectiveCParser.LP, 0);
	};

	expression() {
		return this.getTypedRuleContext(ExpressionContext, 0);
	};

	RP() {
		return this.getToken(ObjectiveCParser.RP, 0);
	};

	messageExpression() {
		return this.getTypedRuleContext(MessageExpressionContext, 0);
	};

	selectorExpression() {
		return this.getTypedRuleContext(SelectorExpressionContext, 0);
	};

	protocolExpression() {
		return this.getTypedRuleContext(ProtocolExpressionContext, 0);
	};

	encodeExpression() {
		return this.getTypedRuleContext(EncodeExpressionContext, 0);
	};

	dictionaryExpression() {
		return this.getTypedRuleContext(DictionaryExpressionContext, 0);
	};

	arrayExpression() {
		return this.getTypedRuleContext(ArrayExpressionContext, 0);
	};

	boxExpression() {
		return this.getTypedRuleContext(BoxExpressionContext, 0);
	};

	blockExpression() {
		return this.getTypedRuleContext(BlockExpressionContext, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterPrimaryExpression(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitPrimaryExpression(this);
		}
	}


}



class ConstantContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_constant;
	}

	HEX_LITERAL() {
		return this.getToken(ObjectiveCParser.HEX_LITERAL, 0);
	};

	OCTAL_LITERAL() {
		return this.getToken(ObjectiveCParser.OCTAL_LITERAL, 0);
	};

	BINARY_LITERAL() {
		return this.getToken(ObjectiveCParser.BINARY_LITERAL, 0);
	};

	DECIMAL_LITERAL() {
		return this.getToken(ObjectiveCParser.DECIMAL_LITERAL, 0);
	};

	ADD() {
		return this.getToken(ObjectiveCParser.ADD, 0);
	};

	SUB() {
		return this.getToken(ObjectiveCParser.SUB, 0);
	};

	FLOATING_POINT_LITERAL() {
		return this.getToken(ObjectiveCParser.FLOATING_POINT_LITERAL, 0);
	};

	CHARACTER_LITERAL() {
		return this.getToken(ObjectiveCParser.CHARACTER_LITERAL, 0);
	};

	NIL() {
		return this.getToken(ObjectiveCParser.NIL, 0);
	};

	NULL() {
		return this.getToken(ObjectiveCParser.NULL, 0);
	};

	YES() {
		return this.getToken(ObjectiveCParser.YES, 0);
	};

	NO() {
		return this.getToken(ObjectiveCParser.NO, 0);
	};

	TRUE() {
		return this.getToken(ObjectiveCParser.TRUE, 0);
	};

	FALSE() {
		return this.getToken(ObjectiveCParser.FALSE, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterConstant(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitConstant(this);
		}
	}


}



class StringLiteralContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_stringLiteral;
	}

	STRING_START = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.STRING_START);
		} else {
			return this.getToken(ObjectiveCParser.STRING_START, i);
		}
	};


	STRING_END = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.STRING_END);
		} else {
			return this.getToken(ObjectiveCParser.STRING_END, i);
		}
	};


	STRING_VALUE = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.STRING_VALUE);
		} else {
			return this.getToken(ObjectiveCParser.STRING_VALUE, i);
		}
	};


	STRING_NEWLINE = function (i) {
		if (i === undefined) {
			i = null;
		}
		if (i === null) {
			return this.getTokens(ObjectiveCParser.STRING_NEWLINE);
		} else {
			return this.getToken(ObjectiveCParser.STRING_NEWLINE, i);
		}
	};


	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterStringLiteral(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitStringLiteral(this);
		}
	}


}



class IdentifierContext extends antlr4.ParserRuleContext {

	constructor(parser, parent, invokingState) {
		if (parent === undefined) {
			parent = null;
		}
		if (invokingState === undefined || invokingState === null) {
			invokingState = -1;
		}
		super(parent, invokingState);
		this.parser = parser;
		this.ruleIndex = ObjectiveCParser.RULE_identifier;
	}

	IDENTIFIER() {
		return this.getToken(ObjectiveCParser.IDENTIFIER, 0);
	};

	BOOL() {
		return this.getToken(ObjectiveCParser.BOOL, 0);
	};

	Class() {
		return this.getToken(ObjectiveCParser.Class, 0);
	};

	BYCOPY() {
		return this.getToken(ObjectiveCParser.BYCOPY, 0);
	};

	BYREF() {
		return this.getToken(ObjectiveCParser.BYREF, 0);
	};

	ID() {
		return this.getToken(ObjectiveCParser.ID, 0);
	};

	IMP() {
		return this.getToken(ObjectiveCParser.IMP, 0);
	};

	IN() {
		return this.getToken(ObjectiveCParser.IN, 0);
	};

	INOUT() {
		return this.getToken(ObjectiveCParser.INOUT, 0);
	};

	ONEWAY() {
		return this.getToken(ObjectiveCParser.ONEWAY, 0);
	};

	OUT() {
		return this.getToken(ObjectiveCParser.OUT, 0);
	};

	PROTOCOL_() {
		return this.getToken(ObjectiveCParser.PROTOCOL_, 0);
	};

	SEL() {
		return this.getToken(ObjectiveCParser.SEL, 0);
	};

	SELF() {
		return this.getToken(ObjectiveCParser.SELF, 0);
	};

	SUPER() {
		return this.getToken(ObjectiveCParser.SUPER, 0);
	};

	ATOMIC() {
		return this.getToken(ObjectiveCParser.ATOMIC, 0);
	};

	NONATOMIC() {
		return this.getToken(ObjectiveCParser.NONATOMIC, 0);
	};

	RETAIN() {
		return this.getToken(ObjectiveCParser.RETAIN, 0);
	};

	AUTORELEASING_QUALIFIER() {
		return this.getToken(ObjectiveCParser.AUTORELEASING_QUALIFIER, 0);
	};

	BLOCK() {
		return this.getToken(ObjectiveCParser.BLOCK, 0);
	};

	BRIDGE_RETAINED() {
		return this.getToken(ObjectiveCParser.BRIDGE_RETAINED, 0);
	};

	BRIDGE_TRANSFER() {
		return this.getToken(ObjectiveCParser.BRIDGE_TRANSFER, 0);
	};

	COVARIANT() {
		return this.getToken(ObjectiveCParser.COVARIANT, 0);
	};

	CONTRAVARIANT() {
		return this.getToken(ObjectiveCParser.CONTRAVARIANT, 0);
	};

	DEPRECATED() {
		return this.getToken(ObjectiveCParser.DEPRECATED, 0);
	};

	KINDOF() {
		return this.getToken(ObjectiveCParser.KINDOF, 0);
	};

	UNUSED() {
		return this.getToken(ObjectiveCParser.UNUSED, 0);
	};

	NS_INLINE() {
		return this.getToken(ObjectiveCParser.NS_INLINE, 0);
	};

	NS_ENUM() {
		return this.getToken(ObjectiveCParser.NS_ENUM, 0);
	};

	NS_OPTIONS() {
		return this.getToken(ObjectiveCParser.NS_OPTIONS, 0);
	};

	NULL_UNSPECIFIED() {
		return this.getToken(ObjectiveCParser.NULL_UNSPECIFIED, 0);
	};

	NULLABLE() {
		return this.getToken(ObjectiveCParser.NULLABLE, 0);
	};

	NONNULL() {
		return this.getToken(ObjectiveCParser.NONNULL, 0);
	};

	NULL_RESETTABLE() {
		return this.getToken(ObjectiveCParser.NULL_RESETTABLE, 0);
	};

	ASSIGN() {
		return this.getToken(ObjectiveCParser.ASSIGN, 0);
	};

	COPY() {
		return this.getToken(ObjectiveCParser.COPY, 0);
	};

	GETTER() {
		return this.getToken(ObjectiveCParser.GETTER, 0);
	};

	SETTER() {
		return this.getToken(ObjectiveCParser.SETTER, 0);
	};

	STRONG() {
		return this.getToken(ObjectiveCParser.STRONG, 0);
	};

	READONLY() {
		return this.getToken(ObjectiveCParser.READONLY, 0);
	};

	READWRITE() {
		return this.getToken(ObjectiveCParser.READWRITE, 0);
	};

	WEAK() {
		return this.getToken(ObjectiveCParser.WEAK, 0);
	};

	UNSAFE_UNRETAINED() {
		return this.getToken(ObjectiveCParser.UNSAFE_UNRETAINED, 0);
	};

	IB_OUTLET() {
		return this.getToken(ObjectiveCParser.IB_OUTLET, 0);
	};

	IB_OUTLET_COLLECTION() {
		return this.getToken(ObjectiveCParser.IB_OUTLET_COLLECTION, 0);
	};

	IB_INSPECTABLE() {
		return this.getToken(ObjectiveCParser.IB_INSPECTABLE, 0);
	};

	IB_DESIGNABLE() {
		return this.getToken(ObjectiveCParser.IB_DESIGNABLE, 0);
	};

	enterRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.enterIdentifier(this);
		}
	}

	exitRule(listener) {
		if (listener instanceof ObjectiveCParserListener) {
			listener.exitIdentifier(this);
		}
	}


}




ObjectiveCParser.TranslationUnitContext = TranslationUnitContext;
ObjectiveCParser.TopLevelDeclarationContext = TopLevelDeclarationContext;
ObjectiveCParser.ImportDeclarationContext = ImportDeclarationContext;
ObjectiveCParser.ClassInterfaceContext = ClassInterfaceContext;
ObjectiveCParser.CategoryInterfaceContext = CategoryInterfaceContext;
ObjectiveCParser.ClassImplementationContext = ClassImplementationContext;
ObjectiveCParser.CategoryImplementationContext = CategoryImplementationContext;
ObjectiveCParser.GenericTypeSpecifierContext = GenericTypeSpecifierContext;
ObjectiveCParser.ProtocolDeclarationContext = ProtocolDeclarationContext;
ObjectiveCParser.ProtocolDeclarationSectionContext = ProtocolDeclarationSectionContext;
ObjectiveCParser.ProtocolDeclarationListContext = ProtocolDeclarationListContext;
ObjectiveCParser.ClassDeclarationContext = ClassDeclarationContext;
ObjectiveCParser.ClassDeclarationListContext = ClassDeclarationListContext;
ObjectiveCParser.ProtocolListContext = ProtocolListContext;
ObjectiveCParser.PropertyDeclarationContext = PropertyDeclarationContext;
ObjectiveCParser.PropertyAttributesListContext = PropertyAttributesListContext;
ObjectiveCParser.PropertyAttributeContext = PropertyAttributeContext;
ObjectiveCParser.ProtocolNameContext = ProtocolNameContext;
ObjectiveCParser.InstanceVariablesContext = InstanceVariablesContext;
ObjectiveCParser.VisibilitySectionContext = VisibilitySectionContext;
ObjectiveCParser.AccessModifierContext = AccessModifierContext;
ObjectiveCParser.InterfaceDeclarationListContext = InterfaceDeclarationListContext;
ObjectiveCParser.ClassMethodDeclarationContext = ClassMethodDeclarationContext;
ObjectiveCParser.InstanceMethodDeclarationContext = InstanceMethodDeclarationContext;
ObjectiveCParser.MethodDeclarationContext = MethodDeclarationContext;
ObjectiveCParser.ImplementationDefinitionListContext = ImplementationDefinitionListContext;
ObjectiveCParser.ClassMethodDefinitionContext = ClassMethodDefinitionContext;
ObjectiveCParser.InstanceMethodDefinitionContext = InstanceMethodDefinitionContext;
ObjectiveCParser.MethodDefinitionContext = MethodDefinitionContext;
ObjectiveCParser.MethodSelectorContext = MethodSelectorContext;
ObjectiveCParser.KeywordDeclaratorContext = KeywordDeclaratorContext;
ObjectiveCParser.SelectorContext = SelectorContext;
ObjectiveCParser.MethodTypeContext = MethodTypeContext;
ObjectiveCParser.PropertyImplementationContext = PropertyImplementationContext;
ObjectiveCParser.PropertySynthesizeListContext = PropertySynthesizeListContext;
ObjectiveCParser.PropertySynthesizeItemContext = PropertySynthesizeItemContext;
ObjectiveCParser.BlockTypeContext = BlockTypeContext;
ObjectiveCParser.GenericsSpecifierContext = GenericsSpecifierContext;
ObjectiveCParser.TypeSpecifierWithPrefixesContext = TypeSpecifierWithPrefixesContext;
ObjectiveCParser.DictionaryExpressionContext = DictionaryExpressionContext;
ObjectiveCParser.DictionaryPairContext = DictionaryPairContext;
ObjectiveCParser.ArrayExpressionContext = ArrayExpressionContext;
ObjectiveCParser.BoxExpressionContext = BoxExpressionContext;
ObjectiveCParser.BlockParametersContext = BlockParametersContext;
ObjectiveCParser.TypeVariableDeclaratorOrNameContext = TypeVariableDeclaratorOrNameContext;
ObjectiveCParser.BlockExpressionContext = BlockExpressionContext;
ObjectiveCParser.MessageExpressionContext = MessageExpressionContext;
ObjectiveCParser.ReceiverContext = ReceiverContext;
ObjectiveCParser.MessageSelectorContext = MessageSelectorContext;
ObjectiveCParser.KeywordArgumentContext = KeywordArgumentContext;
ObjectiveCParser.KeywordArgumentTypeContext = KeywordArgumentTypeContext;
ObjectiveCParser.SelectorExpressionContext = SelectorExpressionContext;
ObjectiveCParser.SelectorNameContext = SelectorNameContext;
ObjectiveCParser.ProtocolExpressionContext = ProtocolExpressionContext;
ObjectiveCParser.EncodeExpressionContext = EncodeExpressionContext;
ObjectiveCParser.TypeVariableDeclaratorContext = TypeVariableDeclaratorContext;
ObjectiveCParser.ThrowStatementContext = ThrowStatementContext;
ObjectiveCParser.TryBlockContext = TryBlockContext;
ObjectiveCParser.CatchStatementContext = CatchStatementContext;
ObjectiveCParser.SynchronizedStatementContext = SynchronizedStatementContext;
ObjectiveCParser.AutoreleaseStatementContext = AutoreleaseStatementContext;
ObjectiveCParser.FunctionDeclarationContext = FunctionDeclarationContext;
ObjectiveCParser.FunctionDefinitionContext = FunctionDefinitionContext;
ObjectiveCParser.FunctionSignatureContext = FunctionSignatureContext;
ObjectiveCParser.FunctionPointerContext = FunctionPointerContext;
ObjectiveCParser.AttributeContext = AttributeContext;
ObjectiveCParser.AttributeNameContext = AttributeNameContext;
ObjectiveCParser.AttributeParametersContext = AttributeParametersContext;
ObjectiveCParser.AttributeParameterListContext = AttributeParameterListContext;
ObjectiveCParser.AttributeParameterContext = AttributeParameterContext;
ObjectiveCParser.AttributeParameterAssignmentContext = AttributeParameterAssignmentContext;
ObjectiveCParser.DeclarationContext = DeclarationContext;
ObjectiveCParser.FunctionCallExpressionContext = FunctionCallExpressionContext;
ObjectiveCParser.EnumDeclarationContext = EnumDeclarationContext;
ObjectiveCParser.VarDeclarationContext = VarDeclarationContext;
ObjectiveCParser.TypedefDeclarationContext = TypedefDeclarationContext;
ObjectiveCParser.TypeDeclaratorListContext = TypeDeclaratorListContext;
ObjectiveCParser.TypeDeclaratorContext = TypeDeclaratorContext;
ObjectiveCParser.CommonSpecifiersContext = CommonSpecifiersContext;
ObjectiveCParser.DeclarationSpecifiersContext = DeclarationSpecifiersContext;
ObjectiveCParser.PointerQualifierContext = PointerQualifierContext;
ObjectiveCParser.AttributeSpecifierContext = AttributeSpecifierContext;
ObjectiveCParser.InitDeclaratorListContext = InitDeclaratorListContext;
ObjectiveCParser.InitDeclaratorContext = InitDeclaratorContext;
ObjectiveCParser.StructOrUnionSpecifierContext = StructOrUnionSpecifierContext;
ObjectiveCParser.FieldDeclarationContext = FieldDeclarationContext;
ObjectiveCParser.SpecifierQualifierListContext = SpecifierQualifierListContext;
ObjectiveCParser.IbOutletQualifierContext = IbOutletQualifierContext;
ObjectiveCParser.ArcBehaviourSpecifierContext = ArcBehaviourSpecifierContext;
ObjectiveCParser.NullabilitySpecifierContext = NullabilitySpecifierContext;
ObjectiveCParser.StorageClassSpecifierContext = StorageClassSpecifierContext;
ObjectiveCParser.TypePrefixContext = TypePrefixContext;
ObjectiveCParser.TypeQualifierContext = TypeQualifierContext;
ObjectiveCParser.ProtocolQualifierContext = ProtocolQualifierContext;
ObjectiveCParser.TypeSpecifierContext = TypeSpecifierContext;
ObjectiveCParser.TypeofExpressionContext = TypeofExpressionContext;
ObjectiveCParser.FieldDeclaratorListContext = FieldDeclaratorListContext;
ObjectiveCParser.FieldDeclaratorContext = FieldDeclaratorContext;
ObjectiveCParser.EnumSpecifierContext = EnumSpecifierContext;
ObjectiveCParser.EnumeratorListContext = EnumeratorListContext;
ObjectiveCParser.EnumeratorContext = EnumeratorContext;
ObjectiveCParser.EnumeratorIdentifierContext = EnumeratorIdentifierContext;
ObjectiveCParser.DirectDeclaratorContext = DirectDeclaratorContext;
ObjectiveCParser.DeclaratorSuffixContext = DeclaratorSuffixContext;
ObjectiveCParser.ParameterListContext = ParameterListContext;
ObjectiveCParser.PointerContext = PointerContext;
ObjectiveCParser.MacroContext = MacroContext;
ObjectiveCParser.ArrayInitializerContext = ArrayInitializerContext;
ObjectiveCParser.StructInitializerContext = StructInitializerContext;
ObjectiveCParser.InitializerListContext = InitializerListContext;
ObjectiveCParser.TypeNameContext = TypeNameContext;
ObjectiveCParser.AbstractDeclaratorContext = AbstractDeclaratorContext;
ObjectiveCParser.AbstractDeclaratorSuffixContext = AbstractDeclaratorSuffixContext;
ObjectiveCParser.ParameterDeclarationListContext = ParameterDeclarationListContext;
ObjectiveCParser.ParameterDeclarationContext = ParameterDeclarationContext;
ObjectiveCParser.DeclaratorContext = DeclaratorContext;
ObjectiveCParser.StatementContext = StatementContext;
ObjectiveCParser.LabeledStatementContext = LabeledStatementContext;
ObjectiveCParser.RangeExpressionContext = RangeExpressionContext;
ObjectiveCParser.CompoundStatementContext = CompoundStatementContext;
ObjectiveCParser.SelectionStatementContext = SelectionStatementContext;
ObjectiveCParser.SwitchStatementContext = SwitchStatementContext;
ObjectiveCParser.SwitchBlockContext = SwitchBlockContext;
ObjectiveCParser.SwitchSectionContext = SwitchSectionContext;
ObjectiveCParser.SwitchLabelContext = SwitchLabelContext;
ObjectiveCParser.IterationStatementContext = IterationStatementContext;
ObjectiveCParser.WhileStatementContext = WhileStatementContext;
ObjectiveCParser.DoStatementContext = DoStatementContext;
ObjectiveCParser.ForStatementContext = ForStatementContext;
ObjectiveCParser.ForLoopInitializerContext = ForLoopInitializerContext;
ObjectiveCParser.ForInStatementContext = ForInStatementContext;
ObjectiveCParser.JumpStatementContext = JumpStatementContext;
ObjectiveCParser.ExpressionsContext = ExpressionsContext;
ObjectiveCParser.ExpressionContext = ExpressionContext;
ObjectiveCParser.AssignmentOperatorContext = AssignmentOperatorContext;
ObjectiveCParser.CastExpressionContext = CastExpressionContext;
ObjectiveCParser.InitializerContext = InitializerContext;
ObjectiveCParser.ConstantExpressionContext = ConstantExpressionContext;
ObjectiveCParser.UnaryExpressionContext = UnaryExpressionContext;
ObjectiveCParser.UnaryOperatorContext = UnaryOperatorContext;
ObjectiveCParser.PostfixExpressionContext = PostfixExpressionContext;
ObjectiveCParser.PostfixContext = PostfixContext;
ObjectiveCParser.ArgumentExpressionListContext = ArgumentExpressionListContext;
ObjectiveCParser.ArgumentExpressionContext = ArgumentExpressionContext;
ObjectiveCParser.OsVersionContext = OsVersionContext;
ObjectiveCParser.PrimaryExpressionContext = PrimaryExpressionContext;
ObjectiveCParser.ConstantContext = ConstantContext;
ObjectiveCParser.StringLiteralContext = StringLiteralContext;
ObjectiveCParser.IdentifierContext = IdentifierContext; 
